syntax = "proto3";

option csharp_namespace = "FSRAas.GRPC.Lib.V3.Services.SubmodelService";

import "Protos/AasModels.V3.proto";
import "Protos/AasApiModels.V3.proto";

package FSRAas.GRPC.Lib.V3;

/* SubmodelService */

message GetSubmodelRpcRequest {
    string submodelId = 1;
    OutputModifier outputModifier = 2;
}
message GetSubmodelRpcResponse {
    int32 statusCode = 1;
    SubmodelDTO payload = 2;
    ReferenceDTO reference = 3;
}


message GetAllSubmodelElementsRpcRequest {
    string submodelId = 1;
    OutputModifier outputModifier = 2;
}
message GetAllSubmodelElementsRpcResponse {
    int32 statusCode = 1;
    PagedResultPagingMetadata pagingMetaData = 2; 
    repeated SubmodelElementDTO payload = 3;
    repeated string value = 4;
    repeated ReferenceDTO reference = 5;
    repeated string path = 6;
}

message GetSubmodelElementByPathRpcRequest {
    string submodelId = 1;
    repeated KeyDTO path = 2;
    OutputModifier outputModifier = 3;
}
message GetSubmodelElementByPathRpcResponse {
    int32 statusCode = 1;
    SubmodelElementDTO payload = 2;
    string value = 3;
    ReferenceDTO reference = 4;
    string path = 5;
}

message PutSubmodelRpcRequest {
    string submodelId = 1;
    SubmodelDTO submodel = 2;
}
message PutSubmodelRpcResponse {
    int32 statusCode = 1;
    SubmodelDTO submodel = 2;
}

message PostSubmodelElementRpcRequest {
    string submodelId = 1;
    SubmodelElementDTO submodelElement = 2;
}
message PostSubmodelElementRpcResponse {
    int32 statusCode = 1;
    SubmodelElementDTO submodelElement = 2;
}

message PostSubmodelElementByPathRpcRequest {
    string submodelId = 1;
    repeated KeyDTO path = 2;
    SubmodelElementDTO submodelElement = 3;
}
message PostSubmodelElementByPathRpcResponse {
    int32 statusCode = 1;
    SubmodelElementDTO submodelElement = 2;
}

message PutSubmodelElementByPathRpcRequest {
    string submodelId = 1;
    repeated KeyDTO path = 2;
    SubmodelElementDTO submodelElement = 3;
}
message PutSubmodelElementByPathRpcResponse {
    int32 statusCode = 1;
    SubmodelElementDTO submodelElement = 2;
}

message SetSubmodelElementValueByPathRpcRequest {
    string submodelId = 1;
    repeated KeyDTO path = 2;
    string value = 3;
}
message SetSubmodelElementValueByPathRpcResponse {
    int32 statusCode = 1;
}

message DeleteSubmodelElementByPathRpcRequest {
    string submodelId = 1;
    repeated KeyDTO path = 2;
}
message DeleteSubmodelElementByPathRpcResponse {
    int32 statusCode = 1;
}

message InvokeOperationSyncRequest {
    string submodelId = 1;
    repeated KeyDTO path = 2;
    repeated OperationVariableDTO inputArguments = 3;
    repeated OperationVariableDTO inoutputArguments = 4;
    int32 timestamp = 5;
    string requestId = 6;
}
message InvokeOperationSyncResponse {
    int32 statusCode = 1;
    OperationResult payload = 2;
}

message InvokeOperationAsyncRequest {
    string submodelId = 1;
    repeated KeyDTO path = 2;
    repeated OperationVariableDTO inputArguments = 3;
    repeated OperationVariableDTO inoutputArguments = 4;
    int32 timestamp = 5;
    string requestId = 6;
}
message InvokeOperationAsyncResponse {
    int32 statusCode = 1;
    string payload = 2;
}

message GetOperationAsyncResultRequest {
    string handleId = 1;
}
message GetOperationAsyncResultResponse {
    int32 statusCode = 1;
    OperationResult result = 2;
}

service SubmodelService {
    rpc GetSubmodel (GetSubmodelRpcRequest) returns (GetSubmodelRpcResponse);
    rpc GetAllSubmodelElements (GetAllSubmodelElementsRpcRequest) returns (GetAllSubmodelElementsRpcResponse);
    rpc GetSubmodelElementByPath (GetSubmodelElementByPathRpcRequest) returns (GetSubmodelElementByPathRpcResponse);
    rpc PutSubmodel (PutSubmodelRpcRequest) returns (PutSubmodelRpcResponse);
    rpc PostSubmodelElement (PostSubmodelElementRpcRequest) returns (PostSubmodelElementRpcResponse);
    rpc PostSubmodelElementByPath (PostSubmodelElementByPathRpcRequest) returns (PostSubmodelElementByPathRpcResponse);
    rpc PutSubmodelElementByPath (PutSubmodelElementByPathRpcRequest) returns (PutSubmodelElementByPathRpcResponse);
    rpc SetSubmodelElementValueByPath (SetSubmodelElementValueByPathRpcRequest) returns (SetSubmodelElementValueByPathRpcResponse);
    rpc DeleteSubmodelElementByPath (DeleteSubmodelElementByPathRpcRequest) returns (DeleteSubmodelElementByPathRpcResponse);
    rpc InvokeOperationSync (InvokeOperationSyncRequest) returns (InvokeOperationSyncResponse);
    rpc InvokeOperationAsync (InvokeOperationAsyncRequest) returns (InvokeOperationAsyncResponse);
    rpc GetOperationAsyncResult (GetOperationAsyncResultRequest) returns (GetOperationAsyncResultResponse);
}