syntax = "proto3";

option csharp_namespace = "FSR.GRPC.V3.Services.AssetAdministrationShellService";

import "Protos/AasModels.V3.proto";
import "Protos/AasApiModels.V3.proto";

package FSR.GRPC.V3;

/* AssetAdministrationShellService */

message GetAssetAdministrationShellRpcRequest {
    string id = 1;
    OutputModifier outputModifier = 2;
}
message GetAssetAdministrationShellRpcResponse {
    int32 statusCode = 1;
    AssetAdministrationShellModel payload = 2;
    ReferenceModel reference = 3;
}

message PutAssetAdministrationShellRpcRequest {
    string id = 1;
    AssetAdministrationShellModel aas = 2;
}
message PutAssetAdministrationShellRpcResponse {
    int32 statusCode = 1;
    AssetAdministrationShellModel aas = 2;
}

message GetAllSubmodelReferencesRpcRequest {
    string id = 1;
    OutputModifier outputModifier = 2;
}
message GetAllSubmodelReferencesRpcResponse {
    int32 statusCode = 1;
    PagedResultPagingMetadata pagingMetaData = 2;
    repeated ReferenceModel payload = 3;
}

message PostSubmodelReferenceRpcRequest {
    string id = 1;
    ReferenceModel submodelRef = 2;
}
message PostSubmodelReferenceRpcResponse {
    int32 statusCode = 1;
    ReferenceModel submodelRef = 2;
}

message DeleteSubmodelReferenceRpcRequest {
    string id = 1;
    string submodelId = 2;
}
message DeleteSubmodelReferenceRpcResponse {
    int32 statusCode = 1;
}

message GetAssetInformationRpcRequest {
    string id = 1;
}
message GetAssetInformationRpcResponse {
    int32 statusCode = 1;
    AssetInformationModel assetInformation = 2;
}

message PutAssetInformationRpcRequest {
    string id = 1;
    AssetInformationModel assetInformation = 2;
}
message PutAssetInformationRpcResponse {
    int32 statusCode = 1;
    AssetInformationModel assetInformation = 2;
}

service AssetAdministrationShellService {
    rpc GetAssetAdministrationShell (GetAssetAdministrationShellRpcRequest) returns (GetAssetAdministrationShellRpcResponse);
    rpc PutAssetAdministrationShell (PutAssetAdministrationShellRpcRequest) returns (PutAssetAdministrationShellRpcResponse);
    rpc GetAllSubmodelReferences (GetAllSubmodelReferencesRpcRequest) returns (GetAllSubmodelReferencesRpcResponse);
    rpc PostSubmodelReference (PostSubmodelReferenceRpcRequest) returns (PostSubmodelReferenceRpcResponse);
    rpc DeleteSubmodelReference (DeleteSubmodelReferenceRpcRequest) returns (DeleteSubmodelReferenceRpcResponse);
    rpc GetAssetInformation (GetAssetInformationRpcRequest) returns (GetAssetInformationRpcResponse);
    rpc PutAssetInformation (PutAssetInformationRpcRequest) returns (PutAssetInformationRpcResponse);
}