syntax = "proto3";

option csharp_namespace = "FSR.GRPC.V3.Services.SubmodelRepository";

import "Protos/AasModels.V3.proto";
import "Protos/AasApiModels.V3.proto";

package FSR.GRPC.V3;

/* SubmodelRepositoryService */

message GetAllSubmodelsRpcRequest {
    OutputModifier outputModifier = 1;
}
message GetAllSubmodelsRpcResponse {
    int32 statusCode = 1;
    PagedResultPagingMetadata pagingMetaData = 2; 
    repeated SubmodelModel payload = 3;
    repeated ReferenceModel reference = 4;
}

message GetSubmodelByIdRpcRequest {
    string id = 1;
    OutputModifier outputModifier = 2;
}
message GetSubmodelByIdRpcResponse {
    int32 statusCode = 1;
    SubmodelModel payload = 2;
    ReferenceModel reference = 3;
}

message GetAllSubmodelsBySemanticIdRpcRequest {
    ReferenceModel semanticId = 1;
    OutputModifier outputModifier = 2;
}
message GetAllSubmodelsBySemanticIdRpcResponse {
    int32 statusCode = 1;
    PagedResultPagingMetadata pagingMetaData = 2; 
    repeated SubmodelModel payload = 3;
    repeated ReferenceModel reference = 4;
}

message GetAllSubmodelsByIdShortRpcRequest {
    string idShort = 1;
    OutputModifier outputModifier = 2;
}
message GetAllSubmodelsByIdShortRpcResponse {
    int32 statusCode = 1;
    PagedResultPagingMetadata pagingMetaData = 2; 
    repeated SubmodelModel payload = 3;
    repeated ReferenceModel reference = 4;
}

message PostSubmodelRpcRequest {
    SubmodelModel submodel = 1;
    string aasIdentifier = 2;
}
message PostSubmodelRpcResponse {
    int32 statusCode = 1;
    SubmodelModel submodel = 2;
}

message PutSubmodelByIdRpcRequest {
    SubmodelModel submodel = 1;
}
message PutSubmodelByIdRpcResponse {
    int32 statusCode = 1;
    SubmodelModel submodel = 2;
}

message DeleteSubmodelByIdRpcRequest {
    string id = 1;
}
message DeleteSubmodelByIdRpcResponse {
    int32 statusCode = 1;
}

service SubmodelRepositoryService {
    rpc GetAllSubmodels (GetAllSubmodelsRpcRequest) returns (GetAllSubmodelsRpcResponse);
    rpc GetSubmodelById (GetSubmodelByIdRpcRequest) returns (GetSubmodelByIdRpcResponse);
    rpc GetAllSubmodelsBySemanticId (GetAllSubmodelsBySemanticIdRpcRequest) returns (GetAllSubmodelsBySemanticIdRpcResponse);
    rpc GetAllSubmodelsByIdShort (GetAllSubmodelsByIdShortRpcRequest) returns (GetAllSubmodelsByIdShortRpcResponse);
    rpc PostSubmodel (PostSubmodelRpcRequest) returns (PostSubmodelRpcResponse);
    rpc PutSubmodelById (PutSubmodelByIdRpcRequest) returns (PutSubmodelByIdRpcResponse);
    rpc DeleteSubmodelById (DeleteSubmodelByIdRpcRequest) returns (DeleteSubmodelByIdRpcResponse);
}