syntax = "proto3";

option csharp_namespace = "FSR.GRPC.V3";

package FSR.GRPC.V3;

/* Profbuf example */

// message Foo {
//   bool bar = 1;
// }

// message TestModel {
//   repeated Foo foo = 1;
//   string teststr = 2;
// }

/* AAS Models V3 */

message ExtensionModel {
  ReferenceModel semanticId = 1;
  repeated ReferenceModel supplementalSemanticIds = 2;
  string name = 3;
  DataTypeDefXsd valueType = 4;
  string value = 5;
  repeated ReferenceModel refersTo = 6;
}

enum ModellingKind {
  MODELLING_KIND_TEMPLATE = 0;
  MODELLING_KIND_INSTANCE = 1;
}

message AdministrativeInformationModel {
  repeated EmbeddedDataSpecificationModel embeddedDataSpecifications = 1;
  string version = 2;
  string revision = 3;
  ReferenceModel creator = 4;
  string templateId = 5;
}

enum QualifierKind {
  QUALIFIER_KIND_VALUE_QUALIFIER = 0;
  QUALIFIER_KIND_CONCEPT_QUALIFIER = 1;
  QUALIFIER_KIND_TEMPLATE_QUALIFIER = 2;
}

message QualifierModel {
  ReferenceModel semanticId = 1;
  repeated ReferenceModel supplementalSemanticIds = 2;
  QualifierKind kind = 3;
  string type = 4;
  DataTypeDefXsd valueType = 5;
  string value = 6;
  ReferenceModel valueId = 7;
}

message AssetAdministrationShellModel {
  repeated ExtensionModel extensions = 1;
  string category = 2;
  string idShort = 3;
  repeated LangStringModel displayName = 4;
  repeated LangStringModel description = 5;
  AdministrativeInformationModel administration = 6;
  string id = 7;
  repeated EmbeddedDataSpecificationModel embeddedDataSpecifications = 8;
  ReferenceModel derivedFrom = 9;
  AssetInformationModel assetInformation = 10;
  repeated ReferenceModel submodels = 11;
}

message AssetInformationModel {
  AssetKind assetKind = 1;
  string globalAssetId = 2;
  repeated SpecificAssetIdModel specificAssetIds = 3;
  string assetType = 4;
  ResourceModel defaultThumbnail = 5;
}

message ResourceModel {
  string Path = 1;
  string ContentType = 2;
}

enum AssetKind {
  ASSET_KIND_TYPE = 0;
  ASSET_KIND_INSTANCE = 1;
  ASSET_KIND_NOT_APPLICABLE = 2;
}

message SpecificAssetIdModel {
  ReferenceModel semanticId = 1;
  repeated ReferenceModel supplementalSemanticIds = 2;
  string name = 3;
  string value = 4;
  ReferenceModel externalSubjectId = 5;
}

message SubmodelModel {
  repeated ExtensionModel extensions = 1;
  string category = 2;
  string idShort = 3;
  repeated LangStringModel displayName = 4;
  repeated LangStringModel description = 5;
  AdministrativeInformationModel administration = 6;
  string id = 7;
  ModellingKind kind = 8;
  ReferenceModel semanticId = 9;
  repeated ReferenceModel supplementalSemanticIds = 10;
  repeated QualifierModel qualifiers = 11;
  repeated EmbeddedDataSpecificationModel embeddedDataSpecifications = 12;
  repeated SubmodelElementModel submodelElements = 13;
}

enum SubmodelElementType {
  SUBMODEL_ELEMENT_TYPE_ANNOTATED_RELATIONSHIP_ELEMENT = 0;
  SUBMODEL_ELEMENT_TYPE_BASIC_EVENT_ELEMENT = 1;
  SUBMODEL_ELEMENT_TYPE_BLOB = 2;
  SUBMODEL_ELEMENT_TYPE_CAPABILITY = 3;
  SUBMODEL_ELEMENT_TYPE_DATA_ELEMENT = 4;
  SUBMODEL_ELEMENT_TYPE_ENTITY = 5;
  SUBMODEL_ELEMENT_TYPE_EVENT_ELEMENT = 6;
  SUBMODEL_ELEMENT_TYPE_FILE = 7;
  SUBMODEL_ELEMENT_TYPE_MULTI_LANGUAGE_PROPERTY = 8;
  SUBMODEL_ELEMENT_TYPE_OPERATION = 9;
  SUBMODEL_ELEMENT_TYPE_PROPERTY = 10;
  SUBMODEL_ELEMENT_TYPE_RANGE = 11;
  SUBMODEL_ELEMENT_TYPE_REFERENCE_ELEMENT = 12;
  SUBMODEL_ELEMENT_TYPE_RELATIONSHIP_ELEMENT = 13;
  SUBMODEL_ELEMENT_TYPE_SUBMODEL_ELEMENT = 14;
  SUBMODEL_ELEMENT_TYPE_SUBMODEL_ELEMENT_LIST = 15;
  SUBMODEL_ELEMENT_TYPE_SUBMODEL_ELEMENT_COLLECTION = 16;
}

message SubmodelElementModel {
  repeated ExtensionModel extensions = 1;
  string category = 2;
  string idShort = 3;
  repeated LangStringModel displayName = 4;
  repeated LangStringModel description = 5;
  ReferenceModel semanticId = 6;
  repeated ReferenceModel supplementalSemanticIds = 7;
  repeated QualifierModel qualifiers = 8;
  repeated EmbeddedDataSpecificationModel embeddedDataSpecifications = 9;
  SubmodelElementType submodelElementType = 10;
  // SubmodelElement payload here.
  // TODO: Find better solution! (Current solution causes an overhead of around 128 bytes per model)
  AnnotatedRelationshipElementDTO annotatedRelationshipElement = 11;
  BasicEventElementDTO basicEventElement = 12;
  BlobDTO blob = 13;
  CapabilityDTO capability = 14;
  DataElementDTO dataElement = 15;
  EntityDTO entity = 16;
  EventElementDTO eventElement = 17;
  FileDTO file = 18;
  MultiLanguagePropertyDTO multiLanguageProperty = 19;
  OperationDTO operation = 20;
  PropertyDTO property = 21;
  RangeDTO range = 22;
  ReferenceElementDTO referenceElement = 23;
  RelationshipElementDTO relationshipElement = 24;
  SubmodelElementListDTO submodelElementList = 25;
  SubmodelElementCollectionDTO submodelElementCollection = 26;
}

message RelationshipElementDTO {
  ReferenceModel first = 1;
  ReferenceModel second = 2;
}

message SubmodelElementListDTO {
  bool orderRelevant = 1;
  ReferenceModel semanticIdListElement = 2;
  SubmodelElementType typeValueListElement = 3;
  DataTypeDefXsd valueTypeListElement = 4;
  repeated SubmodelElementModel value = 5;
}

message SubmodelElementCollectionDTO {
  repeated SubmodelElementModel value = 1;
}

message DataElementDTO {
  // Intentionally empty
}

message DataElementModel {
  repeated ExtensionModel extensions = 1;
  string category = 2;
  string idShort = 3;
  repeated LangStringModel displayName = 4;
  repeated LangStringModel description = 5;
  ReferenceModel semanticId = 6;
  repeated ReferenceModel supplementalSemanticIds = 7;
  repeated QualifierModel qualifiers = 8;
  repeated EmbeddedDataSpecificationModel embeddedDataSpecifications = 9;
  SubmodelElementType submodelElementType = 10;
  // DataElement payload here.
  // TODO: Find better solution! (Current solution causes an overhead of around 48 bytes per model)
  PropertyDTO property = 11;
  MultiLanguagePropertyDTO multiLanguageProperty = 12;
  RangeDTO range = 13;
  ReferenceElementDTO referenceElement = 14;
  BlobDTO blob = 15;
  FileDTO file = 16;
}

message PropertyDTO {
  DataTypeDefXsd valueType = 1;
  string value = 2;
  ReferenceModel valueId = 3;
}

message MultiLanguagePropertyDTO {
  repeated LangStringModel value = 1;
  ReferenceModel valueId = 2;
}

message RangeDTO {
  DataTypeDefXsd valueType = 1;
  string min = 2;
  string max = 3;
}

message ReferenceElementDTO {
  ReferenceModel value = 1;
}

message BlobDTO {
  bytes value = 1;
  string contentType = 2;
}

message FileDTO {
  string value = 1;
  string contentType = 2;
}

message AnnotatedRelationshipElementDTO {
  ReferenceModel first = 1;
  ReferenceModel second = 2;
  repeated DataElementModel annotations = 3;
}

message EntityDTO {
  repeated SubmodelElementModel statements = 1;
  EntityType entityType = 2;
  string globalAssetId = 3;
  repeated SpecificAssetIdModel specificAssetIds = 4;
}

enum EntityType {
  ENTITY_TYPE_CO_MANAGED_ENTITY = 0;
  ENTITY_TYPE_SELF_MANAGED_ENTITY = 1;
}

enum Direction {
  DIRECTION_INPUT = 0;
  DIRECTION_OUTPUT = 1;
}

enum StateOfEvent {
  STATE_OF_EVENT_ON = 0;
  STATE_OF_EVENT_OFF = 1;
}

message EventPayloadModel {
  ReferenceModel source = 1;
  ReferenceModel sourceSemanticId = 2;
  ReferenceModel observableReference = 3;
  ReferenceModel observableSemanticId = 4;
  string topic = 5;
  ReferenceModel subjectId = 6;
  string timestamp = 7;
  bytes payload = 8;
}

message EventElementDTO {
  // Intentionally empty
}

message BasicEventElementDTO {
  ReferenceModel observed = 1;
  Direction direction = 2;
  StateOfEvent state = 3;
  string messageTopic = 4;
  ReferenceModel messageBroker = 5;
  string lastUpdate = 6;
  string minInterval = 7;
  string maxInterval = 8;
}

message OperationDTO {
  repeated OperationVariableModel inputVariables = 1;
  repeated OperationVariableModel outputVariables = 2;
  repeated OperationVariableModel inoutVariables = 3;
}

message OperationVariableModel {
  SubmodelElementModel value = 1;
}

message CapabilityDTO {
  // Intentionally empty
}

message ConceptDescriptionModel {
  repeated ExtensionModel extensions = 1;
  string category = 2;
  string idShort = 3;
  repeated LangStringModel displayName = 4;
  repeated LangStringModel description = 5;
  AdministrativeInformationModel administration = 6;
  string id = 7;
  repeated EmbeddedDataSpecificationModel embeddedDataSpecifications = 8;
  repeated ReferenceModel isCaseOf = 9;
}

enum ReferenceTypes {
  REFERENCE_TYPE_EXTERNAL_REFERENCE = 0;
  REFERENCE_TYPE_MODEL_REFERENCE = 1;
}

message ReferenceModel {
  ReferenceTypes type = 1;
  ReferenceModel ReferredSemanticId = 2;
  repeated KeyModel keys = 3;
}

message KeyModel {
  KeyTypes type = 1;
  string Value = 2;
}

enum KeyTypes {
  KEY_TYPES_ANNOTATED_RELATIONSHIP_ELEMENT = 0;
  KEY_TYPES_ASSET_ADMINISTRATION_SHELL = 1;
  KEY_TYPES_BASIC_EVENT_ELEMENT = 2;
  KEY_TYPES_BLOB = 3;
  KEY_TYPES_CAPABILITY = 4;
  KEY_TYPES_CONCEPT_DESCRIPTION = 5;
  KEY_TYPES_DATA_ELEMENT = 6;
  KEY_TYPES_ENTITY = 7;
  KEY_TYPES_EVENT_ELEMENT = 8;
  KEY_TYPES_FILE = 9;
  KEY_TYPES_FRAGMENT_REFERENCE = 10;
  KEY_TYPES_GLOBAL_REFERENCE = 11;
  KEY_TYPES_IDENTIFIABLE = 12;
  KEY_TYPES_MULTI_LANGUAGE_PROPERTY = 13;
  KEY_TYPES_OPERATION = 14;
  KEY_TYPES_PROPERTY = 15;
  KEY_TYPES_RANGE = 16;
  KEY_TYPES_REFERABLE = 17;
  KEY_TYPES_REFERENCE_ELEMENT = 18;
  KEY_TYPES_RELATIONSHIP_ELEMENT = 19;
  KEY_TYPES_SUBMODEL = 20;
  KEY_TYPES_SUBMODEL_ELEMENT = 21;
  KEY_TYPES_SUBMODEL_ELEMENT_COLLECTION = 22;
  KEY_TYPES_SUBMODEL_ELEMENT_LIST = 23;
}

enum DataTypeDefXsd {
  DATA_TYPE_DEF_XSD_ANY_URI = 0;
  DATA_TYPE_DEF_XSD_BASE64_BINARY = 1;
  DATA_TYPE_DEF_XSD_BOOLEAN = 2;
  DATA_TYPE_DEF_XSD_BYTE = 3;
  DATA_TYPE_DEF_XSD_DATE = 4;
  DATA_TYPE_DEF_XSD_DATE_TIME = 5;
  DATA_TYPE_DEF_XSD_DECIMAL = 6;
  DATA_TYPE_DEF_XSD_DOUBLE = 7;
  DATA_TYPE_DEF_XSD_DURATION = 8;
  DATA_TYPE_DEF_XSD_FLOAT = 9;
  DATA_TYPE_DEF_XSD_G_DAY = 10;
  DATA_TYPE_DEF_XSD_G_MONTH = 11;
  DATA_TYPE_DEF_XSD_G_MONTH_DAY = 12;
  DATA_TYPE_DEF_XSD_G_YEAR = 13;
  DATA_TYPE_DEF_XSD_G_YEAR_MONTH = 14;
  DATA_TYPE_DEF_XSD_HEX_BINARY = 15;
  DATA_TYPE_DEF_XSD_INT = 16;
  DATA_TYPE_DEF_XSD_INTEGER = 17;
  DATA_TYPE_DEF_XSD_LONG = 18;
  DATA_TYPE_DEF_XSD_NEGATIVE_INTEGER = 19;
  DATA_TYPE_DEF_XSD_NON_NEGATIVE_INTEGER = 20;
  DATA_TYPE_DEF_XSD_NON_POSITIVE_INTEGER = 21;
  DATA_TYPE_DEF_XSD_POSITIVE_INTEGER = 22;
  DATA_TYPE_DEF_XSD_SHORT = 23;
  DATA_TYPE_DEF_XSD_STRING = 24;
  DATA_TYPE_DEF_XSD_TIME = 25;
  DATA_TYPE_DEF_XSD_UNSIGNED_BYTE = 26;
  DATA_TYPE_DEF_XSD_UNSIGNED_INT = 27;
  DATA_TYPE_DEF_XSD_UNSIGNED_LONG = 28;
  DATA_TYPE_DEF_XSD_UNSIGNED_SHORT = 29;
}

message LangStringModel {
  string language = 1;
  string text = 2;
}

message EmbeddedDataSpecificationModel {
  ReferenceModel dataSpecification = 1;
  DataSpecificationContentModel dataSpecificationContent = 2;
}

enum DataTypeIec61360 {
  DATA_TYPE_IEC_61360_DATE = 0;
  DATA_TYPE_IEC_61360_STRING = 1;
  DATA_TYPE_IEC_61360_STRING_TRANSLATABLE = 2;
  DATA_TYPE_IEC_61360_INTEGER_MEASURE = 3;
  DATA_TYPE_IEC_61360_INTEGER_COUNT = 4;
  DATA_TYPE_IEC_61360_INTEGER_CURRENCY = 5;
  DATA_TYPE_IEC_61360_REAL_MEASURE = 6;
  DATA_TYPE_IEC_61360_REAL_COUNT = 7;
  DATA_TYPE_IEC_61360_REAL_CURRENCY = 8;
  DATA_TYPE_IEC_61360_BOOLEAN = 9;
  DATA_TYPE_IEC_61360_IRI = 10;
  DATA_TYPE_IEC_61360_IRDI = 11;
  DATA_TYPE_IEC_61360_RATIONAL = 12;
  DATA_TYPE_IEC_61360_RATIONAL_MEASURE = 13;
  DATA_TYPE_IEC_61360_TIME = 14;
  DATA_TYPE_IEC_61360_TIMESTAMP = 15;
  DATA_TYPE_IEC_61360_FILE = 16;
  DATA_TYPE_IEC_61360_HTML = 17;
  DATA_TYPE_IEC_61360_BLOB = 18;
}

message LevelTypeModel {
  bool min = 1;
  bool nom = 2;
  bool typ = 3;
  bool max = 4;
}

message ValueReferencePairModel {
  string value = 1;
  ReferenceModel valueId = 2;
}

message ValueListModel {
  repeated ValueReferencePairModel valueReferencePairs = 1;
}

message DataSpecificationContentModel {
  repeated LangStringModel preferredName = 1;
  repeated LangStringModel shortName = 2;
  string unit = 3;
  ReferenceModel unitId = 4;
  string symbol = 5;
  DataTypeIec61360 dataType = 6;
  repeated LangStringModel definition = 7;
  string valueFormat = 8;
  ValueListModel valueList = 9;
  string value = 10;
  LevelTypeModel levelType = 11;
}