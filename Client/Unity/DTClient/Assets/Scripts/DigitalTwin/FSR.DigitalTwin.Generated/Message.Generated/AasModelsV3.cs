// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/AasModels.V3.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace FSR.GRPC.Lib.V3 {

  /// <summary>Holder for reflection information generated from Protos/AasModels.V3.proto</summary>
  public static partial class AasModelsV3Reflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/AasModels.V3.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AasModelsV3Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQcm90b3MvQWFzTW9kZWxzLlYzLnByb3RvEg9GU1IuR1JQQy5MaWIuVjMi",
            "gwIKDEV4dGVuc2lvbkRUTxIxCgpzZW1hbnRpY0lkGAEgASgLMh0uRlNSLkdS",
            "UEMuTGliLlYzLlJlZmVyZW5jZURUTxI+ChdzdXBwbGVtZW50YWxTZW1hbnRp",
            "Y0lkcxgCIAMoCzIdLkZTUi5HUlBDLkxpYi5WMy5SZWZlcmVuY2VEVE8SDAoE",
            "bmFtZRgDIAEoCRIyCgl2YWx1ZVR5cGUYBCABKA4yHy5GU1IuR1JQQy5MaWIu",
            "VjMuRGF0YVR5cGVEZWZYc2QSDQoFdmFsdWUYBSABKAkSLwoIcmVmZXJzVG8Y",
            "BiADKAsyHS5GU1IuR1JQQy5MaWIuVjMuUmVmZXJlbmNlRFRPItgBChxBZG1p",
            "bmlzdHJhdGl2ZUluZm9ybWF0aW9uRFRPElEKGmVtYmVkZGVkRGF0YVNwZWNp",
            "ZmljYXRpb25zGAEgAygLMi0uRlNSLkdSUEMuTGliLlYzLkVtYmVkZGVkRGF0",
            "YVNwZWNpZmljYXRpb25EVE8SDwoHdmVyc2lvbhgCIAEoCRIQCghyZXZpc2lv",
            "bhgDIAEoCRIuCgdjcmVhdG9yGAQgASgLMh0uRlNSLkdSUEMuTGliLlYzLlJl",
            "ZmVyZW5jZURUTxISCgp0ZW1wbGF0ZUlkGAUgASgJIrACCgxRdWFsaWZpZXJE",
            "VE8SMQoKc2VtYW50aWNJZBgBIAEoCzIdLkZTUi5HUlBDLkxpYi5WMy5SZWZl",
            "cmVuY2VEVE8SPgoXc3VwcGxlbWVudGFsU2VtYW50aWNJZHMYAiADKAsyHS5G",
            "U1IuR1JQQy5MaWIuVjMuUmVmZXJlbmNlRFRPEiwKBGtpbmQYAyABKA4yHi5G",
            "U1IuR1JQQy5MaWIuVjMuUXVhbGlmaWVyS2luZBIMCgR0eXBlGAQgASgJEjIK",
            "CXZhbHVlVHlwZRgFIAEoDjIfLkZTUi5HUlBDLkxpYi5WMy5EYXRhVHlwZURl",
            "ZlhzZBINCgV2YWx1ZRgGIAEoCRIuCgd2YWx1ZUlkGAcgASgLMh0uRlNSLkdS",
            "UEMuTGliLlYzLlJlZmVyZW5jZURUTyKpBAobQXNzZXRBZG1pbmlzdHJhdGlv",
            "blNoZWxsRFRPEjEKCmV4dGVuc2lvbnMYASADKAsyHS5GU1IuR1JQQy5MaWIu",
            "VjMuRXh0ZW5zaW9uRFRPEhAKCGNhdGVnb3J5GAIgASgJEg8KB2lkU2hvcnQY",
            "AyABKAkSMwoLZGlzcGxheU5hbWUYBCADKAsyHi5GU1IuR1JQQy5MaWIuVjMu",
            "TGFuZ1N0cmluZ0RUTxIzCgtkZXNjcmlwdGlvbhgFIAMoCzIeLkZTUi5HUlBD",
            "LkxpYi5WMy5MYW5nU3RyaW5nRFRPEkUKDmFkbWluaXN0cmF0aW9uGAYgASgL",
            "Mi0uRlNSLkdSUEMuTGliLlYzLkFkbWluaXN0cmF0aXZlSW5mb3JtYXRpb25E",
            "VE8SCgoCaWQYByABKAkSUQoaZW1iZWRkZWREYXRhU3BlY2lmaWNhdGlvbnMY",
            "CCADKAsyLS5GU1IuR1JQQy5MaWIuVjMuRW1iZWRkZWREYXRhU3BlY2lmaWNh",
            "dGlvbkRUTxIyCgtkZXJpdmVkRnJvbRgJIAEoCzIdLkZTUi5HUlBDLkxpYi5W",
            "My5SZWZlcmVuY2VEVE8SPgoQYXNzZXRJbmZvcm1hdGlvbhgKIAEoCzIkLkZT",
            "Ui5HUlBDLkxpYi5WMy5Bc3NldEluZm9ybWF0aW9uRFRPEjAKCXN1Ym1vZGVs",
            "cxgLIAMoCzIdLkZTUi5HUlBDLkxpYi5WMy5SZWZlcmVuY2VEVE8i5QEKE0Fz",
            "c2V0SW5mb3JtYXRpb25EVE8SLQoJYXNzZXRLaW5kGAEgASgOMhouRlNSLkdS",
            "UEMuTGliLlYzLkFzc2V0S2luZBIVCg1nbG9iYWxBc3NldElkGAIgASgJEj0K",
            "EHNwZWNpZmljQXNzZXRJZHMYAyADKAsyIy5GU1IuR1JQQy5MaWIuVjMuU3Bl",
            "Y2lmaWNBc3NldElkRFRPEhEKCWFzc2V0VHlwZRgEIAEoCRI2ChBkZWZhdWx0",
            "VGh1bWJuYWlsGAUgASgLMhwuRlNSLkdSUEMuTGliLlYzLlJlc291cmNlRFRP",
            "IjAKC1Jlc291cmNlRFRPEgwKBFBhdGgYASABKAkSEwoLQ29udGVudFR5cGUY",
            "AiABKAki3gEKElNwZWNpZmljQXNzZXRJZERUTxIxCgpzZW1hbnRpY0lkGAEg",
            "ASgLMh0uRlNSLkdSUEMuTGliLlYzLlJlZmVyZW5jZURUTxI+ChdzdXBwbGVt",
            "ZW50YWxTZW1hbnRpY0lkcxgCIAMoCzIdLkZTUi5HUlBDLkxpYi5WMy5SZWZl",
            "cmVuY2VEVE8SDAoEbmFtZRgDIAEoCRINCgV2YWx1ZRgEIAEoCRI4ChFleHRl",
            "cm5hbFN1YmplY3RJZBgFIAEoCzIdLkZTUi5HUlBDLkxpYi5WMy5SZWZlcmVu",
            "Y2VEVE8ihgUKC1N1Ym1vZGVsRFRPEjEKCmV4dGVuc2lvbnMYASADKAsyHS5G",
            "U1IuR1JQQy5MaWIuVjMuRXh0ZW5zaW9uRFRPEhAKCGNhdGVnb3J5GAIgASgJ",
            "Eg8KB2lkU2hvcnQYAyABKAkSMwoLZGlzcGxheU5hbWUYBCADKAsyHi5GU1Iu",
            "R1JQQy5MaWIuVjMuTGFuZ1N0cmluZ0RUTxIzCgtkZXNjcmlwdGlvbhgFIAMo",
            "CzIeLkZTUi5HUlBDLkxpYi5WMy5MYW5nU3RyaW5nRFRPEkUKDmFkbWluaXN0",
            "cmF0aW9uGAYgASgLMi0uRlNSLkdSUEMuTGliLlYzLkFkbWluaXN0cmF0aXZl",
            "SW5mb3JtYXRpb25EVE8SCgoCaWQYByABKAkSLAoEa2luZBgIIAEoDjIeLkZT",
            "Ui5HUlBDLkxpYi5WMy5Nb2RlbGxpbmdLaW5kEjEKCnNlbWFudGljSWQYCSAB",
            "KAsyHS5GU1IuR1JQQy5MaWIuVjMuUmVmZXJlbmNlRFRPEj4KF3N1cHBsZW1l",
            "bnRhbFNlbWFudGljSWRzGAogAygLMh0uRlNSLkdSUEMuTGliLlYzLlJlZmVy",
            "ZW5jZURUTxIxCgpxdWFsaWZpZXJzGAsgAygLMh0uRlNSLkdSUEMuTGliLlYz",
            "LlF1YWxpZmllckRUTxJRChplbWJlZGRlZERhdGFTcGVjaWZpY2F0aW9ucxgM",
            "IAMoCzItLkZTUi5HUlBDLkxpYi5WMy5FbWJlZGRlZERhdGFTcGVjaWZpY2F0",
            "aW9uRFRPEj0KEHN1Ym1vZGVsRWxlbWVudHMYDSADKAsyIy5GU1IuR1JQQy5M",
            "aWIuVjMuU3VibW9kZWxFbGVtZW50RFRPIqwMChJTdWJtb2RlbEVsZW1lbnRE",
            "VE8SMQoKZXh0ZW5zaW9ucxgBIAMoCzIdLkZTUi5HUlBDLkxpYi5WMy5FeHRl",
            "bnNpb25EVE8SEAoIY2F0ZWdvcnkYAiABKAkSDwoHaWRTaG9ydBgDIAEoCRIz",
            "CgtkaXNwbGF5TmFtZRgEIAMoCzIeLkZTUi5HUlBDLkxpYi5WMy5MYW5nU3Ry",
            "aW5nRFRPEjMKC2Rlc2NyaXB0aW9uGAUgAygLMh4uRlNSLkdSUEMuTGliLlYz",
            "LkxhbmdTdHJpbmdEVE8SMQoKc2VtYW50aWNJZBgGIAEoCzIdLkZTUi5HUlBD",
            "LkxpYi5WMy5SZWZlcmVuY2VEVE8SPgoXc3VwcGxlbWVudGFsU2VtYW50aWNJ",
            "ZHMYByADKAsyHS5GU1IuR1JQQy5MaWIuVjMuUmVmZXJlbmNlRFRPEjEKCnF1",
            "YWxpZmllcnMYCCADKAsyHS5GU1IuR1JQQy5MaWIuVjMuUXVhbGlmaWVyRFRP",
            "ElEKGmVtYmVkZGVkRGF0YVNwZWNpZmljYXRpb25zGAkgAygLMi0uRlNSLkdS",
            "UEMuTGliLlYzLkVtYmVkZGVkRGF0YVNwZWNpZmljYXRpb25EVE8SQQoTc3Vi",
            "bW9kZWxFbGVtZW50VHlwZRgKIAEoDjIkLkZTUi5HUlBDLkxpYi5WMy5TdWJt",
            "b2RlbEVsZW1lbnRUeXBlEl0KHGFubm90YXRlZFJlbGF0aW9uc2hpcEVsZW1l",
            "bnQYCyABKAsyNy5GU1IuR1JQQy5MaWIuVjMuQW5ub3RhdGVkUmVsYXRpb25z",
            "aGlwRWxlbWVudFBheWxvYWREVE8SRwoRYmFzaWNFdmVudEVsZW1lbnQYDCAB",
            "KAsyLC5GU1IuR1JQQy5MaWIuVjMuQmFzaWNFdmVudEVsZW1lbnRQYXlsb2Fk",
            "RFRPEi0KBGJsb2IYDSABKAsyHy5GU1IuR1JQQy5MaWIuVjMuQmxvYlBheWxv",
            "YWREVE8SOQoKY2FwYWJpbGl0eRgOIAEoCzIlLkZTUi5HUlBDLkxpYi5WMy5D",
            "YXBhYmlsaXR5UGF5bG9hZERUTxI7CgtkYXRhRWxlbWVudBgPIAEoCzImLkZT",
            "Ui5HUlBDLkxpYi5WMy5EYXRhRWxlbWVudFBheWxvYWREVE8SMQoGZW50aXR5",
            "GBAgASgLMiEuRlNSLkdSUEMuTGliLlYzLkVudGl0eVBheWxvYWREVE8SPQoM",
            "ZXZlbnRFbGVtZW50GBEgASgLMicuRlNSLkdSUEMuTGliLlYzLkV2ZW50RWxl",
            "bWVudFBheWxvYWREVE8SLQoEZmlsZRgSIAEoCzIfLkZTUi5HUlBDLkxpYi5W",
            "My5GaWxlUGF5bG9hZERUTxJPChVtdWx0aUxhbmd1YWdlUHJvcGVydHkYEyAB",
            "KAsyMC5GU1IuR1JQQy5MaWIuVjMuTXVsdGlMYW5ndWFnZVByb3BlcnR5UGF5",
            "bG9hZERUTxI3CglvcGVyYXRpb24YFCABKAsyJC5GU1IuR1JQQy5MaWIuVjMu",
            "T3BlcmF0aW9uUGF5bG9hZERUTxI1Cghwcm9wZXJ0eRgVIAEoCzIjLkZTUi5H",
            "UlBDLkxpYi5WMy5Qcm9wZXJ0eVBheWxvYWREVE8SLwoFcmFuZ2UYFiABKAsy",
            "IC5GU1IuR1JQQy5MaWIuVjMuUmFuZ2VQYXlsb2FkRFRPEkUKEHJlZmVyZW5j",
            "ZUVsZW1lbnQYFyABKAsyKy5GU1IuR1JQQy5MaWIuVjMuUmVmZXJlbmNlRWxl",
            "bWVudFBheWxvYWREVE8SSwoTcmVsYXRpb25zaGlwRWxlbWVudBgYIAEoCzIu",
            "LkZTUi5HUlBDLkxpYi5WMy5SZWxhdGlvbnNoaXBFbGVtZW50UGF5bG9hZERU",
            "TxJLChNzdWJtb2RlbEVsZW1lbnRMaXN0GBkgASgLMi4uRlNSLkdSUEMuTGli",
            "LlYzLlN1Ym1vZGVsRWxlbWVudExpc3RQYXlsb2FkRFRPElcKGXN1Ym1vZGVs",
            "RWxlbWVudENvbGxlY3Rpb24YGiABKAsyNC5GU1IuR1JQQy5MaWIuVjMuU3Vi",
            "bW9kZWxFbGVtZW50Q29sbGVjdGlvblBheWxvYWREVE8ifAodUmVsYXRpb25z",
            "aGlwRWxlbWVudFBheWxvYWREVE8SLAoFZmlyc3QYASABKAsyHS5GU1IuR1JQ",
            "Qy5MaWIuVjMuUmVmZXJlbmNlRFRPEi0KBnNlY29uZBgCIAEoCzIdLkZTUi5H",
            "UlBDLkxpYi5WMy5SZWZlcmVuY2VEVE8iqwIKHVN1Ym1vZGVsRWxlbWVudExp",
            "c3RQYXlsb2FkRFRPEhUKDW9yZGVyUmVsZXZhbnQYASABKAgSPAoVc2VtYW50",
            "aWNJZExpc3RFbGVtZW50GAIgASgLMh0uRlNSLkdSUEMuTGliLlYzLlJlZmVy",
            "ZW5jZURUTxJCChR0eXBlVmFsdWVMaXN0RWxlbWVudBgDIAEoDjIkLkZTUi5H",
            "UlBDLkxpYi5WMy5TdWJtb2RlbEVsZW1lbnRUeXBlEj0KFHZhbHVlVHlwZUxp",
            "c3RFbGVtZW50GAQgASgOMh8uRlNSLkdSUEMuTGliLlYzLkRhdGFUeXBlRGVm",
            "WHNkEjIKBXZhbHVlGAUgAygLMiMuRlNSLkdSUEMuTGliLlYzLlN1Ym1vZGVs",
            "RWxlbWVudERUTyJZCiNTdWJtb2RlbEVsZW1lbnRDb2xsZWN0aW9uUGF5bG9h",
            "ZERUTxIyCgV2YWx1ZRgBIAMoCzIjLkZTUi5HUlBDLkxpYi5WMy5TdWJtb2Rl",
            "bEVsZW1lbnREVE8iFwoVRGF0YUVsZW1lbnRQYXlsb2FkRFRPIuoGCg5EYXRh",
            "RWxlbWVudERUTxIxCgpleHRlbnNpb25zGAEgAygLMh0uRlNSLkdSUEMuTGli",
            "LlYzLkV4dGVuc2lvbkRUTxIQCghjYXRlZ29yeRgCIAEoCRIPCgdpZFNob3J0",
            "GAMgASgJEjMKC2Rpc3BsYXlOYW1lGAQgAygLMh4uRlNSLkdSUEMuTGliLlYz",
            "LkxhbmdTdHJpbmdEVE8SMwoLZGVzY3JpcHRpb24YBSADKAsyHi5GU1IuR1JQ",
            "Qy5MaWIuVjMuTGFuZ1N0cmluZ0RUTxIxCgpzZW1hbnRpY0lkGAYgASgLMh0u",
            "RlNSLkdSUEMuTGliLlYzLlJlZmVyZW5jZURUTxI+ChdzdXBwbGVtZW50YWxT",
            "ZW1hbnRpY0lkcxgHIAMoCzIdLkZTUi5HUlBDLkxpYi5WMy5SZWZlcmVuY2VE",
            "VE8SMQoKcXVhbGlmaWVycxgIIAMoCzIdLkZTUi5HUlBDLkxpYi5WMy5RdWFs",
            "aWZpZXJEVE8SUQoaZW1iZWRkZWREYXRhU3BlY2lmaWNhdGlvbnMYCSADKAsy",
            "LS5GU1IuR1JQQy5MaWIuVjMuRW1iZWRkZWREYXRhU3BlY2lmaWNhdGlvbkRU",
            "TxJBChNzdWJtb2RlbEVsZW1lbnRUeXBlGAogASgOMiQuRlNSLkdSUEMuTGli",
            "LlYzLlN1Ym1vZGVsRWxlbWVudFR5cGUSNQoIcHJvcGVydHkYCyABKAsyIy5G",
            "U1IuR1JQQy5MaWIuVjMuUHJvcGVydHlQYXlsb2FkRFRPEk8KFW11bHRpTGFu",
            "Z3VhZ2VQcm9wZXJ0eRgMIAEoCzIwLkZTUi5HUlBDLkxpYi5WMy5NdWx0aUxh",
            "bmd1YWdlUHJvcGVydHlQYXlsb2FkRFRPEi8KBXJhbmdlGA0gASgLMiAuRlNS",
            "LkdSUEMuTGliLlYzLlJhbmdlUGF5bG9hZERUTxJFChByZWZlcmVuY2VFbGVt",
            "ZW50GA4gASgLMisuRlNSLkdSUEMuTGliLlYzLlJlZmVyZW5jZUVsZW1lbnRQ",
            "YXlsb2FkRFRPEi0KBGJsb2IYDyABKAsyHy5GU1IuR1JQQy5MaWIuVjMuQmxv",
            "YlBheWxvYWREVE8SLQoEZmlsZRgQIAEoCzIfLkZTUi5HUlBDLkxpYi5WMy5G",
            "aWxlUGF5bG9hZERUTyKHAQoSUHJvcGVydHlQYXlsb2FkRFRPEjIKCXZhbHVl",
            "VHlwZRgBIAEoDjIfLkZTUi5HUlBDLkxpYi5WMy5EYXRhVHlwZURlZlhzZBIN",
            "CgV2YWx1ZRgCIAEoCRIuCgd2YWx1ZUlkGAMgASgLMh0uRlNSLkdSUEMuTGli",
            "LlYzLlJlZmVyZW5jZURUTyKAAQofTXVsdGlMYW5ndWFnZVByb3BlcnR5UGF5",
            "bG9hZERUTxItCgV2YWx1ZRgBIAMoCzIeLkZTUi5HUlBDLkxpYi5WMy5MYW5n",
            "U3RyaW5nRFRPEi4KB3ZhbHVlSWQYAiABKAsyHS5GU1IuR1JQQy5MaWIuVjMu",
            "UmVmZXJlbmNlRFRPIl8KD1JhbmdlUGF5bG9hZERUTxIyCgl2YWx1ZVR5cGUY",
            "ASABKA4yHy5GU1IuR1JQQy5MaWIuVjMuRGF0YVR5cGVEZWZYc2QSCwoDbWlu",
            "GAIgASgJEgsKA21heBgDIAEoCSJKChpSZWZlcmVuY2VFbGVtZW50UGF5bG9h",
            "ZERUTxIsCgV2YWx1ZRgBIAEoCzIdLkZTUi5HUlBDLkxpYi5WMy5SZWZlcmVu",
            "Y2VEVE8iNAoOQmxvYlBheWxvYWREVE8SDQoFdmFsdWUYASABKAwSEwoLY29u",
            "dGVudFR5cGUYAiABKAkiNAoORmlsZVBheWxvYWREVE8SDQoFdmFsdWUYASAB",
            "KAkSEwoLY29udGVudFR5cGUYAiABKAkiuwEKJkFubm90YXRlZFJlbGF0aW9u",
            "c2hpcEVsZW1lbnRQYXlsb2FkRFRPEiwKBWZpcnN0GAEgASgLMh0uRlNSLkdS",
            "UEMuTGliLlYzLlJlZmVyZW5jZURUTxItCgZzZWNvbmQYAiABKAsyHS5GU1Iu",
            "R1JQQy5MaWIuVjMuUmVmZXJlbmNlRFRPEjQKC2Fubm90YXRpb25zGAMgAygL",
            "Mh8uRlNSLkdSUEMuTGliLlYzLkRhdGFFbGVtZW50RFRPItIBChBFbnRpdHlQ",
            "YXlsb2FkRFRPEjcKCnN0YXRlbWVudHMYASADKAsyIy5GU1IuR1JQQy5MaWIu",
            "VjMuU3VibW9kZWxFbGVtZW50RFRPEi8KCmVudGl0eVR5cGUYAiABKA4yGy5G",
            "U1IuR1JQQy5MaWIuVjMuRW50aXR5VHlwZRIVCg1nbG9iYWxBc3NldElkGAMg",
            "ASgJEj0KEHNwZWNpZmljQXNzZXRJZHMYBCADKAsyIy5GU1IuR1JQQy5MaWIu",
            "VjMuU3BlY2lmaWNBc3NldElkRFRPItcCCg9FdmVudFBheWxvYWREVE8SLQoG",
            "c291cmNlGAEgASgLMh0uRlNSLkdSUEMuTGliLlYzLlJlZmVyZW5jZURUTxI3",
            "ChBzb3VyY2VTZW1hbnRpY0lkGAIgASgLMh0uRlNSLkdSUEMuTGliLlYzLlJl",
            "ZmVyZW5jZURUTxI6ChNvYnNlcnZhYmxlUmVmZXJlbmNlGAMgASgLMh0uRlNS",
            "LkdSUEMuTGliLlYzLlJlZmVyZW5jZURUTxI7ChRvYnNlcnZhYmxlU2VtYW50",
            "aWNJZBgEIAEoCzIdLkZTUi5HUlBDLkxpYi5WMy5SZWZlcmVuY2VEVE8SDQoF",
            "dG9waWMYBSABKAkSMAoJc3ViamVjdElkGAYgASgLMh0uRlNSLkdSUEMuTGli",
            "LlYzLlJlZmVyZW5jZURUTxIRCgl0aW1lc3RhbXAYByABKAkSDwoHcGF5bG9h",
            "ZBgIIAEoDCIYChZFdmVudEVsZW1lbnRQYXlsb2FkRFRPIrUCChtCYXNpY0V2",
            "ZW50RWxlbWVudFBheWxvYWREVE8SLwoIb2JzZXJ2ZWQYASABKAsyHS5GU1Iu",
            "R1JQQy5MaWIuVjMuUmVmZXJlbmNlRFRPEi0KCWRpcmVjdGlvbhgCIAEoDjIa",
            "LkZTUi5HUlBDLkxpYi5WMy5EaXJlY3Rpb24SLAoFc3RhdGUYAyABKA4yHS5G",
            "U1IuR1JQQy5MaWIuVjMuU3RhdGVPZkV2ZW50EhQKDG1lc3NhZ2VUb3BpYxgE",
            "IAEoCRI0Cg1tZXNzYWdlQnJva2VyGAUgASgLMh0uRlNSLkdSUEMuTGliLlYz",
            "LlJlZmVyZW5jZURUTxISCgpsYXN0VXBkYXRlGAYgASgJEhMKC21pbkludGVy",
            "dmFsGAcgASgJEhMKC21heEludGVydmFsGAggASgJItMBChNPcGVyYXRpb25Q",
            "YXlsb2FkRFRPEj0KDmlucHV0VmFyaWFibGVzGAEgAygLMiUuRlNSLkdSUEMu",
            "TGliLlYzLk9wZXJhdGlvblZhcmlhYmxlRFRPEj4KD291dHB1dFZhcmlhYmxl",
            "cxgCIAMoCzIlLkZTUi5HUlBDLkxpYi5WMy5PcGVyYXRpb25WYXJpYWJsZURU",
            "TxI9Cg5pbm91dFZhcmlhYmxlcxgDIAMoCzIlLkZTUi5HUlBDLkxpYi5WMy5P",
            "cGVyYXRpb25WYXJpYWJsZURUTyJKChRPcGVyYXRpb25WYXJpYWJsZURUTxIy",
            "CgV2YWx1ZRgBIAEoCzIjLkZTUi5HUlBDLkxpYi5WMy5TdWJtb2RlbEVsZW1l",
            "bnREVE8iFgoUQ2FwYWJpbGl0eVBheWxvYWREVE8irgMKFUNvbmNlcHREZXNj",
            "cmlwdGlvbkRUTxIxCgpleHRlbnNpb25zGAEgAygLMh0uRlNSLkdSUEMuTGli",
            "LlYzLkV4dGVuc2lvbkRUTxIQCghjYXRlZ29yeRgCIAEoCRIPCgdpZFNob3J0",
            "GAMgASgJEjMKC2Rpc3BsYXlOYW1lGAQgAygLMh4uRlNSLkdSUEMuTGliLlYz",
            "LkxhbmdTdHJpbmdEVE8SMwoLZGVzY3JpcHRpb24YBSADKAsyHi5GU1IuR1JQ",
            "Qy5MaWIuVjMuTGFuZ1N0cmluZ0RUTxJFCg5hZG1pbmlzdHJhdGlvbhgGIAEo",
            "CzItLkZTUi5HUlBDLkxpYi5WMy5BZG1pbmlzdHJhdGl2ZUluZm9ybWF0aW9u",
            "RFRPEgoKAmlkGAcgASgJElEKGmVtYmVkZGVkRGF0YVNwZWNpZmljYXRpb25z",
            "GAggAygLMi0uRlNSLkdSUEMuTGliLlYzLkVtYmVkZGVkRGF0YVNwZWNpZmlj",
            "YXRpb25EVE8SLwoIaXNDYXNlT2YYCSADKAsyHS5GU1IuR1JQQy5MaWIuVjMu",
            "UmVmZXJlbmNlRFRPIp8BCgxSZWZlcmVuY2VEVE8SLQoEdHlwZRgBIAEoDjIf",
            "LkZTUi5HUlBDLkxpYi5WMy5SZWZlcmVuY2VUeXBlcxI5ChJSZWZlcnJlZFNl",
            "bWFudGljSWQYAiABKAsyHS5GU1IuR1JQQy5MaWIuVjMuUmVmZXJlbmNlRFRP",
            "EiUKBGtleXMYAyADKAsyFy5GU1IuR1JQQy5MaWIuVjMuS2V5RFRPIkAKBktl",
            "eURUTxInCgR0eXBlGAEgASgOMhkuRlNSLkdSUEMuTGliLlYzLktleVR5cGVz",
            "Eg0KBVZhbHVlGAIgASgJIi8KDUxhbmdTdHJpbmdEVE8SEAoIbGFuZ3VhZ2UY",
            "ASABKAkSDAoEdGV4dBgCIAEoCSKoAQocRW1iZWRkZWREYXRhU3BlY2lmaWNh",
            "dGlvbkRUTxI4ChFkYXRhU3BlY2lmaWNhdGlvbhgBIAEoCzIdLkZTUi5HUlBD",
            "LkxpYi5WMy5SZWZlcmVuY2VEVE8STgoYZGF0YVNwZWNpZmljYXRpb25Db250",
            "ZW50GAIgASgLMiwuRlNSLkdSUEMuTGliLlYzLkRhdGFTcGVjaWZpY2F0aW9u",
            "Q29udGVudERUTyJCCgxMZXZlbFR5cGVEVE8SCwoDbWluGAEgASgIEgsKA25v",
            "bRgCIAEoCBILCgN0eXAYAyABKAgSCwoDbWF4GAQgASgIIlYKFVZhbHVlUmVm",
            "ZXJlbmNlUGFpckRUTxINCgV2YWx1ZRgBIAEoCRIuCgd2YWx1ZUlkGAIgASgL",
            "Mh0uRlNSLkdSUEMuTGliLlYzLlJlZmVyZW5jZURUTyJTCgxWYWx1ZUxpc3RE",
            "VE8SQwoTdmFsdWVSZWZlcmVuY2VQYWlycxgBIAMoCzImLkZTUi5HUlBDLkxp",
            "Yi5WMy5WYWx1ZVJlZmVyZW5jZVBhaXJEVE8ixQMKG0RhdGFTcGVjaWZpY2F0",
            "aW9uQ29udGVudERUTxI1Cg1wcmVmZXJyZWROYW1lGAEgAygLMh4uRlNSLkdS",
            "UEMuTGliLlYzLkxhbmdTdHJpbmdEVE8SMQoJc2hvcnROYW1lGAIgAygLMh4u",
            "RlNSLkdSUEMuTGliLlYzLkxhbmdTdHJpbmdEVE8SDAoEdW5pdBgDIAEoCRIt",
            "CgZ1bml0SWQYBCABKAsyHS5GU1IuR1JQQy5MaWIuVjMuUmVmZXJlbmNlRFRP",
            "Eg4KBnN5bWJvbBgFIAEoCRIzCghkYXRhVHlwZRgGIAEoDjIhLkZTUi5HUlBD",
            "LkxpYi5WMy5EYXRhVHlwZUllYzYxMzYwEjIKCmRlZmluaXRpb24YByADKAsy",
            "Hi5GU1IuR1JQQy5MaWIuVjMuTGFuZ1N0cmluZ0RUTxITCgt2YWx1ZUZvcm1h",
            "dBgIIAEoCRIwCgl2YWx1ZUxpc3QYCSABKAsyHS5GU1IuR1JQQy5MaWIuVjMu",
            "VmFsdWVMaXN0RFRPEg0KBXZhbHVlGAogASgJEjAKCWxldmVsVHlwZRgLIAEo",
            "CzIdLkZTUi5HUlBDLkxpYi5WMy5MZXZlbFR5cGVEVE8qSQoNTW9kZWxsaW5n",
            "S2luZBIbChdNT0RFTExJTkdfS0lORF9URU1QTEFURRAAEhsKF01PREVMTElO",
            "R19LSU5EX0lOU1RBTkNFEAEqgAEKDVF1YWxpZmllcktpbmQSIgoeUVVBTElG",
            "SUVSX0tJTkRfVkFMVUVfUVVBTElGSUVSEAASJAogUVVBTElGSUVSX0tJTkRf",
            "Q09OQ0VQVF9RVUFMSUZJRVIQARIlCiFRVUFMSUZJRVJfS0lORF9URU1QTEFU",
            "RV9RVUFMSUZJRVIQAipYCglBc3NldEtpbmQSEwoPQVNTRVRfS0lORF9UWVBF",
            "EAASFwoTQVNTRVRfS0lORF9JTlNUQU5DRRABEh0KGUFTU0VUX0tJTkRfTk9U",
            "X0FQUExJQ0FCTEUQAirlBQoTU3VibW9kZWxFbGVtZW50VHlwZRI4CjRTVUJN",
            "T0RFTF9FTEVNRU5UX1RZUEVfQU5OT1RBVEVEX1JFTEFUSU9OU0hJUF9FTEVN",
            "RU5UEAASLQopU1VCTU9ERUxfRUxFTUVOVF9UWVBFX0JBU0lDX0VWRU5UX0VM",
            "RU1FTlQQARIeChpTVUJNT0RFTF9FTEVNRU5UX1RZUEVfQkxPQhACEiQKIFNV",
            "Qk1PREVMX0VMRU1FTlRfVFlQRV9DQVBBQklMSVRZEAMSJgoiU1VCTU9ERUxf",
            "RUxFTUVOVF9UWVBFX0RBVEFfRUxFTUVOVBAEEiAKHFNVQk1PREVMX0VMRU1F",
            "TlRfVFlQRV9FTlRJVFkQBRInCiNTVUJNT0RFTF9FTEVNRU5UX1RZUEVfRVZF",
            "TlRfRUxFTUVOVBAGEh4KGlNVQk1PREVMX0VMRU1FTlRfVFlQRV9GSUxFEAcS",
            "MQotU1VCTU9ERUxfRUxFTUVOVF9UWVBFX01VTFRJX0xBTkdVQUdFX1BST1BF",
            "UlRZEAgSIwofU1VCTU9ERUxfRUxFTUVOVF9UWVBFX09QRVJBVElPThAJEiIK",
            "HlNVQk1PREVMX0VMRU1FTlRfVFlQRV9QUk9QRVJUWRAKEh8KG1NVQk1PREVM",
            "X0VMRU1FTlRfVFlQRV9SQU5HRRALEisKJ1NVQk1PREVMX0VMRU1FTlRfVFlQ",
            "RV9SRUZFUkVOQ0VfRUxFTUVOVBAMEi4KKlNVQk1PREVMX0VMRU1FTlRfVFlQ",
            "RV9SRUxBVElPTlNISVBfRUxFTUVOVBANEioKJlNVQk1PREVMX0VMRU1FTlRf",
            "VFlQRV9TVUJNT0RFTF9FTEVNRU5UEA4SLworU1VCTU9ERUxfRUxFTUVOVF9U",
            "WVBFX1NVQk1PREVMX0VMRU1FTlRfTElTVBAPEjUKMVNVQk1PREVMX0VMRU1F",
            "TlRfVFlQRV9TVUJNT0RFTF9FTEVNRU5UX0NPTExFQ1RJT04QECpUCgpFbnRp",
            "dHlUeXBlEiEKHUVOVElUWV9UWVBFX0NPX01BTkFHRURfRU5USVRZEAASIwof",
            "RU5USVRZX1RZUEVfU0VMRl9NQU5BR0VEX0VOVElUWRABKjYKCURpcmVjdGlv",
            "bhITCg9ESVJFQ1RJT05fSU5QVVQQABIUChBESVJFQ1RJT05fT1VUUFVUEAEq",
            "PQoMU3RhdGVPZkV2ZW50EhUKEVNUQVRFX09GX0VWRU5UX09OEAASFgoSU1RB",
            "VEVfT0ZfRVZFTlRfT0ZGEAEqWwoOUmVmZXJlbmNlVHlwZXMSJQohUkVGRVJF",
            "TkNFX1RZUEVfRVhURVJOQUxfUkVGRVJFTkNFEAASIgoeUkVGRVJFTkNFX1RZ",
            "UEVfTU9ERUxfUkVGRVJFTkNFEAEq6gUKCEtleVR5cGVzEiwKKEtFWV9UWVBF",
            "U19BTk5PVEFURURfUkVMQVRJT05TSElQX0VMRU1FTlQQABIoCiRLRVlfVFlQ",
            "RVNfQVNTRVRfQURNSU5JU1RSQVRJT05fU0hFTEwQARIhCh1LRVlfVFlQRVNf",
            "QkFTSUNfRVZFTlRfRUxFTUVOVBACEhIKDktFWV9UWVBFU19CTE9CEAMSGAoU",
            "S0VZX1RZUEVTX0NBUEFCSUxJVFkQBBIhCh1LRVlfVFlQRVNfQ09OQ0VQVF9E",
            "RVNDUklQVElPThAFEhoKFktFWV9UWVBFU19EQVRBX0VMRU1FTlQQBhIUChBL",
            "RVlfVFlQRVNfRU5USVRZEAcSGwoXS0VZX1RZUEVTX0VWRU5UX0VMRU1FTlQQ",
            "CBISCg5LRVlfVFlQRVNfRklMRRAJEiAKHEtFWV9UWVBFU19GUkFHTUVOVF9S",
            "RUZFUkVOQ0UQChIeChpLRVlfVFlQRVNfR0xPQkFMX1JFRkVSRU5DRRALEhoK",
            "FktFWV9UWVBFU19JREVOVElGSUFCTEUQDBIlCiFLRVlfVFlQRVNfTVVMVElf",
            "TEFOR1VBR0VfUFJPUEVSVFkQDRIXChNLRVlfVFlQRVNfT1BFUkFUSU9OEA4S",
            "FgoSS0VZX1RZUEVTX1BST1BFUlRZEA8SEwoPS0VZX1RZUEVTX1JBTkdFEBAS",
            "FwoTS0VZX1RZUEVTX1JFRkVSQUJMRRAREh8KG0tFWV9UWVBFU19SRUZFUkVO",
            "Q0VfRUxFTUVOVBASEiIKHktFWV9UWVBFU19SRUxBVElPTlNISVBfRUxFTUVO",
            "VBATEhYKEktFWV9UWVBFU19TVUJNT0RFTBAUEh4KGktFWV9UWVBFU19TVUJN",
            "T0RFTF9FTEVNRU5UEBUSKQolS0VZX1RZUEVTX1NVQk1PREVMX0VMRU1FTlRf",
            "Q09MTEVDVElPThAWEiMKH0tFWV9UWVBFU19TVUJNT0RFTF9FTEVNRU5UX0xJ",
            "U1QQFyryBwoORGF0YVR5cGVEZWZYc2QSHQoZREFUQV9UWVBFX0RFRl9YU0Rf",
            "QU5ZX1VSSRAAEiMKH0RBVEFfVFlQRV9ERUZfWFNEX0JBU0U2NF9CSU5BUlkQ",
            "ARIdChlEQVRBX1RZUEVfREVGX1hTRF9CT09MRUFOEAISGgoWREFUQV9UWVBF",
            "X0RFRl9YU0RfQllURRADEhoKFkRBVEFfVFlQRV9ERUZfWFNEX0RBVEUQBBIf",
            "ChtEQVRBX1RZUEVfREVGX1hTRF9EQVRFX1RJTUUQBRIdChlEQVRBX1RZUEVf",
            "REVGX1hTRF9ERUNJTUFMEAYSHAoYREFUQV9UWVBFX0RFRl9YU0RfRE9VQkxF",
            "EAcSHgoaREFUQV9UWVBFX0RFRl9YU0RfRFVSQVRJT04QCBIbChdEQVRBX1RZ",
            "UEVfREVGX1hTRF9GTE9BVBAJEhsKF0RBVEFfVFlQRV9ERUZfWFNEX0dfREFZ",
            "EAoSHQoZREFUQV9UWVBFX0RFRl9YU0RfR19NT05USBALEiEKHURBVEFfVFlQ",
            "RV9ERUZfWFNEX0dfTU9OVEhfREFZEAwSHAoYREFUQV9UWVBFX0RFRl9YU0Rf",
            "R19ZRUFSEA0SIgoeREFUQV9UWVBFX0RFRl9YU0RfR19ZRUFSX01PTlRIEA4S",
            "IAocREFUQV9UWVBFX0RFRl9YU0RfSEVYX0JJTkFSWRAPEhkKFURBVEFfVFlQ",
            "RV9ERUZfWFNEX0lOVBAQEh0KGURBVEFfVFlQRV9ERUZfWFNEX0lOVEVHRVIQ",
            "ERIaChZEQVRBX1RZUEVfREVGX1hTRF9MT05HEBISJgoiREFUQV9UWVBFX0RF",
            "Rl9YU0RfTkVHQVRJVkVfSU5URUdFUhATEioKJkRBVEFfVFlQRV9ERUZfWFNE",
            "X05PTl9ORUdBVElWRV9JTlRFR0VSEBQSKgomREFUQV9UWVBFX0RFRl9YU0Rf",
            "Tk9OX1BPU0lUSVZFX0lOVEVHRVIQFRImCiJEQVRBX1RZUEVfREVGX1hTRF9Q",
            "T1NJVElWRV9JTlRFR0VSEBYSGwoXREFUQV9UWVBFX0RFRl9YU0RfU0hPUlQQ",
            "FxIcChhEQVRBX1RZUEVfREVGX1hTRF9TVFJJTkcQGBIaChZEQVRBX1RZUEVf",
            "REVGX1hTRF9USU1FEBkSIwofREFUQV9UWVBFX0RFRl9YU0RfVU5TSUdORURf",
            "QllURRAaEiIKHkRBVEFfVFlQRV9ERUZfWFNEX1VOU0lHTkVEX0lOVBAbEiMK",
            "H0RBVEFfVFlQRV9ERUZfWFNEX1VOU0lHTkVEX0xPTkcQHBIkCiBEQVRBX1RZ",
            "UEVfREVGX1hTRF9VTlNJR05FRF9TSE9SVBAdKqsFChBEYXRhVHlwZUllYzYx",
            "MzYwEhwKGERBVEFfVFlQRV9JRUNfNjEzNjBfREFURRAAEh4KGkRBVEFfVFlQ",
            "RV9JRUNfNjEzNjBfU1RSSU5HEAESKwonREFUQV9UWVBFX0lFQ182MTM2MF9T",
            "VFJJTkdfVFJBTlNMQVRBQkxFEAISJwojREFUQV9UWVBFX0lFQ182MTM2MF9J",
            "TlRFR0VSX01FQVNVUkUQAxIlCiFEQVRBX1RZUEVfSUVDXzYxMzYwX0lOVEVH",
            "RVJfQ09VTlQQBBIoCiREQVRBX1RZUEVfSUVDXzYxMzYwX0lOVEVHRVJfQ1VS",
            "UkVOQ1kQBRIkCiBEQVRBX1RZUEVfSUVDXzYxMzYwX1JFQUxfTUVBU1VSRRAG",
            "EiIKHkRBVEFfVFlQRV9JRUNfNjEzNjBfUkVBTF9DT1VOVBAHEiUKIURBVEFf",
            "VFlQRV9JRUNfNjEzNjBfUkVBTF9DVVJSRU5DWRAIEh8KG0RBVEFfVFlQRV9J",
            "RUNfNjEzNjBfQk9PTEVBThAJEhsKF0RBVEFfVFlQRV9JRUNfNjEzNjBfSVJJ",
            "EAoSHAoYREFUQV9UWVBFX0lFQ182MTM2MF9JUkRJEAsSIAocREFUQV9UWVBF",
            "X0lFQ182MTM2MF9SQVRJT05BTBAMEigKJERBVEFfVFlQRV9JRUNfNjEzNjBf",
            "UkFUSU9OQUxfTUVBU1VSRRANEhwKGERBVEFfVFlQRV9JRUNfNjEzNjBfVElN",
            "RRAOEiEKHURBVEFfVFlQRV9JRUNfNjEzNjBfVElNRVNUQU1QEA8SHAoYREFU",
            "QV9UWVBFX0lFQ182MTM2MF9GSUxFEBASHAoYREFUQV9UWVBFX0lFQ182MTM2",
            "MF9IVE1MEBESHAoYREFUQV9UWVBFX0lFQ182MTM2MF9CTE9CEBJCEqoCD0ZT",
            "Ui5HUlBDLkxpYi5WM2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::FSR.GRPC.Lib.V3.ModellingKind), typeof(global::FSR.GRPC.Lib.V3.QualifierKind), typeof(global::FSR.GRPC.Lib.V3.AssetKind), typeof(global::FSR.GRPC.Lib.V3.SubmodelElementType), typeof(global::FSR.GRPC.Lib.V3.EntityType), typeof(global::FSR.GRPC.Lib.V3.Direction), typeof(global::FSR.GRPC.Lib.V3.StateOfEvent), typeof(global::FSR.GRPC.Lib.V3.ReferenceTypes), typeof(global::FSR.GRPC.Lib.V3.KeyTypes), typeof(global::FSR.GRPC.Lib.V3.DataTypeDefXsd), typeof(global::FSR.GRPC.Lib.V3.DataTypeIec61360), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.ExtensionDTO), global::FSR.GRPC.Lib.V3.ExtensionDTO.Parser, new[]{ "SemanticId", "SupplementalSemanticIds", "Name", "ValueType", "Value", "RefersTo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.AdministrativeInformationDTO), global::FSR.GRPC.Lib.V3.AdministrativeInformationDTO.Parser, new[]{ "EmbeddedDataSpecifications", "Version", "Revision", "Creator", "TemplateId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.QualifierDTO), global::FSR.GRPC.Lib.V3.QualifierDTO.Parser, new[]{ "SemanticId", "SupplementalSemanticIds", "Kind", "Type", "ValueType", "Value", "ValueId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.AssetAdministrationShellDTO), global::FSR.GRPC.Lib.V3.AssetAdministrationShellDTO.Parser, new[]{ "Extensions", "Category", "IdShort", "DisplayName", "Description", "Administration", "Id", "EmbeddedDataSpecifications", "DerivedFrom", "AssetInformation", "Submodels" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.AssetInformationDTO), global::FSR.GRPC.Lib.V3.AssetInformationDTO.Parser, new[]{ "AssetKind", "GlobalAssetId", "SpecificAssetIds", "AssetType", "DefaultThumbnail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.ResourceDTO), global::FSR.GRPC.Lib.V3.ResourceDTO.Parser, new[]{ "Path", "ContentType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.SpecificAssetIdDTO), global::FSR.GRPC.Lib.V3.SpecificAssetIdDTO.Parser, new[]{ "SemanticId", "SupplementalSemanticIds", "Name", "Value", "ExternalSubjectId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.SubmodelDTO), global::FSR.GRPC.Lib.V3.SubmodelDTO.Parser, new[]{ "Extensions", "Category", "IdShort", "DisplayName", "Description", "Administration", "Id", "Kind", "SemanticId", "SupplementalSemanticIds", "Qualifiers", "EmbeddedDataSpecifications", "SubmodelElements" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.SubmodelElementDTO), global::FSR.GRPC.Lib.V3.SubmodelElementDTO.Parser, new[]{ "Extensions", "Category", "IdShort", "DisplayName", "Description", "SemanticId", "SupplementalSemanticIds", "Qualifiers", "EmbeddedDataSpecifications", "SubmodelElementType", "AnnotatedRelationshipElement", "BasicEventElement", "Blob", "Capability", "DataElement", "Entity", "EventElement", "File", "MultiLanguageProperty", "Operation", "Property", "Range", "ReferenceElement", "RelationshipElement", "SubmodelElementList", "SubmodelElementCollection" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.RelationshipElementPayloadDTO), global::FSR.GRPC.Lib.V3.RelationshipElementPayloadDTO.Parser, new[]{ "First", "Second" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.SubmodelElementListPayloadDTO), global::FSR.GRPC.Lib.V3.SubmodelElementListPayloadDTO.Parser, new[]{ "OrderRelevant", "SemanticIdListElement", "TypeValueListElement", "ValueTypeListElement", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.SubmodelElementCollectionPayloadDTO), global::FSR.GRPC.Lib.V3.SubmodelElementCollectionPayloadDTO.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.DataElementPayloadDTO), global::FSR.GRPC.Lib.V3.DataElementPayloadDTO.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.DataElementDTO), global::FSR.GRPC.Lib.V3.DataElementDTO.Parser, new[]{ "Extensions", "Category", "IdShort", "DisplayName", "Description", "SemanticId", "SupplementalSemanticIds", "Qualifiers", "EmbeddedDataSpecifications", "SubmodelElementType", "Property", "MultiLanguageProperty", "Range", "ReferenceElement", "Blob", "File" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.PropertyPayloadDTO), global::FSR.GRPC.Lib.V3.PropertyPayloadDTO.Parser, new[]{ "ValueType", "Value", "ValueId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.MultiLanguagePropertyPayloadDTO), global::FSR.GRPC.Lib.V3.MultiLanguagePropertyPayloadDTO.Parser, new[]{ "Value", "ValueId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.RangePayloadDTO), global::FSR.GRPC.Lib.V3.RangePayloadDTO.Parser, new[]{ "ValueType", "Min", "Max" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.ReferenceElementPayloadDTO), global::FSR.GRPC.Lib.V3.ReferenceElementPayloadDTO.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.BlobPayloadDTO), global::FSR.GRPC.Lib.V3.BlobPayloadDTO.Parser, new[]{ "Value", "ContentType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.FilePayloadDTO), global::FSR.GRPC.Lib.V3.FilePayloadDTO.Parser, new[]{ "Value", "ContentType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.AnnotatedRelationshipElementPayloadDTO), global::FSR.GRPC.Lib.V3.AnnotatedRelationshipElementPayloadDTO.Parser, new[]{ "First", "Second", "Annotations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.EntityPayloadDTO), global::FSR.GRPC.Lib.V3.EntityPayloadDTO.Parser, new[]{ "Statements", "EntityType", "GlobalAssetId", "SpecificAssetIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.EventPayloadDTO), global::FSR.GRPC.Lib.V3.EventPayloadDTO.Parser, new[]{ "Source", "SourceSemanticId", "ObservableReference", "ObservableSemanticId", "Topic", "SubjectId", "Timestamp", "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.EventElementPayloadDTO), global::FSR.GRPC.Lib.V3.EventElementPayloadDTO.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.BasicEventElementPayloadDTO), global::FSR.GRPC.Lib.V3.BasicEventElementPayloadDTO.Parser, new[]{ "Observed", "Direction", "State", "MessageTopic", "MessageBroker", "LastUpdate", "MinInterval", "MaxInterval" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.OperationPayloadDTO), global::FSR.GRPC.Lib.V3.OperationPayloadDTO.Parser, new[]{ "InputVariables", "OutputVariables", "InoutVariables" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.OperationVariableDTO), global::FSR.GRPC.Lib.V3.OperationVariableDTO.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.CapabilityPayloadDTO), global::FSR.GRPC.Lib.V3.CapabilityPayloadDTO.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.ConceptDescriptionDTO), global::FSR.GRPC.Lib.V3.ConceptDescriptionDTO.Parser, new[]{ "Extensions", "Category", "IdShort", "DisplayName", "Description", "Administration", "Id", "EmbeddedDataSpecifications", "IsCaseOf" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.ReferenceDTO), global::FSR.GRPC.Lib.V3.ReferenceDTO.Parser, new[]{ "Type", "ReferredSemanticId", "Keys" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.KeyDTO), global::FSR.GRPC.Lib.V3.KeyDTO.Parser, new[]{ "Type", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.LangStringDTO), global::FSR.GRPC.Lib.V3.LangStringDTO.Parser, new[]{ "Language", "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO), global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO.Parser, new[]{ "DataSpecification", "DataSpecificationContent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.LevelTypeDTO), global::FSR.GRPC.Lib.V3.LevelTypeDTO.Parser, new[]{ "Min", "Nom", "Typ", "Max" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.ValueReferencePairDTO), global::FSR.GRPC.Lib.V3.ValueReferencePairDTO.Parser, new[]{ "Value", "ValueId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.ValueListDTO), global::FSR.GRPC.Lib.V3.ValueListDTO.Parser, new[]{ "ValueReferencePairs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.Lib.V3.DataSpecificationContentDTO), global::FSR.GRPC.Lib.V3.DataSpecificationContentDTO.Parser, new[]{ "PreferredName", "ShortName", "Unit", "UnitId", "Symbol", "DataType", "Definition", "ValueFormat", "ValueList", "Value", "LevelType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ModellingKind {
    [pbr::OriginalName("MODELLING_KIND_TEMPLATE")] Template = 0,
    [pbr::OriginalName("MODELLING_KIND_INSTANCE")] Instance = 1,
  }

  public enum QualifierKind {
    [pbr::OriginalName("QUALIFIER_KIND_VALUE_QUALIFIER")] ValueQualifier = 0,
    [pbr::OriginalName("QUALIFIER_KIND_CONCEPT_QUALIFIER")] ConceptQualifier = 1,
    [pbr::OriginalName("QUALIFIER_KIND_TEMPLATE_QUALIFIER")] TemplateQualifier = 2,
  }

  public enum AssetKind {
    [pbr::OriginalName("ASSET_KIND_TYPE")] Type = 0,
    [pbr::OriginalName("ASSET_KIND_INSTANCE")] Instance = 1,
    [pbr::OriginalName("ASSET_KIND_NOT_APPLICABLE")] NotApplicable = 2,
  }

  public enum SubmodelElementType {
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_ANNOTATED_RELATIONSHIP_ELEMENT")] AnnotatedRelationshipElement = 0,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_BASIC_EVENT_ELEMENT")] BasicEventElement = 1,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_BLOB")] Blob = 2,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_CAPABILITY")] Capability = 3,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_DATA_ELEMENT")] DataElement = 4,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_ENTITY")] Entity = 5,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_EVENT_ELEMENT")] EventElement = 6,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_FILE")] File = 7,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_MULTI_LANGUAGE_PROPERTY")] MultiLanguageProperty = 8,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_OPERATION")] Operation = 9,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_PROPERTY")] Property = 10,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_RANGE")] Range = 11,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_REFERENCE_ELEMENT")] ReferenceElement = 12,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_RELATIONSHIP_ELEMENT")] RelationshipElement = 13,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_SUBMODEL_ELEMENT")] SubmodelElement = 14,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_SUBMODEL_ELEMENT_LIST")] SubmodelElementList = 15,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_SUBMODEL_ELEMENT_COLLECTION")] SubmodelElementCollection = 16,
  }

  public enum EntityType {
    [pbr::OriginalName("ENTITY_TYPE_CO_MANAGED_ENTITY")] CoManagedEntity = 0,
    [pbr::OriginalName("ENTITY_TYPE_SELF_MANAGED_ENTITY")] SelfManagedEntity = 1,
  }

  public enum Direction {
    [pbr::OriginalName("DIRECTION_INPUT")] Input = 0,
    [pbr::OriginalName("DIRECTION_OUTPUT")] Output = 1,
  }

  public enum StateOfEvent {
    [pbr::OriginalName("STATE_OF_EVENT_ON")] On = 0,
    [pbr::OriginalName("STATE_OF_EVENT_OFF")] Off = 1,
  }

  public enum ReferenceTypes {
    [pbr::OriginalName("REFERENCE_TYPE_EXTERNAL_REFERENCE")] ReferenceTypeExternalReference = 0,
    [pbr::OriginalName("REFERENCE_TYPE_MODEL_REFERENCE")] ReferenceTypeModelReference = 1,
  }

  public enum KeyTypes {
    [pbr::OriginalName("KEY_TYPES_ANNOTATED_RELATIONSHIP_ELEMENT")] AnnotatedRelationshipElement = 0,
    [pbr::OriginalName("KEY_TYPES_ASSET_ADMINISTRATION_SHELL")] AssetAdministrationShell = 1,
    [pbr::OriginalName("KEY_TYPES_BASIC_EVENT_ELEMENT")] BasicEventElement = 2,
    [pbr::OriginalName("KEY_TYPES_BLOB")] Blob = 3,
    [pbr::OriginalName("KEY_TYPES_CAPABILITY")] Capability = 4,
    [pbr::OriginalName("KEY_TYPES_CONCEPT_DESCRIPTION")] ConceptDescription = 5,
    [pbr::OriginalName("KEY_TYPES_DATA_ELEMENT")] DataElement = 6,
    [pbr::OriginalName("KEY_TYPES_ENTITY")] Entity = 7,
    [pbr::OriginalName("KEY_TYPES_EVENT_ELEMENT")] EventElement = 8,
    [pbr::OriginalName("KEY_TYPES_FILE")] File = 9,
    [pbr::OriginalName("KEY_TYPES_FRAGMENT_REFERENCE")] FragmentReference = 10,
    [pbr::OriginalName("KEY_TYPES_GLOBAL_REFERENCE")] GlobalReference = 11,
    [pbr::OriginalName("KEY_TYPES_IDENTIFIABLE")] Identifiable = 12,
    [pbr::OriginalName("KEY_TYPES_MULTI_LANGUAGE_PROPERTY")] MultiLanguageProperty = 13,
    [pbr::OriginalName("KEY_TYPES_OPERATION")] Operation = 14,
    [pbr::OriginalName("KEY_TYPES_PROPERTY")] Property = 15,
    [pbr::OriginalName("KEY_TYPES_RANGE")] Range = 16,
    [pbr::OriginalName("KEY_TYPES_REFERABLE")] Referable = 17,
    [pbr::OriginalName("KEY_TYPES_REFERENCE_ELEMENT")] ReferenceElement = 18,
    [pbr::OriginalName("KEY_TYPES_RELATIONSHIP_ELEMENT")] RelationshipElement = 19,
    [pbr::OriginalName("KEY_TYPES_SUBMODEL")] Submodel = 20,
    [pbr::OriginalName("KEY_TYPES_SUBMODEL_ELEMENT")] SubmodelElement = 21,
    [pbr::OriginalName("KEY_TYPES_SUBMODEL_ELEMENT_COLLECTION")] SubmodelElementCollection = 22,
    [pbr::OriginalName("KEY_TYPES_SUBMODEL_ELEMENT_LIST")] SubmodelElementList = 23,
  }

  public enum DataTypeDefXsd {
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_ANY_URI")] AnyUri = 0,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_BASE64_BINARY")] Base64Binary = 1,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_BOOLEAN")] Boolean = 2,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_BYTE")] Byte = 3,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_DATE")] Date = 4,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_DATE_TIME")] DateTime = 5,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_DECIMAL")] Decimal = 6,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_DOUBLE")] Double = 7,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_DURATION")] Duration = 8,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_FLOAT")] Float = 9,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_G_DAY")] GDay = 10,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_G_MONTH")] GMonth = 11,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_G_MONTH_DAY")] GMonthDay = 12,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_G_YEAR")] GYear = 13,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_G_YEAR_MONTH")] GYearMonth = 14,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_HEX_BINARY")] HexBinary = 15,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_INT")] Int = 16,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_INTEGER")] Integer = 17,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_LONG")] Long = 18,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_NEGATIVE_INTEGER")] NegativeInteger = 19,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_NON_NEGATIVE_INTEGER")] NonNegativeInteger = 20,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_NON_POSITIVE_INTEGER")] NonPositiveInteger = 21,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_POSITIVE_INTEGER")] PositiveInteger = 22,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_SHORT")] Short = 23,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_STRING")] String = 24,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_TIME")] Time = 25,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_UNSIGNED_BYTE")] UnsignedByte = 26,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_UNSIGNED_INT")] UnsignedInt = 27,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_UNSIGNED_LONG")] UnsignedLong = 28,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_UNSIGNED_SHORT")] UnsignedShort = 29,
  }

  public enum DataTypeIec61360 {
    [pbr::OriginalName("DATA_TYPE_IEC_61360_DATE")] Date = 0,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_STRING")] String = 1,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_STRING_TRANSLATABLE")] StringTranslatable = 2,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_INTEGER_MEASURE")] IntegerMeasure = 3,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_INTEGER_COUNT")] IntegerCount = 4,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_INTEGER_CURRENCY")] IntegerCurrency = 5,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_REAL_MEASURE")] RealMeasure = 6,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_REAL_COUNT")] RealCount = 7,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_REAL_CURRENCY")] RealCurrency = 8,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_BOOLEAN")] Boolean = 9,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_IRI")] Iri = 10,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_IRDI")] Irdi = 11,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_RATIONAL")] Rational = 12,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_RATIONAL_MEASURE")] RationalMeasure = 13,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_TIME")] Time = 14,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_TIMESTAMP")] Timestamp = 15,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_FILE")] File = 16,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_HTML")] Html = 17,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_BLOB")] Blob = 18,
  }

  #endregion

  #region Messages
  public sealed partial class ExtensionDTO : pb::IMessage<ExtensionDTO> {
    private static readonly pb::MessageParser<ExtensionDTO> _parser = new pb::MessageParser<ExtensionDTO>(() => new ExtensionDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExtensionDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtensionDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtensionDTO(ExtensionDTO other) : this() {
      semanticId_ = other.semanticId_ != null ? other.semanticId_.Clone() : null;
      supplementalSemanticIds_ = other.supplementalSemanticIds_.Clone();
      name_ = other.name_;
      valueType_ = other.valueType_;
      value_ = other.value_;
      refersTo_ = other.refersTo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtensionDTO Clone() {
      return new ExtensionDTO(this);
    }

    /// <summary>Field number for the "semanticId" field.</summary>
    public const int SemanticIdFieldNumber = 1;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO semanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO SemanticId {
      get { return semanticId_; }
      set {
        semanticId_ = value;
      }
    }

    /// <summary>Field number for the "supplementalSemanticIds" field.</summary>
    public const int SupplementalSemanticIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.ReferenceDTO> _repeated_supplementalSemanticIds_codec
        = pb::FieldCodec.ForMessage(18, global::FSR.GRPC.Lib.V3.ReferenceDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> supplementalSemanticIds_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> SupplementalSemanticIds {
      get { return supplementalSemanticIds_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valueType" field.</summary>
    public const int ValueTypeFieldNumber = 4;
    private global::FSR.GRPC.Lib.V3.DataTypeDefXsd valueType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.DataTypeDefXsd ValueType {
      get { return valueType_; }
      set {
        valueType_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 5;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "refersTo" field.</summary>
    public const int RefersToFieldNumber = 6;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.ReferenceDTO> _repeated_refersTo_codec
        = pb::FieldCodec.ForMessage(50, global::FSR.GRPC.Lib.V3.ReferenceDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> refersTo_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> RefersTo {
      get { return refersTo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExtensionDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExtensionDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SemanticId, other.SemanticId)) return false;
      if(!supplementalSemanticIds_.Equals(other.supplementalSemanticIds_)) return false;
      if (Name != other.Name) return false;
      if (ValueType != other.ValueType) return false;
      if (Value != other.Value) return false;
      if(!refersTo_.Equals(other.refersTo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (semanticId_ != null) hash ^= SemanticId.GetHashCode();
      hash ^= supplementalSemanticIds_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ValueType != 0) hash ^= ValueType.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      hash ^= refersTo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (semanticId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SemanticId);
      }
      supplementalSemanticIds_.WriteTo(output, _repeated_supplementalSemanticIds_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (ValueType != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ValueType);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Value);
      }
      refersTo_.WriteTo(output, _repeated_refersTo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (semanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticId);
      }
      size += supplementalSemanticIds_.CalculateSize(_repeated_supplementalSemanticIds_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ValueType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValueType);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      size += refersTo_.CalculateSize(_repeated_refersTo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExtensionDTO other) {
      if (other == null) {
        return;
      }
      if (other.semanticId_ != null) {
        if (semanticId_ == null) {
          SemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        SemanticId.MergeFrom(other.SemanticId);
      }
      supplementalSemanticIds_.Add(other.supplementalSemanticIds_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ValueType != 0) {
        ValueType = other.ValueType;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      refersTo_.Add(other.refersTo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (semanticId_ == null) {
              SemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(SemanticId);
            break;
          }
          case 18: {
            supplementalSemanticIds_.AddEntriesFrom(input, _repeated_supplementalSemanticIds_codec);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            ValueType = (global::FSR.GRPC.Lib.V3.DataTypeDefXsd) input.ReadEnum();
            break;
          }
          case 42: {
            Value = input.ReadString();
            break;
          }
          case 50: {
            refersTo_.AddEntriesFrom(input, _repeated_refersTo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdministrativeInformationDTO : pb::IMessage<AdministrativeInformationDTO> {
    private static readonly pb::MessageParser<AdministrativeInformationDTO> _parser = new pb::MessageParser<AdministrativeInformationDTO>(() => new AdministrativeInformationDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdministrativeInformationDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdministrativeInformationDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdministrativeInformationDTO(AdministrativeInformationDTO other) : this() {
      embeddedDataSpecifications_ = other.embeddedDataSpecifications_.Clone();
      version_ = other.version_;
      revision_ = other.revision_;
      creator_ = other.creator_ != null ? other.creator_.Clone() : null;
      templateId_ = other.templateId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdministrativeInformationDTO Clone() {
      return new AdministrativeInformationDTO(this);
    }

    /// <summary>Field number for the "embeddedDataSpecifications" field.</summary>
    public const int EmbeddedDataSpecificationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> _repeated_embeddedDataSpecifications_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> embeddedDataSpecifications_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> EmbeddedDataSpecifications {
      get { return embeddedDataSpecifications_; }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "revision" field.</summary>
    public const int RevisionFieldNumber = 3;
    private string revision_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Revision {
      get { return revision_; }
      set {
        revision_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "creator" field.</summary>
    public const int CreatorFieldNumber = 4;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO creator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO Creator {
      get { return creator_; }
      set {
        creator_ = value;
      }
    }

    /// <summary>Field number for the "templateId" field.</summary>
    public const int TemplateIdFieldNumber = 5;
    private string templateId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TemplateId {
      get { return templateId_; }
      set {
        templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdministrativeInformationDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdministrativeInformationDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!embeddedDataSpecifications_.Equals(other.embeddedDataSpecifications_)) return false;
      if (Version != other.Version) return false;
      if (Revision != other.Revision) return false;
      if (!object.Equals(Creator, other.Creator)) return false;
      if (TemplateId != other.TemplateId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= embeddedDataSpecifications_.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Revision.Length != 0) hash ^= Revision.GetHashCode();
      if (creator_ != null) hash ^= Creator.GetHashCode();
      if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      embeddedDataSpecifications_.WriteTo(output, _repeated_embeddedDataSpecifications_codec);
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (Revision.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Revision);
      }
      if (creator_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Creator);
      }
      if (TemplateId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TemplateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += embeddedDataSpecifications_.CalculateSize(_repeated_embeddedDataSpecifications_codec);
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Revision.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Revision);
      }
      if (creator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Creator);
      }
      if (TemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdministrativeInformationDTO other) {
      if (other == null) {
        return;
      }
      embeddedDataSpecifications_.Add(other.embeddedDataSpecifications_);
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Revision.Length != 0) {
        Revision = other.Revision;
      }
      if (other.creator_ != null) {
        if (creator_ == null) {
          Creator = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        Creator.MergeFrom(other.Creator);
      }
      if (other.TemplateId.Length != 0) {
        TemplateId = other.TemplateId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            embeddedDataSpecifications_.AddEntriesFrom(input, _repeated_embeddedDataSpecifications_codec);
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            Revision = input.ReadString();
            break;
          }
          case 34: {
            if (creator_ == null) {
              Creator = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(Creator);
            break;
          }
          case 42: {
            TemplateId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QualifierDTO : pb::IMessage<QualifierDTO> {
    private static readonly pb::MessageParser<QualifierDTO> _parser = new pb::MessageParser<QualifierDTO>(() => new QualifierDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QualifierDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QualifierDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QualifierDTO(QualifierDTO other) : this() {
      semanticId_ = other.semanticId_ != null ? other.semanticId_.Clone() : null;
      supplementalSemanticIds_ = other.supplementalSemanticIds_.Clone();
      kind_ = other.kind_;
      type_ = other.type_;
      valueType_ = other.valueType_;
      value_ = other.value_;
      valueId_ = other.valueId_ != null ? other.valueId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QualifierDTO Clone() {
      return new QualifierDTO(this);
    }

    /// <summary>Field number for the "semanticId" field.</summary>
    public const int SemanticIdFieldNumber = 1;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO semanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO SemanticId {
      get { return semanticId_; }
      set {
        semanticId_ = value;
      }
    }

    /// <summary>Field number for the "supplementalSemanticIds" field.</summary>
    public const int SupplementalSemanticIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.ReferenceDTO> _repeated_supplementalSemanticIds_codec
        = pb::FieldCodec.ForMessage(18, global::FSR.GRPC.Lib.V3.ReferenceDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> supplementalSemanticIds_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> SupplementalSemanticIds {
      get { return supplementalSemanticIds_; }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 3;
    private global::FSR.GRPC.Lib.V3.QualifierKind kind_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.QualifierKind Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valueType" field.</summary>
    public const int ValueTypeFieldNumber = 5;
    private global::FSR.GRPC.Lib.V3.DataTypeDefXsd valueType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.DataTypeDefXsd ValueType {
      get { return valueType_; }
      set {
        valueType_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 6;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valueId" field.</summary>
    public const int ValueIdFieldNumber = 7;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO valueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO ValueId {
      get { return valueId_; }
      set {
        valueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QualifierDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QualifierDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SemanticId, other.SemanticId)) return false;
      if(!supplementalSemanticIds_.Equals(other.supplementalSemanticIds_)) return false;
      if (Kind != other.Kind) return false;
      if (Type != other.Type) return false;
      if (ValueType != other.ValueType) return false;
      if (Value != other.Value) return false;
      if (!object.Equals(ValueId, other.ValueId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (semanticId_ != null) hash ^= SemanticId.GetHashCode();
      hash ^= supplementalSemanticIds_.GetHashCode();
      if (Kind != 0) hash ^= Kind.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (ValueType != 0) hash ^= ValueType.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (valueId_ != null) hash ^= ValueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (semanticId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SemanticId);
      }
      supplementalSemanticIds_.WriteTo(output, _repeated_supplementalSemanticIds_codec);
      if (Kind != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Kind);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Type);
      }
      if (ValueType != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ValueType);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Value);
      }
      if (valueId_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ValueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (semanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticId);
      }
      size += supplementalSemanticIds_.CalculateSize(_repeated_supplementalSemanticIds_codec);
      if (Kind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (ValueType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValueType);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (valueId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QualifierDTO other) {
      if (other == null) {
        return;
      }
      if (other.semanticId_ != null) {
        if (semanticId_ == null) {
          SemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        SemanticId.MergeFrom(other.SemanticId);
      }
      supplementalSemanticIds_.Add(other.supplementalSemanticIds_);
      if (other.Kind != 0) {
        Kind = other.Kind;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.ValueType != 0) {
        ValueType = other.ValueType;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.valueId_ != null) {
        if (valueId_ == null) {
          ValueId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        ValueId.MergeFrom(other.ValueId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (semanticId_ == null) {
              SemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(SemanticId);
            break;
          }
          case 18: {
            supplementalSemanticIds_.AddEntriesFrom(input, _repeated_supplementalSemanticIds_codec);
            break;
          }
          case 24: {
            Kind = (global::FSR.GRPC.Lib.V3.QualifierKind) input.ReadEnum();
            break;
          }
          case 34: {
            Type = input.ReadString();
            break;
          }
          case 40: {
            ValueType = (global::FSR.GRPC.Lib.V3.DataTypeDefXsd) input.ReadEnum();
            break;
          }
          case 50: {
            Value = input.ReadString();
            break;
          }
          case 58: {
            if (valueId_ == null) {
              ValueId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(ValueId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssetAdministrationShellDTO : pb::IMessage<AssetAdministrationShellDTO> {
    private static readonly pb::MessageParser<AssetAdministrationShellDTO> _parser = new pb::MessageParser<AssetAdministrationShellDTO>(() => new AssetAdministrationShellDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssetAdministrationShellDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetAdministrationShellDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetAdministrationShellDTO(AssetAdministrationShellDTO other) : this() {
      extensions_ = other.extensions_.Clone();
      category_ = other.category_;
      idShort_ = other.idShort_;
      displayName_ = other.displayName_.Clone();
      description_ = other.description_.Clone();
      administration_ = other.administration_ != null ? other.administration_.Clone() : null;
      id_ = other.id_;
      embeddedDataSpecifications_ = other.embeddedDataSpecifications_.Clone();
      derivedFrom_ = other.derivedFrom_ != null ? other.derivedFrom_.Clone() : null;
      assetInformation_ = other.assetInformation_ != null ? other.assetInformation_.Clone() : null;
      submodels_ = other.submodels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetAdministrationShellDTO Clone() {
      return new AssetAdministrationShellDTO(this);
    }

    /// <summary>Field number for the "extensions" field.</summary>
    public const int ExtensionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.ExtensionDTO> _repeated_extensions_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.Lib.V3.ExtensionDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ExtensionDTO> extensions_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ExtensionDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ExtensionDTO> Extensions {
      get { return extensions_; }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 2;
    private string category_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idShort" field.</summary>
    public const int IdShortFieldNumber = 3;
    private string idShort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdShort {
      get { return idShort_; }
      set {
        idShort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.LangStringDTO> _repeated_displayName_codec
        = pb::FieldCodec.ForMessage(34, global::FSR.GRPC.Lib.V3.LangStringDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> displayName_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> DisplayName {
      get { return displayName_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.LangStringDTO> _repeated_description_codec
        = pb::FieldCodec.ForMessage(42, global::FSR.GRPC.Lib.V3.LangStringDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> description_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> Description {
      get { return description_; }
    }

    /// <summary>Field number for the "administration" field.</summary>
    public const int AdministrationFieldNumber = 6;
    private global::FSR.GRPC.Lib.V3.AdministrativeInformationDTO administration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.AdministrativeInformationDTO Administration {
      get { return administration_; }
      set {
        administration_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 7;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "embeddedDataSpecifications" field.</summary>
    public const int EmbeddedDataSpecificationsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> _repeated_embeddedDataSpecifications_codec
        = pb::FieldCodec.ForMessage(66, global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> embeddedDataSpecifications_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> EmbeddedDataSpecifications {
      get { return embeddedDataSpecifications_; }
    }

    /// <summary>Field number for the "derivedFrom" field.</summary>
    public const int DerivedFromFieldNumber = 9;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO derivedFrom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO DerivedFrom {
      get { return derivedFrom_; }
      set {
        derivedFrom_ = value;
      }
    }

    /// <summary>Field number for the "assetInformation" field.</summary>
    public const int AssetInformationFieldNumber = 10;
    private global::FSR.GRPC.Lib.V3.AssetInformationDTO assetInformation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.AssetInformationDTO AssetInformation {
      get { return assetInformation_; }
      set {
        assetInformation_ = value;
      }
    }

    /// <summary>Field number for the "submodels" field.</summary>
    public const int SubmodelsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.ReferenceDTO> _repeated_submodels_codec
        = pb::FieldCodec.ForMessage(90, global::FSR.GRPC.Lib.V3.ReferenceDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> submodels_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> Submodels {
      get { return submodels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssetAdministrationShellDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssetAdministrationShellDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!extensions_.Equals(other.extensions_)) return false;
      if (Category != other.Category) return false;
      if (IdShort != other.IdShort) return false;
      if(!displayName_.Equals(other.displayName_)) return false;
      if(!description_.Equals(other.description_)) return false;
      if (!object.Equals(Administration, other.Administration)) return false;
      if (Id != other.Id) return false;
      if(!embeddedDataSpecifications_.Equals(other.embeddedDataSpecifications_)) return false;
      if (!object.Equals(DerivedFrom, other.DerivedFrom)) return false;
      if (!object.Equals(AssetInformation, other.AssetInformation)) return false;
      if(!submodels_.Equals(other.submodels_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= extensions_.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (IdShort.Length != 0) hash ^= IdShort.GetHashCode();
      hash ^= displayName_.GetHashCode();
      hash ^= description_.GetHashCode();
      if (administration_ != null) hash ^= Administration.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= embeddedDataSpecifications_.GetHashCode();
      if (derivedFrom_ != null) hash ^= DerivedFrom.GetHashCode();
      if (assetInformation_ != null) hash ^= AssetInformation.GetHashCode();
      hash ^= submodels_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      extensions_.WriteTo(output, _repeated_extensions_codec);
      if (Category.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Category);
      }
      if (IdShort.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IdShort);
      }
      displayName_.WriteTo(output, _repeated_displayName_codec);
      description_.WriteTo(output, _repeated_description_codec);
      if (administration_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Administration);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Id);
      }
      embeddedDataSpecifications_.WriteTo(output, _repeated_embeddedDataSpecifications_codec);
      if (derivedFrom_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DerivedFrom);
      }
      if (assetInformation_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(AssetInformation);
      }
      submodels_.WriteTo(output, _repeated_submodels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += extensions_.CalculateSize(_repeated_extensions_codec);
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (IdShort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdShort);
      }
      size += displayName_.CalculateSize(_repeated_displayName_codec);
      size += description_.CalculateSize(_repeated_description_codec);
      if (administration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Administration);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += embeddedDataSpecifications_.CalculateSize(_repeated_embeddedDataSpecifications_codec);
      if (derivedFrom_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DerivedFrom);
      }
      if (assetInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AssetInformation);
      }
      size += submodels_.CalculateSize(_repeated_submodels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssetAdministrationShellDTO other) {
      if (other == null) {
        return;
      }
      extensions_.Add(other.extensions_);
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.IdShort.Length != 0) {
        IdShort = other.IdShort;
      }
      displayName_.Add(other.displayName_);
      description_.Add(other.description_);
      if (other.administration_ != null) {
        if (administration_ == null) {
          Administration = new global::FSR.GRPC.Lib.V3.AdministrativeInformationDTO();
        }
        Administration.MergeFrom(other.Administration);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      embeddedDataSpecifications_.Add(other.embeddedDataSpecifications_);
      if (other.derivedFrom_ != null) {
        if (derivedFrom_ == null) {
          DerivedFrom = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        DerivedFrom.MergeFrom(other.DerivedFrom);
      }
      if (other.assetInformation_ != null) {
        if (assetInformation_ == null) {
          AssetInformation = new global::FSR.GRPC.Lib.V3.AssetInformationDTO();
        }
        AssetInformation.MergeFrom(other.AssetInformation);
      }
      submodels_.Add(other.submodels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            extensions_.AddEntriesFrom(input, _repeated_extensions_codec);
            break;
          }
          case 18: {
            Category = input.ReadString();
            break;
          }
          case 26: {
            IdShort = input.ReadString();
            break;
          }
          case 34: {
            displayName_.AddEntriesFrom(input, _repeated_displayName_codec);
            break;
          }
          case 42: {
            description_.AddEntriesFrom(input, _repeated_description_codec);
            break;
          }
          case 50: {
            if (administration_ == null) {
              Administration = new global::FSR.GRPC.Lib.V3.AdministrativeInformationDTO();
            }
            input.ReadMessage(Administration);
            break;
          }
          case 58: {
            Id = input.ReadString();
            break;
          }
          case 66: {
            embeddedDataSpecifications_.AddEntriesFrom(input, _repeated_embeddedDataSpecifications_codec);
            break;
          }
          case 74: {
            if (derivedFrom_ == null) {
              DerivedFrom = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(DerivedFrom);
            break;
          }
          case 82: {
            if (assetInformation_ == null) {
              AssetInformation = new global::FSR.GRPC.Lib.V3.AssetInformationDTO();
            }
            input.ReadMessage(AssetInformation);
            break;
          }
          case 90: {
            submodels_.AddEntriesFrom(input, _repeated_submodels_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssetInformationDTO : pb::IMessage<AssetInformationDTO> {
    private static readonly pb::MessageParser<AssetInformationDTO> _parser = new pb::MessageParser<AssetInformationDTO>(() => new AssetInformationDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssetInformationDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetInformationDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetInformationDTO(AssetInformationDTO other) : this() {
      assetKind_ = other.assetKind_;
      globalAssetId_ = other.globalAssetId_;
      specificAssetIds_ = other.specificAssetIds_.Clone();
      assetType_ = other.assetType_;
      defaultThumbnail_ = other.defaultThumbnail_ != null ? other.defaultThumbnail_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetInformationDTO Clone() {
      return new AssetInformationDTO(this);
    }

    /// <summary>Field number for the "assetKind" field.</summary>
    public const int AssetKindFieldNumber = 1;
    private global::FSR.GRPC.Lib.V3.AssetKind assetKind_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.AssetKind AssetKind {
      get { return assetKind_; }
      set {
        assetKind_ = value;
      }
    }

    /// <summary>Field number for the "globalAssetId" field.</summary>
    public const int GlobalAssetIdFieldNumber = 2;
    private string globalAssetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GlobalAssetId {
      get { return globalAssetId_; }
      set {
        globalAssetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "specificAssetIds" field.</summary>
    public const int SpecificAssetIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.SpecificAssetIdDTO> _repeated_specificAssetIds_codec
        = pb::FieldCodec.ForMessage(26, global::FSR.GRPC.Lib.V3.SpecificAssetIdDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SpecificAssetIdDTO> specificAssetIds_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SpecificAssetIdDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SpecificAssetIdDTO> SpecificAssetIds {
      get { return specificAssetIds_; }
    }

    /// <summary>Field number for the "assetType" field.</summary>
    public const int AssetTypeFieldNumber = 4;
    private string assetType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetType {
      get { return assetType_; }
      set {
        assetType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "defaultThumbnail" field.</summary>
    public const int DefaultThumbnailFieldNumber = 5;
    private global::FSR.GRPC.Lib.V3.ResourceDTO defaultThumbnail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ResourceDTO DefaultThumbnail {
      get { return defaultThumbnail_; }
      set {
        defaultThumbnail_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssetInformationDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssetInformationDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AssetKind != other.AssetKind) return false;
      if (GlobalAssetId != other.GlobalAssetId) return false;
      if(!specificAssetIds_.Equals(other.specificAssetIds_)) return false;
      if (AssetType != other.AssetType) return false;
      if (!object.Equals(DefaultThumbnail, other.DefaultThumbnail)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AssetKind != 0) hash ^= AssetKind.GetHashCode();
      if (GlobalAssetId.Length != 0) hash ^= GlobalAssetId.GetHashCode();
      hash ^= specificAssetIds_.GetHashCode();
      if (AssetType.Length != 0) hash ^= AssetType.GetHashCode();
      if (defaultThumbnail_ != null) hash ^= DefaultThumbnail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AssetKind != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AssetKind);
      }
      if (GlobalAssetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GlobalAssetId);
      }
      specificAssetIds_.WriteTo(output, _repeated_specificAssetIds_codec);
      if (AssetType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AssetType);
      }
      if (defaultThumbnail_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DefaultThumbnail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AssetKind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AssetKind);
      }
      if (GlobalAssetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GlobalAssetId);
      }
      size += specificAssetIds_.CalculateSize(_repeated_specificAssetIds_codec);
      if (AssetType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetType);
      }
      if (defaultThumbnail_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefaultThumbnail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssetInformationDTO other) {
      if (other == null) {
        return;
      }
      if (other.AssetKind != 0) {
        AssetKind = other.AssetKind;
      }
      if (other.GlobalAssetId.Length != 0) {
        GlobalAssetId = other.GlobalAssetId;
      }
      specificAssetIds_.Add(other.specificAssetIds_);
      if (other.AssetType.Length != 0) {
        AssetType = other.AssetType;
      }
      if (other.defaultThumbnail_ != null) {
        if (defaultThumbnail_ == null) {
          DefaultThumbnail = new global::FSR.GRPC.Lib.V3.ResourceDTO();
        }
        DefaultThumbnail.MergeFrom(other.DefaultThumbnail);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AssetKind = (global::FSR.GRPC.Lib.V3.AssetKind) input.ReadEnum();
            break;
          }
          case 18: {
            GlobalAssetId = input.ReadString();
            break;
          }
          case 26: {
            specificAssetIds_.AddEntriesFrom(input, _repeated_specificAssetIds_codec);
            break;
          }
          case 34: {
            AssetType = input.ReadString();
            break;
          }
          case 42: {
            if (defaultThumbnail_ == null) {
              DefaultThumbnail = new global::FSR.GRPC.Lib.V3.ResourceDTO();
            }
            input.ReadMessage(DefaultThumbnail);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResourceDTO : pb::IMessage<ResourceDTO> {
    private static readonly pb::MessageParser<ResourceDTO> _parser = new pb::MessageParser<ResourceDTO>(() => new ResourceDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResourceDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceDTO(ResourceDTO other) : this() {
      path_ = other.path_;
      contentType_ = other.contentType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceDTO Clone() {
      return new ResourceDTO(this);
    }

    /// <summary>Field number for the "Path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContentType" field.</summary>
    public const int ContentTypeFieldNumber = 2;
    private string contentType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResourceDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResourceDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (ContentType != other.ContentType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (ContentType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (ContentType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResourceDTO other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            ContentType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpecificAssetIdDTO : pb::IMessage<SpecificAssetIdDTO> {
    private static readonly pb::MessageParser<SpecificAssetIdDTO> _parser = new pb::MessageParser<SpecificAssetIdDTO>(() => new SpecificAssetIdDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpecificAssetIdDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecificAssetIdDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecificAssetIdDTO(SpecificAssetIdDTO other) : this() {
      semanticId_ = other.semanticId_ != null ? other.semanticId_.Clone() : null;
      supplementalSemanticIds_ = other.supplementalSemanticIds_.Clone();
      name_ = other.name_;
      value_ = other.value_;
      externalSubjectId_ = other.externalSubjectId_ != null ? other.externalSubjectId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecificAssetIdDTO Clone() {
      return new SpecificAssetIdDTO(this);
    }

    /// <summary>Field number for the "semanticId" field.</summary>
    public const int SemanticIdFieldNumber = 1;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO semanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO SemanticId {
      get { return semanticId_; }
      set {
        semanticId_ = value;
      }
    }

    /// <summary>Field number for the "supplementalSemanticIds" field.</summary>
    public const int SupplementalSemanticIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.ReferenceDTO> _repeated_supplementalSemanticIds_codec
        = pb::FieldCodec.ForMessage(18, global::FSR.GRPC.Lib.V3.ReferenceDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> supplementalSemanticIds_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> SupplementalSemanticIds {
      get { return supplementalSemanticIds_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 4;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "externalSubjectId" field.</summary>
    public const int ExternalSubjectIdFieldNumber = 5;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO externalSubjectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO ExternalSubjectId {
      get { return externalSubjectId_; }
      set {
        externalSubjectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpecificAssetIdDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpecificAssetIdDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SemanticId, other.SemanticId)) return false;
      if(!supplementalSemanticIds_.Equals(other.supplementalSemanticIds_)) return false;
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      if (!object.Equals(ExternalSubjectId, other.ExternalSubjectId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (semanticId_ != null) hash ^= SemanticId.GetHashCode();
      hash ^= supplementalSemanticIds_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (externalSubjectId_ != null) hash ^= ExternalSubjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (semanticId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SemanticId);
      }
      supplementalSemanticIds_.WriteTo(output, _repeated_supplementalSemanticIds_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Value);
      }
      if (externalSubjectId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExternalSubjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (semanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticId);
      }
      size += supplementalSemanticIds_.CalculateSize(_repeated_supplementalSemanticIds_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (externalSubjectId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalSubjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpecificAssetIdDTO other) {
      if (other == null) {
        return;
      }
      if (other.semanticId_ != null) {
        if (semanticId_ == null) {
          SemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        SemanticId.MergeFrom(other.SemanticId);
      }
      supplementalSemanticIds_.Add(other.supplementalSemanticIds_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.externalSubjectId_ != null) {
        if (externalSubjectId_ == null) {
          ExternalSubjectId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        ExternalSubjectId.MergeFrom(other.ExternalSubjectId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (semanticId_ == null) {
              SemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(SemanticId);
            break;
          }
          case 18: {
            supplementalSemanticIds_.AddEntriesFrom(input, _repeated_supplementalSemanticIds_codec);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Value = input.ReadString();
            break;
          }
          case 42: {
            if (externalSubjectId_ == null) {
              ExternalSubjectId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(ExternalSubjectId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmodelDTO : pb::IMessage<SubmodelDTO> {
    private static readonly pb::MessageParser<SubmodelDTO> _parser = new pb::MessageParser<SubmodelDTO>(() => new SubmodelDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmodelDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelDTO(SubmodelDTO other) : this() {
      extensions_ = other.extensions_.Clone();
      category_ = other.category_;
      idShort_ = other.idShort_;
      displayName_ = other.displayName_.Clone();
      description_ = other.description_.Clone();
      administration_ = other.administration_ != null ? other.administration_.Clone() : null;
      id_ = other.id_;
      kind_ = other.kind_;
      semanticId_ = other.semanticId_ != null ? other.semanticId_.Clone() : null;
      supplementalSemanticIds_ = other.supplementalSemanticIds_.Clone();
      qualifiers_ = other.qualifiers_.Clone();
      embeddedDataSpecifications_ = other.embeddedDataSpecifications_.Clone();
      submodelElements_ = other.submodelElements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelDTO Clone() {
      return new SubmodelDTO(this);
    }

    /// <summary>Field number for the "extensions" field.</summary>
    public const int ExtensionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.ExtensionDTO> _repeated_extensions_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.Lib.V3.ExtensionDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ExtensionDTO> extensions_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ExtensionDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ExtensionDTO> Extensions {
      get { return extensions_; }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 2;
    private string category_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idShort" field.</summary>
    public const int IdShortFieldNumber = 3;
    private string idShort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdShort {
      get { return idShort_; }
      set {
        idShort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.LangStringDTO> _repeated_displayName_codec
        = pb::FieldCodec.ForMessage(34, global::FSR.GRPC.Lib.V3.LangStringDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> displayName_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> DisplayName {
      get { return displayName_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.LangStringDTO> _repeated_description_codec
        = pb::FieldCodec.ForMessage(42, global::FSR.GRPC.Lib.V3.LangStringDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> description_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> Description {
      get { return description_; }
    }

    /// <summary>Field number for the "administration" field.</summary>
    public const int AdministrationFieldNumber = 6;
    private global::FSR.GRPC.Lib.V3.AdministrativeInformationDTO administration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.AdministrativeInformationDTO Administration {
      get { return administration_; }
      set {
        administration_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 7;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 8;
    private global::FSR.GRPC.Lib.V3.ModellingKind kind_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ModellingKind Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "semanticId" field.</summary>
    public const int SemanticIdFieldNumber = 9;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO semanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO SemanticId {
      get { return semanticId_; }
      set {
        semanticId_ = value;
      }
    }

    /// <summary>Field number for the "supplementalSemanticIds" field.</summary>
    public const int SupplementalSemanticIdsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.ReferenceDTO> _repeated_supplementalSemanticIds_codec
        = pb::FieldCodec.ForMessage(82, global::FSR.GRPC.Lib.V3.ReferenceDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> supplementalSemanticIds_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> SupplementalSemanticIds {
      get { return supplementalSemanticIds_; }
    }

    /// <summary>Field number for the "qualifiers" field.</summary>
    public const int QualifiersFieldNumber = 11;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.QualifierDTO> _repeated_qualifiers_codec
        = pb::FieldCodec.ForMessage(90, global::FSR.GRPC.Lib.V3.QualifierDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.QualifierDTO> qualifiers_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.QualifierDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.QualifierDTO> Qualifiers {
      get { return qualifiers_; }
    }

    /// <summary>Field number for the "embeddedDataSpecifications" field.</summary>
    public const int EmbeddedDataSpecificationsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> _repeated_embeddedDataSpecifications_codec
        = pb::FieldCodec.ForMessage(98, global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> embeddedDataSpecifications_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> EmbeddedDataSpecifications {
      get { return embeddedDataSpecifications_; }
    }

    /// <summary>Field number for the "submodelElements" field.</summary>
    public const int SubmodelElementsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.SubmodelElementDTO> _repeated_submodelElements_codec
        = pb::FieldCodec.ForMessage(106, global::FSR.GRPC.Lib.V3.SubmodelElementDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SubmodelElementDTO> submodelElements_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SubmodelElementDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SubmodelElementDTO> SubmodelElements {
      get { return submodelElements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmodelDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmodelDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!extensions_.Equals(other.extensions_)) return false;
      if (Category != other.Category) return false;
      if (IdShort != other.IdShort) return false;
      if(!displayName_.Equals(other.displayName_)) return false;
      if(!description_.Equals(other.description_)) return false;
      if (!object.Equals(Administration, other.Administration)) return false;
      if (Id != other.Id) return false;
      if (Kind != other.Kind) return false;
      if (!object.Equals(SemanticId, other.SemanticId)) return false;
      if(!supplementalSemanticIds_.Equals(other.supplementalSemanticIds_)) return false;
      if(!qualifiers_.Equals(other.qualifiers_)) return false;
      if(!embeddedDataSpecifications_.Equals(other.embeddedDataSpecifications_)) return false;
      if(!submodelElements_.Equals(other.submodelElements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= extensions_.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (IdShort.Length != 0) hash ^= IdShort.GetHashCode();
      hash ^= displayName_.GetHashCode();
      hash ^= description_.GetHashCode();
      if (administration_ != null) hash ^= Administration.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Kind != 0) hash ^= Kind.GetHashCode();
      if (semanticId_ != null) hash ^= SemanticId.GetHashCode();
      hash ^= supplementalSemanticIds_.GetHashCode();
      hash ^= qualifiers_.GetHashCode();
      hash ^= embeddedDataSpecifications_.GetHashCode();
      hash ^= submodelElements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      extensions_.WriteTo(output, _repeated_extensions_codec);
      if (Category.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Category);
      }
      if (IdShort.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IdShort);
      }
      displayName_.WriteTo(output, _repeated_displayName_codec);
      description_.WriteTo(output, _repeated_description_codec);
      if (administration_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Administration);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Id);
      }
      if (Kind != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Kind);
      }
      if (semanticId_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(SemanticId);
      }
      supplementalSemanticIds_.WriteTo(output, _repeated_supplementalSemanticIds_codec);
      qualifiers_.WriteTo(output, _repeated_qualifiers_codec);
      embeddedDataSpecifications_.WriteTo(output, _repeated_embeddedDataSpecifications_codec);
      submodelElements_.WriteTo(output, _repeated_submodelElements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += extensions_.CalculateSize(_repeated_extensions_codec);
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (IdShort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdShort);
      }
      size += displayName_.CalculateSize(_repeated_displayName_codec);
      size += description_.CalculateSize(_repeated_description_codec);
      if (administration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Administration);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Kind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
      }
      if (semanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticId);
      }
      size += supplementalSemanticIds_.CalculateSize(_repeated_supplementalSemanticIds_codec);
      size += qualifiers_.CalculateSize(_repeated_qualifiers_codec);
      size += embeddedDataSpecifications_.CalculateSize(_repeated_embeddedDataSpecifications_codec);
      size += submodelElements_.CalculateSize(_repeated_submodelElements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmodelDTO other) {
      if (other == null) {
        return;
      }
      extensions_.Add(other.extensions_);
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.IdShort.Length != 0) {
        IdShort = other.IdShort;
      }
      displayName_.Add(other.displayName_);
      description_.Add(other.description_);
      if (other.administration_ != null) {
        if (administration_ == null) {
          Administration = new global::FSR.GRPC.Lib.V3.AdministrativeInformationDTO();
        }
        Administration.MergeFrom(other.Administration);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Kind != 0) {
        Kind = other.Kind;
      }
      if (other.semanticId_ != null) {
        if (semanticId_ == null) {
          SemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        SemanticId.MergeFrom(other.SemanticId);
      }
      supplementalSemanticIds_.Add(other.supplementalSemanticIds_);
      qualifiers_.Add(other.qualifiers_);
      embeddedDataSpecifications_.Add(other.embeddedDataSpecifications_);
      submodelElements_.Add(other.submodelElements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            extensions_.AddEntriesFrom(input, _repeated_extensions_codec);
            break;
          }
          case 18: {
            Category = input.ReadString();
            break;
          }
          case 26: {
            IdShort = input.ReadString();
            break;
          }
          case 34: {
            displayName_.AddEntriesFrom(input, _repeated_displayName_codec);
            break;
          }
          case 42: {
            description_.AddEntriesFrom(input, _repeated_description_codec);
            break;
          }
          case 50: {
            if (administration_ == null) {
              Administration = new global::FSR.GRPC.Lib.V3.AdministrativeInformationDTO();
            }
            input.ReadMessage(Administration);
            break;
          }
          case 58: {
            Id = input.ReadString();
            break;
          }
          case 64: {
            Kind = (global::FSR.GRPC.Lib.V3.ModellingKind) input.ReadEnum();
            break;
          }
          case 74: {
            if (semanticId_ == null) {
              SemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(SemanticId);
            break;
          }
          case 82: {
            supplementalSemanticIds_.AddEntriesFrom(input, _repeated_supplementalSemanticIds_codec);
            break;
          }
          case 90: {
            qualifiers_.AddEntriesFrom(input, _repeated_qualifiers_codec);
            break;
          }
          case 98: {
            embeddedDataSpecifications_.AddEntriesFrom(input, _repeated_embeddedDataSpecifications_codec);
            break;
          }
          case 106: {
            submodelElements_.AddEntriesFrom(input, _repeated_submodelElements_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmodelElementDTO : pb::IMessage<SubmodelElementDTO> {
    private static readonly pb::MessageParser<SubmodelElementDTO> _parser = new pb::MessageParser<SubmodelElementDTO>(() => new SubmodelElementDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmodelElementDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementDTO(SubmodelElementDTO other) : this() {
      extensions_ = other.extensions_.Clone();
      category_ = other.category_;
      idShort_ = other.idShort_;
      displayName_ = other.displayName_.Clone();
      description_ = other.description_.Clone();
      semanticId_ = other.semanticId_ != null ? other.semanticId_.Clone() : null;
      supplementalSemanticIds_ = other.supplementalSemanticIds_.Clone();
      qualifiers_ = other.qualifiers_.Clone();
      embeddedDataSpecifications_ = other.embeddedDataSpecifications_.Clone();
      submodelElementType_ = other.submodelElementType_;
      annotatedRelationshipElement_ = other.annotatedRelationshipElement_ != null ? other.annotatedRelationshipElement_.Clone() : null;
      basicEventElement_ = other.basicEventElement_ != null ? other.basicEventElement_.Clone() : null;
      blob_ = other.blob_ != null ? other.blob_.Clone() : null;
      capability_ = other.capability_ != null ? other.capability_.Clone() : null;
      dataElement_ = other.dataElement_ != null ? other.dataElement_.Clone() : null;
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      eventElement_ = other.eventElement_ != null ? other.eventElement_.Clone() : null;
      file_ = other.file_ != null ? other.file_.Clone() : null;
      multiLanguageProperty_ = other.multiLanguageProperty_ != null ? other.multiLanguageProperty_.Clone() : null;
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      property_ = other.property_ != null ? other.property_.Clone() : null;
      range_ = other.range_ != null ? other.range_.Clone() : null;
      referenceElement_ = other.referenceElement_ != null ? other.referenceElement_.Clone() : null;
      relationshipElement_ = other.relationshipElement_ != null ? other.relationshipElement_.Clone() : null;
      submodelElementList_ = other.submodelElementList_ != null ? other.submodelElementList_.Clone() : null;
      submodelElementCollection_ = other.submodelElementCollection_ != null ? other.submodelElementCollection_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementDTO Clone() {
      return new SubmodelElementDTO(this);
    }

    /// <summary>Field number for the "extensions" field.</summary>
    public const int ExtensionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.ExtensionDTO> _repeated_extensions_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.Lib.V3.ExtensionDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ExtensionDTO> extensions_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ExtensionDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ExtensionDTO> Extensions {
      get { return extensions_; }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 2;
    private string category_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idShort" field.</summary>
    public const int IdShortFieldNumber = 3;
    private string idShort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdShort {
      get { return idShort_; }
      set {
        idShort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.LangStringDTO> _repeated_displayName_codec
        = pb::FieldCodec.ForMessage(34, global::FSR.GRPC.Lib.V3.LangStringDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> displayName_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> DisplayName {
      get { return displayName_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.LangStringDTO> _repeated_description_codec
        = pb::FieldCodec.ForMessage(42, global::FSR.GRPC.Lib.V3.LangStringDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> description_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> Description {
      get { return description_; }
    }

    /// <summary>Field number for the "semanticId" field.</summary>
    public const int SemanticIdFieldNumber = 6;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO semanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO SemanticId {
      get { return semanticId_; }
      set {
        semanticId_ = value;
      }
    }

    /// <summary>Field number for the "supplementalSemanticIds" field.</summary>
    public const int SupplementalSemanticIdsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.ReferenceDTO> _repeated_supplementalSemanticIds_codec
        = pb::FieldCodec.ForMessage(58, global::FSR.GRPC.Lib.V3.ReferenceDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> supplementalSemanticIds_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> SupplementalSemanticIds {
      get { return supplementalSemanticIds_; }
    }

    /// <summary>Field number for the "qualifiers" field.</summary>
    public const int QualifiersFieldNumber = 8;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.QualifierDTO> _repeated_qualifiers_codec
        = pb::FieldCodec.ForMessage(66, global::FSR.GRPC.Lib.V3.QualifierDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.QualifierDTO> qualifiers_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.QualifierDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.QualifierDTO> Qualifiers {
      get { return qualifiers_; }
    }

    /// <summary>Field number for the "embeddedDataSpecifications" field.</summary>
    public const int EmbeddedDataSpecificationsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> _repeated_embeddedDataSpecifications_codec
        = pb::FieldCodec.ForMessage(74, global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> embeddedDataSpecifications_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> EmbeddedDataSpecifications {
      get { return embeddedDataSpecifications_; }
    }

    /// <summary>Field number for the "submodelElementType" field.</summary>
    public const int SubmodelElementTypeFieldNumber = 10;
    private global::FSR.GRPC.Lib.V3.SubmodelElementType submodelElementType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.SubmodelElementType SubmodelElementType {
      get { return submodelElementType_; }
      set {
        submodelElementType_ = value;
      }
    }

    /// <summary>Field number for the "annotatedRelationshipElement" field.</summary>
    public const int AnnotatedRelationshipElementFieldNumber = 11;
    private global::FSR.GRPC.Lib.V3.AnnotatedRelationshipElementPayloadDTO annotatedRelationshipElement_;
    /// <summary>
    /// SubmodelElement payload here.
    /// TODO: Find better solution! (Current solution causes an overhead of around 128 bytes per model)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.AnnotatedRelationshipElementPayloadDTO AnnotatedRelationshipElement {
      get { return annotatedRelationshipElement_; }
      set {
        annotatedRelationshipElement_ = value;
      }
    }

    /// <summary>Field number for the "basicEventElement" field.</summary>
    public const int BasicEventElementFieldNumber = 12;
    private global::FSR.GRPC.Lib.V3.BasicEventElementPayloadDTO basicEventElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.BasicEventElementPayloadDTO BasicEventElement {
      get { return basicEventElement_; }
      set {
        basicEventElement_ = value;
      }
    }

    /// <summary>Field number for the "blob" field.</summary>
    public const int BlobFieldNumber = 13;
    private global::FSR.GRPC.Lib.V3.BlobPayloadDTO blob_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.BlobPayloadDTO Blob {
      get { return blob_; }
      set {
        blob_ = value;
      }
    }

    /// <summary>Field number for the "capability" field.</summary>
    public const int CapabilityFieldNumber = 14;
    private global::FSR.GRPC.Lib.V3.CapabilityPayloadDTO capability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.CapabilityPayloadDTO Capability {
      get { return capability_; }
      set {
        capability_ = value;
      }
    }

    /// <summary>Field number for the "dataElement" field.</summary>
    public const int DataElementFieldNumber = 15;
    private global::FSR.GRPC.Lib.V3.DataElementPayloadDTO dataElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.DataElementPayloadDTO DataElement {
      get { return dataElement_; }
      set {
        dataElement_ = value;
      }
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 16;
    private global::FSR.GRPC.Lib.V3.EntityPayloadDTO entity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.EntityPayloadDTO Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "eventElement" field.</summary>
    public const int EventElementFieldNumber = 17;
    private global::FSR.GRPC.Lib.V3.EventElementPayloadDTO eventElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.EventElementPayloadDTO EventElement {
      get { return eventElement_; }
      set {
        eventElement_ = value;
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 18;
    private global::FSR.GRPC.Lib.V3.FilePayloadDTO file_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.FilePayloadDTO File {
      get { return file_; }
      set {
        file_ = value;
      }
    }

    /// <summary>Field number for the "multiLanguageProperty" field.</summary>
    public const int MultiLanguagePropertyFieldNumber = 19;
    private global::FSR.GRPC.Lib.V3.MultiLanguagePropertyPayloadDTO multiLanguageProperty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.MultiLanguagePropertyPayloadDTO MultiLanguageProperty {
      get { return multiLanguageProperty_; }
      set {
        multiLanguageProperty_ = value;
      }
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 20;
    private global::FSR.GRPC.Lib.V3.OperationPayloadDTO operation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.OperationPayloadDTO Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 21;
    private global::FSR.GRPC.Lib.V3.PropertyPayloadDTO property_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.PropertyPayloadDTO Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 22;
    private global::FSR.GRPC.Lib.V3.RangePayloadDTO range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.RangePayloadDTO Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    /// <summary>Field number for the "referenceElement" field.</summary>
    public const int ReferenceElementFieldNumber = 23;
    private global::FSR.GRPC.Lib.V3.ReferenceElementPayloadDTO referenceElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceElementPayloadDTO ReferenceElement {
      get { return referenceElement_; }
      set {
        referenceElement_ = value;
      }
    }

    /// <summary>Field number for the "relationshipElement" field.</summary>
    public const int RelationshipElementFieldNumber = 24;
    private global::FSR.GRPC.Lib.V3.RelationshipElementPayloadDTO relationshipElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.RelationshipElementPayloadDTO RelationshipElement {
      get { return relationshipElement_; }
      set {
        relationshipElement_ = value;
      }
    }

    /// <summary>Field number for the "submodelElementList" field.</summary>
    public const int SubmodelElementListFieldNumber = 25;
    private global::FSR.GRPC.Lib.V3.SubmodelElementListPayloadDTO submodelElementList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.SubmodelElementListPayloadDTO SubmodelElementList {
      get { return submodelElementList_; }
      set {
        submodelElementList_ = value;
      }
    }

    /// <summary>Field number for the "submodelElementCollection" field.</summary>
    public const int SubmodelElementCollectionFieldNumber = 26;
    private global::FSR.GRPC.Lib.V3.SubmodelElementCollectionPayloadDTO submodelElementCollection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.SubmodelElementCollectionPayloadDTO SubmodelElementCollection {
      get { return submodelElementCollection_; }
      set {
        submodelElementCollection_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmodelElementDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmodelElementDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!extensions_.Equals(other.extensions_)) return false;
      if (Category != other.Category) return false;
      if (IdShort != other.IdShort) return false;
      if(!displayName_.Equals(other.displayName_)) return false;
      if(!description_.Equals(other.description_)) return false;
      if (!object.Equals(SemanticId, other.SemanticId)) return false;
      if(!supplementalSemanticIds_.Equals(other.supplementalSemanticIds_)) return false;
      if(!qualifiers_.Equals(other.qualifiers_)) return false;
      if(!embeddedDataSpecifications_.Equals(other.embeddedDataSpecifications_)) return false;
      if (SubmodelElementType != other.SubmodelElementType) return false;
      if (!object.Equals(AnnotatedRelationshipElement, other.AnnotatedRelationshipElement)) return false;
      if (!object.Equals(BasicEventElement, other.BasicEventElement)) return false;
      if (!object.Equals(Blob, other.Blob)) return false;
      if (!object.Equals(Capability, other.Capability)) return false;
      if (!object.Equals(DataElement, other.DataElement)) return false;
      if (!object.Equals(Entity, other.Entity)) return false;
      if (!object.Equals(EventElement, other.EventElement)) return false;
      if (!object.Equals(File, other.File)) return false;
      if (!object.Equals(MultiLanguageProperty, other.MultiLanguageProperty)) return false;
      if (!object.Equals(Operation, other.Operation)) return false;
      if (!object.Equals(Property, other.Property)) return false;
      if (!object.Equals(Range, other.Range)) return false;
      if (!object.Equals(ReferenceElement, other.ReferenceElement)) return false;
      if (!object.Equals(RelationshipElement, other.RelationshipElement)) return false;
      if (!object.Equals(SubmodelElementList, other.SubmodelElementList)) return false;
      if (!object.Equals(SubmodelElementCollection, other.SubmodelElementCollection)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= extensions_.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (IdShort.Length != 0) hash ^= IdShort.GetHashCode();
      hash ^= displayName_.GetHashCode();
      hash ^= description_.GetHashCode();
      if (semanticId_ != null) hash ^= SemanticId.GetHashCode();
      hash ^= supplementalSemanticIds_.GetHashCode();
      hash ^= qualifiers_.GetHashCode();
      hash ^= embeddedDataSpecifications_.GetHashCode();
      if (SubmodelElementType != 0) hash ^= SubmodelElementType.GetHashCode();
      if (annotatedRelationshipElement_ != null) hash ^= AnnotatedRelationshipElement.GetHashCode();
      if (basicEventElement_ != null) hash ^= BasicEventElement.GetHashCode();
      if (blob_ != null) hash ^= Blob.GetHashCode();
      if (capability_ != null) hash ^= Capability.GetHashCode();
      if (dataElement_ != null) hash ^= DataElement.GetHashCode();
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (eventElement_ != null) hash ^= EventElement.GetHashCode();
      if (file_ != null) hash ^= File.GetHashCode();
      if (multiLanguageProperty_ != null) hash ^= MultiLanguageProperty.GetHashCode();
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (property_ != null) hash ^= Property.GetHashCode();
      if (range_ != null) hash ^= Range.GetHashCode();
      if (referenceElement_ != null) hash ^= ReferenceElement.GetHashCode();
      if (relationshipElement_ != null) hash ^= RelationshipElement.GetHashCode();
      if (submodelElementList_ != null) hash ^= SubmodelElementList.GetHashCode();
      if (submodelElementCollection_ != null) hash ^= SubmodelElementCollection.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      extensions_.WriteTo(output, _repeated_extensions_codec);
      if (Category.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Category);
      }
      if (IdShort.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IdShort);
      }
      displayName_.WriteTo(output, _repeated_displayName_codec);
      description_.WriteTo(output, _repeated_description_codec);
      if (semanticId_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SemanticId);
      }
      supplementalSemanticIds_.WriteTo(output, _repeated_supplementalSemanticIds_codec);
      qualifiers_.WriteTo(output, _repeated_qualifiers_codec);
      embeddedDataSpecifications_.WriteTo(output, _repeated_embeddedDataSpecifications_codec);
      if (SubmodelElementType != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) SubmodelElementType);
      }
      if (annotatedRelationshipElement_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(AnnotatedRelationshipElement);
      }
      if (basicEventElement_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(BasicEventElement);
      }
      if (blob_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Blob);
      }
      if (capability_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Capability);
      }
      if (dataElement_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(DataElement);
      }
      if (entity_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Entity);
      }
      if (eventElement_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(EventElement);
      }
      if (file_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(File);
      }
      if (multiLanguageProperty_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(MultiLanguageProperty);
      }
      if (operation_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Operation);
      }
      if (property_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Property);
      }
      if (range_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Range);
      }
      if (referenceElement_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(ReferenceElement);
      }
      if (relationshipElement_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(RelationshipElement);
      }
      if (submodelElementList_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(SubmodelElementList);
      }
      if (submodelElementCollection_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(SubmodelElementCollection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += extensions_.CalculateSize(_repeated_extensions_codec);
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (IdShort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdShort);
      }
      size += displayName_.CalculateSize(_repeated_displayName_codec);
      size += description_.CalculateSize(_repeated_description_codec);
      if (semanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticId);
      }
      size += supplementalSemanticIds_.CalculateSize(_repeated_supplementalSemanticIds_codec);
      size += qualifiers_.CalculateSize(_repeated_qualifiers_codec);
      size += embeddedDataSpecifications_.CalculateSize(_repeated_embeddedDataSpecifications_codec);
      if (SubmodelElementType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubmodelElementType);
      }
      if (annotatedRelationshipElement_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnnotatedRelationshipElement);
      }
      if (basicEventElement_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicEventElement);
      }
      if (blob_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blob);
      }
      if (capability_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Capability);
      }
      if (dataElement_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataElement);
      }
      if (entity_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (eventElement_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EventElement);
      }
      if (file_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (multiLanguageProperty_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MultiLanguageProperty);
      }
      if (operation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (property_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      if (range_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Range);
      }
      if (referenceElement_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReferenceElement);
      }
      if (relationshipElement_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RelationshipElement);
      }
      if (submodelElementList_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SubmodelElementList);
      }
      if (submodelElementCollection_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SubmodelElementCollection);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmodelElementDTO other) {
      if (other == null) {
        return;
      }
      extensions_.Add(other.extensions_);
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.IdShort.Length != 0) {
        IdShort = other.IdShort;
      }
      displayName_.Add(other.displayName_);
      description_.Add(other.description_);
      if (other.semanticId_ != null) {
        if (semanticId_ == null) {
          SemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        SemanticId.MergeFrom(other.SemanticId);
      }
      supplementalSemanticIds_.Add(other.supplementalSemanticIds_);
      qualifiers_.Add(other.qualifiers_);
      embeddedDataSpecifications_.Add(other.embeddedDataSpecifications_);
      if (other.SubmodelElementType != 0) {
        SubmodelElementType = other.SubmodelElementType;
      }
      if (other.annotatedRelationshipElement_ != null) {
        if (annotatedRelationshipElement_ == null) {
          AnnotatedRelationshipElement = new global::FSR.GRPC.Lib.V3.AnnotatedRelationshipElementPayloadDTO();
        }
        AnnotatedRelationshipElement.MergeFrom(other.AnnotatedRelationshipElement);
      }
      if (other.basicEventElement_ != null) {
        if (basicEventElement_ == null) {
          BasicEventElement = new global::FSR.GRPC.Lib.V3.BasicEventElementPayloadDTO();
        }
        BasicEventElement.MergeFrom(other.BasicEventElement);
      }
      if (other.blob_ != null) {
        if (blob_ == null) {
          Blob = new global::FSR.GRPC.Lib.V3.BlobPayloadDTO();
        }
        Blob.MergeFrom(other.Blob);
      }
      if (other.capability_ != null) {
        if (capability_ == null) {
          Capability = new global::FSR.GRPC.Lib.V3.CapabilityPayloadDTO();
        }
        Capability.MergeFrom(other.Capability);
      }
      if (other.dataElement_ != null) {
        if (dataElement_ == null) {
          DataElement = new global::FSR.GRPC.Lib.V3.DataElementPayloadDTO();
        }
        DataElement.MergeFrom(other.DataElement);
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          Entity = new global::FSR.GRPC.Lib.V3.EntityPayloadDTO();
        }
        Entity.MergeFrom(other.Entity);
      }
      if (other.eventElement_ != null) {
        if (eventElement_ == null) {
          EventElement = new global::FSR.GRPC.Lib.V3.EventElementPayloadDTO();
        }
        EventElement.MergeFrom(other.EventElement);
      }
      if (other.file_ != null) {
        if (file_ == null) {
          File = new global::FSR.GRPC.Lib.V3.FilePayloadDTO();
        }
        File.MergeFrom(other.File);
      }
      if (other.multiLanguageProperty_ != null) {
        if (multiLanguageProperty_ == null) {
          MultiLanguageProperty = new global::FSR.GRPC.Lib.V3.MultiLanguagePropertyPayloadDTO();
        }
        MultiLanguageProperty.MergeFrom(other.MultiLanguageProperty);
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::FSR.GRPC.Lib.V3.OperationPayloadDTO();
        }
        Operation.MergeFrom(other.Operation);
      }
      if (other.property_ != null) {
        if (property_ == null) {
          Property = new global::FSR.GRPC.Lib.V3.PropertyPayloadDTO();
        }
        Property.MergeFrom(other.Property);
      }
      if (other.range_ != null) {
        if (range_ == null) {
          Range = new global::FSR.GRPC.Lib.V3.RangePayloadDTO();
        }
        Range.MergeFrom(other.Range);
      }
      if (other.referenceElement_ != null) {
        if (referenceElement_ == null) {
          ReferenceElement = new global::FSR.GRPC.Lib.V3.ReferenceElementPayloadDTO();
        }
        ReferenceElement.MergeFrom(other.ReferenceElement);
      }
      if (other.relationshipElement_ != null) {
        if (relationshipElement_ == null) {
          RelationshipElement = new global::FSR.GRPC.Lib.V3.RelationshipElementPayloadDTO();
        }
        RelationshipElement.MergeFrom(other.RelationshipElement);
      }
      if (other.submodelElementList_ != null) {
        if (submodelElementList_ == null) {
          SubmodelElementList = new global::FSR.GRPC.Lib.V3.SubmodelElementListPayloadDTO();
        }
        SubmodelElementList.MergeFrom(other.SubmodelElementList);
      }
      if (other.submodelElementCollection_ != null) {
        if (submodelElementCollection_ == null) {
          SubmodelElementCollection = new global::FSR.GRPC.Lib.V3.SubmodelElementCollectionPayloadDTO();
        }
        SubmodelElementCollection.MergeFrom(other.SubmodelElementCollection);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            extensions_.AddEntriesFrom(input, _repeated_extensions_codec);
            break;
          }
          case 18: {
            Category = input.ReadString();
            break;
          }
          case 26: {
            IdShort = input.ReadString();
            break;
          }
          case 34: {
            displayName_.AddEntriesFrom(input, _repeated_displayName_codec);
            break;
          }
          case 42: {
            description_.AddEntriesFrom(input, _repeated_description_codec);
            break;
          }
          case 50: {
            if (semanticId_ == null) {
              SemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(SemanticId);
            break;
          }
          case 58: {
            supplementalSemanticIds_.AddEntriesFrom(input, _repeated_supplementalSemanticIds_codec);
            break;
          }
          case 66: {
            qualifiers_.AddEntriesFrom(input, _repeated_qualifiers_codec);
            break;
          }
          case 74: {
            embeddedDataSpecifications_.AddEntriesFrom(input, _repeated_embeddedDataSpecifications_codec);
            break;
          }
          case 80: {
            SubmodelElementType = (global::FSR.GRPC.Lib.V3.SubmodelElementType) input.ReadEnum();
            break;
          }
          case 90: {
            if (annotatedRelationshipElement_ == null) {
              AnnotatedRelationshipElement = new global::FSR.GRPC.Lib.V3.AnnotatedRelationshipElementPayloadDTO();
            }
            input.ReadMessage(AnnotatedRelationshipElement);
            break;
          }
          case 98: {
            if (basicEventElement_ == null) {
              BasicEventElement = new global::FSR.GRPC.Lib.V3.BasicEventElementPayloadDTO();
            }
            input.ReadMessage(BasicEventElement);
            break;
          }
          case 106: {
            if (blob_ == null) {
              Blob = new global::FSR.GRPC.Lib.V3.BlobPayloadDTO();
            }
            input.ReadMessage(Blob);
            break;
          }
          case 114: {
            if (capability_ == null) {
              Capability = new global::FSR.GRPC.Lib.V3.CapabilityPayloadDTO();
            }
            input.ReadMessage(Capability);
            break;
          }
          case 122: {
            if (dataElement_ == null) {
              DataElement = new global::FSR.GRPC.Lib.V3.DataElementPayloadDTO();
            }
            input.ReadMessage(DataElement);
            break;
          }
          case 130: {
            if (entity_ == null) {
              Entity = new global::FSR.GRPC.Lib.V3.EntityPayloadDTO();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 138: {
            if (eventElement_ == null) {
              EventElement = new global::FSR.GRPC.Lib.V3.EventElementPayloadDTO();
            }
            input.ReadMessage(EventElement);
            break;
          }
          case 146: {
            if (file_ == null) {
              File = new global::FSR.GRPC.Lib.V3.FilePayloadDTO();
            }
            input.ReadMessage(File);
            break;
          }
          case 154: {
            if (multiLanguageProperty_ == null) {
              MultiLanguageProperty = new global::FSR.GRPC.Lib.V3.MultiLanguagePropertyPayloadDTO();
            }
            input.ReadMessage(MultiLanguageProperty);
            break;
          }
          case 162: {
            if (operation_ == null) {
              Operation = new global::FSR.GRPC.Lib.V3.OperationPayloadDTO();
            }
            input.ReadMessage(Operation);
            break;
          }
          case 170: {
            if (property_ == null) {
              Property = new global::FSR.GRPC.Lib.V3.PropertyPayloadDTO();
            }
            input.ReadMessage(Property);
            break;
          }
          case 178: {
            if (range_ == null) {
              Range = new global::FSR.GRPC.Lib.V3.RangePayloadDTO();
            }
            input.ReadMessage(Range);
            break;
          }
          case 186: {
            if (referenceElement_ == null) {
              ReferenceElement = new global::FSR.GRPC.Lib.V3.ReferenceElementPayloadDTO();
            }
            input.ReadMessage(ReferenceElement);
            break;
          }
          case 194: {
            if (relationshipElement_ == null) {
              RelationshipElement = new global::FSR.GRPC.Lib.V3.RelationshipElementPayloadDTO();
            }
            input.ReadMessage(RelationshipElement);
            break;
          }
          case 202: {
            if (submodelElementList_ == null) {
              SubmodelElementList = new global::FSR.GRPC.Lib.V3.SubmodelElementListPayloadDTO();
            }
            input.ReadMessage(SubmodelElementList);
            break;
          }
          case 210: {
            if (submodelElementCollection_ == null) {
              SubmodelElementCollection = new global::FSR.GRPC.Lib.V3.SubmodelElementCollectionPayloadDTO();
            }
            input.ReadMessage(SubmodelElementCollection);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RelationshipElementPayloadDTO : pb::IMessage<RelationshipElementPayloadDTO> {
    private static readonly pb::MessageParser<RelationshipElementPayloadDTO> _parser = new pb::MessageParser<RelationshipElementPayloadDTO>(() => new RelationshipElementPayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelationshipElementPayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationshipElementPayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationshipElementPayloadDTO(RelationshipElementPayloadDTO other) : this() {
      first_ = other.first_ != null ? other.first_.Clone() : null;
      second_ = other.second_ != null ? other.second_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationshipElementPayloadDTO Clone() {
      return new RelationshipElementPayloadDTO(this);
    }

    /// <summary>Field number for the "first" field.</summary>
    public const int FirstFieldNumber = 1;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO first_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO First {
      get { return first_; }
      set {
        first_ = value;
      }
    }

    /// <summary>Field number for the "second" field.</summary>
    public const int SecondFieldNumber = 2;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO second_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO Second {
      get { return second_; }
      set {
        second_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelationshipElementPayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelationshipElementPayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(First, other.First)) return false;
      if (!object.Equals(Second, other.Second)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (first_ != null) hash ^= First.GetHashCode();
      if (second_ != null) hash ^= Second.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (first_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(First);
      }
      if (second_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Second);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (first_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(First);
      }
      if (second_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Second);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelationshipElementPayloadDTO other) {
      if (other == null) {
        return;
      }
      if (other.first_ != null) {
        if (first_ == null) {
          First = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        First.MergeFrom(other.First);
      }
      if (other.second_ != null) {
        if (second_ == null) {
          Second = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        Second.MergeFrom(other.Second);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (first_ == null) {
              First = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(First);
            break;
          }
          case 18: {
            if (second_ == null) {
              Second = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(Second);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmodelElementListPayloadDTO : pb::IMessage<SubmodelElementListPayloadDTO> {
    private static readonly pb::MessageParser<SubmodelElementListPayloadDTO> _parser = new pb::MessageParser<SubmodelElementListPayloadDTO>(() => new SubmodelElementListPayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmodelElementListPayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementListPayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementListPayloadDTO(SubmodelElementListPayloadDTO other) : this() {
      orderRelevant_ = other.orderRelevant_;
      semanticIdListElement_ = other.semanticIdListElement_ != null ? other.semanticIdListElement_.Clone() : null;
      typeValueListElement_ = other.typeValueListElement_;
      valueTypeListElement_ = other.valueTypeListElement_;
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementListPayloadDTO Clone() {
      return new SubmodelElementListPayloadDTO(this);
    }

    /// <summary>Field number for the "orderRelevant" field.</summary>
    public const int OrderRelevantFieldNumber = 1;
    private bool orderRelevant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OrderRelevant {
      get { return orderRelevant_; }
      set {
        orderRelevant_ = value;
      }
    }

    /// <summary>Field number for the "semanticIdListElement" field.</summary>
    public const int SemanticIdListElementFieldNumber = 2;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO semanticIdListElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO SemanticIdListElement {
      get { return semanticIdListElement_; }
      set {
        semanticIdListElement_ = value;
      }
    }

    /// <summary>Field number for the "typeValueListElement" field.</summary>
    public const int TypeValueListElementFieldNumber = 3;
    private global::FSR.GRPC.Lib.V3.SubmodelElementType typeValueListElement_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.SubmodelElementType TypeValueListElement {
      get { return typeValueListElement_; }
      set {
        typeValueListElement_ = value;
      }
    }

    /// <summary>Field number for the "valueTypeListElement" field.</summary>
    public const int ValueTypeListElementFieldNumber = 4;
    private global::FSR.GRPC.Lib.V3.DataTypeDefXsd valueTypeListElement_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.DataTypeDefXsd ValueTypeListElement {
      get { return valueTypeListElement_; }
      set {
        valueTypeListElement_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 5;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.SubmodelElementDTO> _repeated_value_codec
        = pb::FieldCodec.ForMessage(42, global::FSR.GRPC.Lib.V3.SubmodelElementDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SubmodelElementDTO> value_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SubmodelElementDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SubmodelElementDTO> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmodelElementListPayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmodelElementListPayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderRelevant != other.OrderRelevant) return false;
      if (!object.Equals(SemanticIdListElement, other.SemanticIdListElement)) return false;
      if (TypeValueListElement != other.TypeValueListElement) return false;
      if (ValueTypeListElement != other.ValueTypeListElement) return false;
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderRelevant != false) hash ^= OrderRelevant.GetHashCode();
      if (semanticIdListElement_ != null) hash ^= SemanticIdListElement.GetHashCode();
      if (TypeValueListElement != 0) hash ^= TypeValueListElement.GetHashCode();
      if (ValueTypeListElement != 0) hash ^= ValueTypeListElement.GetHashCode();
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderRelevant != false) {
        output.WriteRawTag(8);
        output.WriteBool(OrderRelevant);
      }
      if (semanticIdListElement_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SemanticIdListElement);
      }
      if (TypeValueListElement != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TypeValueListElement);
      }
      if (ValueTypeListElement != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ValueTypeListElement);
      }
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderRelevant != false) {
        size += 1 + 1;
      }
      if (semanticIdListElement_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticIdListElement);
      }
      if (TypeValueListElement != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TypeValueListElement);
      }
      if (ValueTypeListElement != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValueTypeListElement);
      }
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmodelElementListPayloadDTO other) {
      if (other == null) {
        return;
      }
      if (other.OrderRelevant != false) {
        OrderRelevant = other.OrderRelevant;
      }
      if (other.semanticIdListElement_ != null) {
        if (semanticIdListElement_ == null) {
          SemanticIdListElement = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        SemanticIdListElement.MergeFrom(other.SemanticIdListElement);
      }
      if (other.TypeValueListElement != 0) {
        TypeValueListElement = other.TypeValueListElement;
      }
      if (other.ValueTypeListElement != 0) {
        ValueTypeListElement = other.ValueTypeListElement;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OrderRelevant = input.ReadBool();
            break;
          }
          case 18: {
            if (semanticIdListElement_ == null) {
              SemanticIdListElement = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(SemanticIdListElement);
            break;
          }
          case 24: {
            TypeValueListElement = (global::FSR.GRPC.Lib.V3.SubmodelElementType) input.ReadEnum();
            break;
          }
          case 32: {
            ValueTypeListElement = (global::FSR.GRPC.Lib.V3.DataTypeDefXsd) input.ReadEnum();
            break;
          }
          case 42: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmodelElementCollectionPayloadDTO : pb::IMessage<SubmodelElementCollectionPayloadDTO> {
    private static readonly pb::MessageParser<SubmodelElementCollectionPayloadDTO> _parser = new pb::MessageParser<SubmodelElementCollectionPayloadDTO>(() => new SubmodelElementCollectionPayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmodelElementCollectionPayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementCollectionPayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementCollectionPayloadDTO(SubmodelElementCollectionPayloadDTO other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementCollectionPayloadDTO Clone() {
      return new SubmodelElementCollectionPayloadDTO(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.SubmodelElementDTO> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.Lib.V3.SubmodelElementDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SubmodelElementDTO> value_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SubmodelElementDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SubmodelElementDTO> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmodelElementCollectionPayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmodelElementCollectionPayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmodelElementCollectionPayloadDTO other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Intentionally empty
  /// </summary>
  public sealed partial class DataElementPayloadDTO : pb::IMessage<DataElementPayloadDTO> {
    private static readonly pb::MessageParser<DataElementPayloadDTO> _parser = new pb::MessageParser<DataElementPayloadDTO>(() => new DataElementPayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataElementPayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataElementPayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataElementPayloadDTO(DataElementPayloadDTO other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataElementPayloadDTO Clone() {
      return new DataElementPayloadDTO(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataElementPayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataElementPayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataElementPayloadDTO other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class DataElementDTO : pb::IMessage<DataElementDTO> {
    private static readonly pb::MessageParser<DataElementDTO> _parser = new pb::MessageParser<DataElementDTO>(() => new DataElementDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataElementDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataElementDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataElementDTO(DataElementDTO other) : this() {
      extensions_ = other.extensions_.Clone();
      category_ = other.category_;
      idShort_ = other.idShort_;
      displayName_ = other.displayName_.Clone();
      description_ = other.description_.Clone();
      semanticId_ = other.semanticId_ != null ? other.semanticId_.Clone() : null;
      supplementalSemanticIds_ = other.supplementalSemanticIds_.Clone();
      qualifiers_ = other.qualifiers_.Clone();
      embeddedDataSpecifications_ = other.embeddedDataSpecifications_.Clone();
      submodelElementType_ = other.submodelElementType_;
      property_ = other.property_ != null ? other.property_.Clone() : null;
      multiLanguageProperty_ = other.multiLanguageProperty_ != null ? other.multiLanguageProperty_.Clone() : null;
      range_ = other.range_ != null ? other.range_.Clone() : null;
      referenceElement_ = other.referenceElement_ != null ? other.referenceElement_.Clone() : null;
      blob_ = other.blob_ != null ? other.blob_.Clone() : null;
      file_ = other.file_ != null ? other.file_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataElementDTO Clone() {
      return new DataElementDTO(this);
    }

    /// <summary>Field number for the "extensions" field.</summary>
    public const int ExtensionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.ExtensionDTO> _repeated_extensions_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.Lib.V3.ExtensionDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ExtensionDTO> extensions_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ExtensionDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ExtensionDTO> Extensions {
      get { return extensions_; }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 2;
    private string category_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idShort" field.</summary>
    public const int IdShortFieldNumber = 3;
    private string idShort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdShort {
      get { return idShort_; }
      set {
        idShort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.LangStringDTO> _repeated_displayName_codec
        = pb::FieldCodec.ForMessage(34, global::FSR.GRPC.Lib.V3.LangStringDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> displayName_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> DisplayName {
      get { return displayName_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.LangStringDTO> _repeated_description_codec
        = pb::FieldCodec.ForMessage(42, global::FSR.GRPC.Lib.V3.LangStringDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> description_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> Description {
      get { return description_; }
    }

    /// <summary>Field number for the "semanticId" field.</summary>
    public const int SemanticIdFieldNumber = 6;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO semanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO SemanticId {
      get { return semanticId_; }
      set {
        semanticId_ = value;
      }
    }

    /// <summary>Field number for the "supplementalSemanticIds" field.</summary>
    public const int SupplementalSemanticIdsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.ReferenceDTO> _repeated_supplementalSemanticIds_codec
        = pb::FieldCodec.ForMessage(58, global::FSR.GRPC.Lib.V3.ReferenceDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> supplementalSemanticIds_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> SupplementalSemanticIds {
      get { return supplementalSemanticIds_; }
    }

    /// <summary>Field number for the "qualifiers" field.</summary>
    public const int QualifiersFieldNumber = 8;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.QualifierDTO> _repeated_qualifiers_codec
        = pb::FieldCodec.ForMessage(66, global::FSR.GRPC.Lib.V3.QualifierDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.QualifierDTO> qualifiers_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.QualifierDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.QualifierDTO> Qualifiers {
      get { return qualifiers_; }
    }

    /// <summary>Field number for the "embeddedDataSpecifications" field.</summary>
    public const int EmbeddedDataSpecificationsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> _repeated_embeddedDataSpecifications_codec
        = pb::FieldCodec.ForMessage(74, global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> embeddedDataSpecifications_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> EmbeddedDataSpecifications {
      get { return embeddedDataSpecifications_; }
    }

    /// <summary>Field number for the "submodelElementType" field.</summary>
    public const int SubmodelElementTypeFieldNumber = 10;
    private global::FSR.GRPC.Lib.V3.SubmodelElementType submodelElementType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.SubmodelElementType SubmodelElementType {
      get { return submodelElementType_; }
      set {
        submodelElementType_ = value;
      }
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 11;
    private global::FSR.GRPC.Lib.V3.PropertyPayloadDTO property_;
    /// <summary>
    /// DataElement payload here.
    /// TODO: Find better solution! (Current solution causes an overhead of around 48 bytes per model)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.PropertyPayloadDTO Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    /// <summary>Field number for the "multiLanguageProperty" field.</summary>
    public const int MultiLanguagePropertyFieldNumber = 12;
    private global::FSR.GRPC.Lib.V3.MultiLanguagePropertyPayloadDTO multiLanguageProperty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.MultiLanguagePropertyPayloadDTO MultiLanguageProperty {
      get { return multiLanguageProperty_; }
      set {
        multiLanguageProperty_ = value;
      }
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 13;
    private global::FSR.GRPC.Lib.V3.RangePayloadDTO range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.RangePayloadDTO Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    /// <summary>Field number for the "referenceElement" field.</summary>
    public const int ReferenceElementFieldNumber = 14;
    private global::FSR.GRPC.Lib.V3.ReferenceElementPayloadDTO referenceElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceElementPayloadDTO ReferenceElement {
      get { return referenceElement_; }
      set {
        referenceElement_ = value;
      }
    }

    /// <summary>Field number for the "blob" field.</summary>
    public const int BlobFieldNumber = 15;
    private global::FSR.GRPC.Lib.V3.BlobPayloadDTO blob_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.BlobPayloadDTO Blob {
      get { return blob_; }
      set {
        blob_ = value;
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 16;
    private global::FSR.GRPC.Lib.V3.FilePayloadDTO file_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.FilePayloadDTO File {
      get { return file_; }
      set {
        file_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataElementDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataElementDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!extensions_.Equals(other.extensions_)) return false;
      if (Category != other.Category) return false;
      if (IdShort != other.IdShort) return false;
      if(!displayName_.Equals(other.displayName_)) return false;
      if(!description_.Equals(other.description_)) return false;
      if (!object.Equals(SemanticId, other.SemanticId)) return false;
      if(!supplementalSemanticIds_.Equals(other.supplementalSemanticIds_)) return false;
      if(!qualifiers_.Equals(other.qualifiers_)) return false;
      if(!embeddedDataSpecifications_.Equals(other.embeddedDataSpecifications_)) return false;
      if (SubmodelElementType != other.SubmodelElementType) return false;
      if (!object.Equals(Property, other.Property)) return false;
      if (!object.Equals(MultiLanguageProperty, other.MultiLanguageProperty)) return false;
      if (!object.Equals(Range, other.Range)) return false;
      if (!object.Equals(ReferenceElement, other.ReferenceElement)) return false;
      if (!object.Equals(Blob, other.Blob)) return false;
      if (!object.Equals(File, other.File)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= extensions_.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (IdShort.Length != 0) hash ^= IdShort.GetHashCode();
      hash ^= displayName_.GetHashCode();
      hash ^= description_.GetHashCode();
      if (semanticId_ != null) hash ^= SemanticId.GetHashCode();
      hash ^= supplementalSemanticIds_.GetHashCode();
      hash ^= qualifiers_.GetHashCode();
      hash ^= embeddedDataSpecifications_.GetHashCode();
      if (SubmodelElementType != 0) hash ^= SubmodelElementType.GetHashCode();
      if (property_ != null) hash ^= Property.GetHashCode();
      if (multiLanguageProperty_ != null) hash ^= MultiLanguageProperty.GetHashCode();
      if (range_ != null) hash ^= Range.GetHashCode();
      if (referenceElement_ != null) hash ^= ReferenceElement.GetHashCode();
      if (blob_ != null) hash ^= Blob.GetHashCode();
      if (file_ != null) hash ^= File.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      extensions_.WriteTo(output, _repeated_extensions_codec);
      if (Category.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Category);
      }
      if (IdShort.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IdShort);
      }
      displayName_.WriteTo(output, _repeated_displayName_codec);
      description_.WriteTo(output, _repeated_description_codec);
      if (semanticId_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SemanticId);
      }
      supplementalSemanticIds_.WriteTo(output, _repeated_supplementalSemanticIds_codec);
      qualifiers_.WriteTo(output, _repeated_qualifiers_codec);
      embeddedDataSpecifications_.WriteTo(output, _repeated_embeddedDataSpecifications_codec);
      if (SubmodelElementType != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) SubmodelElementType);
      }
      if (property_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Property);
      }
      if (multiLanguageProperty_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(MultiLanguageProperty);
      }
      if (range_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Range);
      }
      if (referenceElement_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ReferenceElement);
      }
      if (blob_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Blob);
      }
      if (file_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(File);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += extensions_.CalculateSize(_repeated_extensions_codec);
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (IdShort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdShort);
      }
      size += displayName_.CalculateSize(_repeated_displayName_codec);
      size += description_.CalculateSize(_repeated_description_codec);
      if (semanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticId);
      }
      size += supplementalSemanticIds_.CalculateSize(_repeated_supplementalSemanticIds_codec);
      size += qualifiers_.CalculateSize(_repeated_qualifiers_codec);
      size += embeddedDataSpecifications_.CalculateSize(_repeated_embeddedDataSpecifications_codec);
      if (SubmodelElementType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubmodelElementType);
      }
      if (property_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      if (multiLanguageProperty_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MultiLanguageProperty);
      }
      if (range_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Range);
      }
      if (referenceElement_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReferenceElement);
      }
      if (blob_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blob);
      }
      if (file_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataElementDTO other) {
      if (other == null) {
        return;
      }
      extensions_.Add(other.extensions_);
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.IdShort.Length != 0) {
        IdShort = other.IdShort;
      }
      displayName_.Add(other.displayName_);
      description_.Add(other.description_);
      if (other.semanticId_ != null) {
        if (semanticId_ == null) {
          SemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        SemanticId.MergeFrom(other.SemanticId);
      }
      supplementalSemanticIds_.Add(other.supplementalSemanticIds_);
      qualifiers_.Add(other.qualifiers_);
      embeddedDataSpecifications_.Add(other.embeddedDataSpecifications_);
      if (other.SubmodelElementType != 0) {
        SubmodelElementType = other.SubmodelElementType;
      }
      if (other.property_ != null) {
        if (property_ == null) {
          Property = new global::FSR.GRPC.Lib.V3.PropertyPayloadDTO();
        }
        Property.MergeFrom(other.Property);
      }
      if (other.multiLanguageProperty_ != null) {
        if (multiLanguageProperty_ == null) {
          MultiLanguageProperty = new global::FSR.GRPC.Lib.V3.MultiLanguagePropertyPayloadDTO();
        }
        MultiLanguageProperty.MergeFrom(other.MultiLanguageProperty);
      }
      if (other.range_ != null) {
        if (range_ == null) {
          Range = new global::FSR.GRPC.Lib.V3.RangePayloadDTO();
        }
        Range.MergeFrom(other.Range);
      }
      if (other.referenceElement_ != null) {
        if (referenceElement_ == null) {
          ReferenceElement = new global::FSR.GRPC.Lib.V3.ReferenceElementPayloadDTO();
        }
        ReferenceElement.MergeFrom(other.ReferenceElement);
      }
      if (other.blob_ != null) {
        if (blob_ == null) {
          Blob = new global::FSR.GRPC.Lib.V3.BlobPayloadDTO();
        }
        Blob.MergeFrom(other.Blob);
      }
      if (other.file_ != null) {
        if (file_ == null) {
          File = new global::FSR.GRPC.Lib.V3.FilePayloadDTO();
        }
        File.MergeFrom(other.File);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            extensions_.AddEntriesFrom(input, _repeated_extensions_codec);
            break;
          }
          case 18: {
            Category = input.ReadString();
            break;
          }
          case 26: {
            IdShort = input.ReadString();
            break;
          }
          case 34: {
            displayName_.AddEntriesFrom(input, _repeated_displayName_codec);
            break;
          }
          case 42: {
            description_.AddEntriesFrom(input, _repeated_description_codec);
            break;
          }
          case 50: {
            if (semanticId_ == null) {
              SemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(SemanticId);
            break;
          }
          case 58: {
            supplementalSemanticIds_.AddEntriesFrom(input, _repeated_supplementalSemanticIds_codec);
            break;
          }
          case 66: {
            qualifiers_.AddEntriesFrom(input, _repeated_qualifiers_codec);
            break;
          }
          case 74: {
            embeddedDataSpecifications_.AddEntriesFrom(input, _repeated_embeddedDataSpecifications_codec);
            break;
          }
          case 80: {
            SubmodelElementType = (global::FSR.GRPC.Lib.V3.SubmodelElementType) input.ReadEnum();
            break;
          }
          case 90: {
            if (property_ == null) {
              Property = new global::FSR.GRPC.Lib.V3.PropertyPayloadDTO();
            }
            input.ReadMessage(Property);
            break;
          }
          case 98: {
            if (multiLanguageProperty_ == null) {
              MultiLanguageProperty = new global::FSR.GRPC.Lib.V3.MultiLanguagePropertyPayloadDTO();
            }
            input.ReadMessage(MultiLanguageProperty);
            break;
          }
          case 106: {
            if (range_ == null) {
              Range = new global::FSR.GRPC.Lib.V3.RangePayloadDTO();
            }
            input.ReadMessage(Range);
            break;
          }
          case 114: {
            if (referenceElement_ == null) {
              ReferenceElement = new global::FSR.GRPC.Lib.V3.ReferenceElementPayloadDTO();
            }
            input.ReadMessage(ReferenceElement);
            break;
          }
          case 122: {
            if (blob_ == null) {
              Blob = new global::FSR.GRPC.Lib.V3.BlobPayloadDTO();
            }
            input.ReadMessage(Blob);
            break;
          }
          case 130: {
            if (file_ == null) {
              File = new global::FSR.GRPC.Lib.V3.FilePayloadDTO();
            }
            input.ReadMessage(File);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PropertyPayloadDTO : pb::IMessage<PropertyPayloadDTO> {
    private static readonly pb::MessageParser<PropertyPayloadDTO> _parser = new pb::MessageParser<PropertyPayloadDTO>(() => new PropertyPayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertyPayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyPayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyPayloadDTO(PropertyPayloadDTO other) : this() {
      valueType_ = other.valueType_;
      value_ = other.value_;
      valueId_ = other.valueId_ != null ? other.valueId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyPayloadDTO Clone() {
      return new PropertyPayloadDTO(this);
    }

    /// <summary>Field number for the "valueType" field.</summary>
    public const int ValueTypeFieldNumber = 1;
    private global::FSR.GRPC.Lib.V3.DataTypeDefXsd valueType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.DataTypeDefXsd ValueType {
      get { return valueType_; }
      set {
        valueType_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valueId" field.</summary>
    public const int ValueIdFieldNumber = 3;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO valueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO ValueId {
      get { return valueId_; }
      set {
        valueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertyPayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertyPayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ValueType != other.ValueType) return false;
      if (Value != other.Value) return false;
      if (!object.Equals(ValueId, other.ValueId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ValueType != 0) hash ^= ValueType.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (valueId_ != null) hash ^= ValueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ValueType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ValueType);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (valueId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ValueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ValueType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValueType);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (valueId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertyPayloadDTO other) {
      if (other == null) {
        return;
      }
      if (other.ValueType != 0) {
        ValueType = other.ValueType;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.valueId_ != null) {
        if (valueId_ == null) {
          ValueId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        ValueId.MergeFrom(other.ValueId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ValueType = (global::FSR.GRPC.Lib.V3.DataTypeDefXsd) input.ReadEnum();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 26: {
            if (valueId_ == null) {
              ValueId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(ValueId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiLanguagePropertyPayloadDTO : pb::IMessage<MultiLanguagePropertyPayloadDTO> {
    private static readonly pb::MessageParser<MultiLanguagePropertyPayloadDTO> _parser = new pb::MessageParser<MultiLanguagePropertyPayloadDTO>(() => new MultiLanguagePropertyPayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiLanguagePropertyPayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiLanguagePropertyPayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiLanguagePropertyPayloadDTO(MultiLanguagePropertyPayloadDTO other) : this() {
      value_ = other.value_.Clone();
      valueId_ = other.valueId_ != null ? other.valueId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiLanguagePropertyPayloadDTO Clone() {
      return new MultiLanguagePropertyPayloadDTO(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.LangStringDTO> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.Lib.V3.LangStringDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> value_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> Value {
      get { return value_; }
    }

    /// <summary>Field number for the "valueId" field.</summary>
    public const int ValueIdFieldNumber = 2;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO valueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO ValueId {
      get { return valueId_; }
      set {
        valueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiLanguagePropertyPayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiLanguagePropertyPayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      if (!object.Equals(ValueId, other.ValueId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (valueId_ != null) hash ^= ValueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
      if (valueId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ValueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (valueId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiLanguagePropertyPayloadDTO other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      if (other.valueId_ != null) {
        if (valueId_ == null) {
          ValueId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        ValueId.MergeFrom(other.ValueId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
          case 18: {
            if (valueId_ == null) {
              ValueId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(ValueId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RangePayloadDTO : pb::IMessage<RangePayloadDTO> {
    private static readonly pb::MessageParser<RangePayloadDTO> _parser = new pb::MessageParser<RangePayloadDTO>(() => new RangePayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RangePayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RangePayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RangePayloadDTO(RangePayloadDTO other) : this() {
      valueType_ = other.valueType_;
      min_ = other.min_;
      max_ = other.max_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RangePayloadDTO Clone() {
      return new RangePayloadDTO(this);
    }

    /// <summary>Field number for the "valueType" field.</summary>
    public const int ValueTypeFieldNumber = 1;
    private global::FSR.GRPC.Lib.V3.DataTypeDefXsd valueType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.DataTypeDefXsd ValueType {
      get { return valueType_; }
      set {
        valueType_ = value;
      }
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 2;
    private string min_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Min {
      get { return min_; }
      set {
        min_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 3;
    private string max_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Max {
      get { return max_; }
      set {
        max_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RangePayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RangePayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ValueType != other.ValueType) return false;
      if (Min != other.Min) return false;
      if (Max != other.Max) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ValueType != 0) hash ^= ValueType.GetHashCode();
      if (Min.Length != 0) hash ^= Min.GetHashCode();
      if (Max.Length != 0) hash ^= Max.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ValueType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ValueType);
      }
      if (Min.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Min);
      }
      if (Max.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Max);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ValueType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValueType);
      }
      if (Min.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Min);
      }
      if (Max.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Max);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RangePayloadDTO other) {
      if (other == null) {
        return;
      }
      if (other.ValueType != 0) {
        ValueType = other.ValueType;
      }
      if (other.Min.Length != 0) {
        Min = other.Min;
      }
      if (other.Max.Length != 0) {
        Max = other.Max;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ValueType = (global::FSR.GRPC.Lib.V3.DataTypeDefXsd) input.ReadEnum();
            break;
          }
          case 18: {
            Min = input.ReadString();
            break;
          }
          case 26: {
            Max = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReferenceElementPayloadDTO : pb::IMessage<ReferenceElementPayloadDTO> {
    private static readonly pb::MessageParser<ReferenceElementPayloadDTO> _parser = new pb::MessageParser<ReferenceElementPayloadDTO>(() => new ReferenceElementPayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReferenceElementPayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceElementPayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceElementPayloadDTO(ReferenceElementPayloadDTO other) : this() {
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceElementPayloadDTO Clone() {
      return new ReferenceElementPayloadDTO(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReferenceElementPayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReferenceElementPayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (value_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReferenceElementPayloadDTO other) {
      if (other == null) {
        return;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (value_ == null) {
              Value = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlobPayloadDTO : pb::IMessage<BlobPayloadDTO> {
    private static readonly pb::MessageParser<BlobPayloadDTO> _parser = new pb::MessageParser<BlobPayloadDTO>(() => new BlobPayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlobPayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobPayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobPayloadDTO(BlobPayloadDTO other) : this() {
      value_ = other.value_;
      contentType_ = other.contentType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobPayloadDTO Clone() {
      return new BlobPayloadDTO(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contentType" field.</summary>
    public const int ContentTypeFieldNumber = 2;
    private string contentType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlobPayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlobPayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (ContentType != other.ContentType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      if (ContentType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (ContentType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlobPayloadDTO other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
          case 18: {
            ContentType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FilePayloadDTO : pb::IMessage<FilePayloadDTO> {
    private static readonly pb::MessageParser<FilePayloadDTO> _parser = new pb::MessageParser<FilePayloadDTO>(() => new FilePayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FilePayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilePayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilePayloadDTO(FilePayloadDTO other) : this() {
      value_ = other.value_;
      contentType_ = other.contentType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilePayloadDTO Clone() {
      return new FilePayloadDTO(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contentType" field.</summary>
    public const int ContentTypeFieldNumber = 2;
    private string contentType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FilePayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FilePayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (ContentType != other.ContentType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (ContentType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (ContentType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FilePayloadDTO other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
          case 18: {
            ContentType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AnnotatedRelationshipElementPayloadDTO : pb::IMessage<AnnotatedRelationshipElementPayloadDTO> {
    private static readonly pb::MessageParser<AnnotatedRelationshipElementPayloadDTO> _parser = new pb::MessageParser<AnnotatedRelationshipElementPayloadDTO>(() => new AnnotatedRelationshipElementPayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnnotatedRelationshipElementPayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotatedRelationshipElementPayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotatedRelationshipElementPayloadDTO(AnnotatedRelationshipElementPayloadDTO other) : this() {
      first_ = other.first_ != null ? other.first_.Clone() : null;
      second_ = other.second_ != null ? other.second_.Clone() : null;
      annotations_ = other.annotations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotatedRelationshipElementPayloadDTO Clone() {
      return new AnnotatedRelationshipElementPayloadDTO(this);
    }

    /// <summary>Field number for the "first" field.</summary>
    public const int FirstFieldNumber = 1;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO first_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO First {
      get { return first_; }
      set {
        first_ = value;
      }
    }

    /// <summary>Field number for the "second" field.</summary>
    public const int SecondFieldNumber = 2;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO second_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO Second {
      get { return second_; }
      set {
        second_ = value;
      }
    }

    /// <summary>Field number for the "annotations" field.</summary>
    public const int AnnotationsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.DataElementDTO> _repeated_annotations_codec
        = pb::FieldCodec.ForMessage(26, global::FSR.GRPC.Lib.V3.DataElementDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.DataElementDTO> annotations_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.DataElementDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.DataElementDTO> Annotations {
      get { return annotations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnnotatedRelationshipElementPayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnnotatedRelationshipElementPayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(First, other.First)) return false;
      if (!object.Equals(Second, other.Second)) return false;
      if(!annotations_.Equals(other.annotations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (first_ != null) hash ^= First.GetHashCode();
      if (second_ != null) hash ^= Second.GetHashCode();
      hash ^= annotations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (first_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(First);
      }
      if (second_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Second);
      }
      annotations_.WriteTo(output, _repeated_annotations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (first_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(First);
      }
      if (second_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Second);
      }
      size += annotations_.CalculateSize(_repeated_annotations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnnotatedRelationshipElementPayloadDTO other) {
      if (other == null) {
        return;
      }
      if (other.first_ != null) {
        if (first_ == null) {
          First = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        First.MergeFrom(other.First);
      }
      if (other.second_ != null) {
        if (second_ == null) {
          Second = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        Second.MergeFrom(other.Second);
      }
      annotations_.Add(other.annotations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (first_ == null) {
              First = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(First);
            break;
          }
          case 18: {
            if (second_ == null) {
              Second = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(Second);
            break;
          }
          case 26: {
            annotations_.AddEntriesFrom(input, _repeated_annotations_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EntityPayloadDTO : pb::IMessage<EntityPayloadDTO> {
    private static readonly pb::MessageParser<EntityPayloadDTO> _parser = new pb::MessageParser<EntityPayloadDTO>(() => new EntityPayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityPayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityPayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityPayloadDTO(EntityPayloadDTO other) : this() {
      statements_ = other.statements_.Clone();
      entityType_ = other.entityType_;
      globalAssetId_ = other.globalAssetId_;
      specificAssetIds_ = other.specificAssetIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityPayloadDTO Clone() {
      return new EntityPayloadDTO(this);
    }

    /// <summary>Field number for the "statements" field.</summary>
    public const int StatementsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.SubmodelElementDTO> _repeated_statements_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.Lib.V3.SubmodelElementDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SubmodelElementDTO> statements_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SubmodelElementDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SubmodelElementDTO> Statements {
      get { return statements_; }
    }

    /// <summary>Field number for the "entityType" field.</summary>
    public const int EntityTypeFieldNumber = 2;
    private global::FSR.GRPC.Lib.V3.EntityType entityType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.EntityType EntityType {
      get { return entityType_; }
      set {
        entityType_ = value;
      }
    }

    /// <summary>Field number for the "globalAssetId" field.</summary>
    public const int GlobalAssetIdFieldNumber = 3;
    private string globalAssetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GlobalAssetId {
      get { return globalAssetId_; }
      set {
        globalAssetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "specificAssetIds" field.</summary>
    public const int SpecificAssetIdsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.SpecificAssetIdDTO> _repeated_specificAssetIds_codec
        = pb::FieldCodec.ForMessage(34, global::FSR.GRPC.Lib.V3.SpecificAssetIdDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SpecificAssetIdDTO> specificAssetIds_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SpecificAssetIdDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.SpecificAssetIdDTO> SpecificAssetIds {
      get { return specificAssetIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityPayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityPayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!statements_.Equals(other.statements_)) return false;
      if (EntityType != other.EntityType) return false;
      if (GlobalAssetId != other.GlobalAssetId) return false;
      if(!specificAssetIds_.Equals(other.specificAssetIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= statements_.GetHashCode();
      if (EntityType != 0) hash ^= EntityType.GetHashCode();
      if (GlobalAssetId.Length != 0) hash ^= GlobalAssetId.GetHashCode();
      hash ^= specificAssetIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      statements_.WriteTo(output, _repeated_statements_codec);
      if (EntityType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) EntityType);
      }
      if (GlobalAssetId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GlobalAssetId);
      }
      specificAssetIds_.WriteTo(output, _repeated_specificAssetIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += statements_.CalculateSize(_repeated_statements_codec);
      if (EntityType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntityType);
      }
      if (GlobalAssetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GlobalAssetId);
      }
      size += specificAssetIds_.CalculateSize(_repeated_specificAssetIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityPayloadDTO other) {
      if (other == null) {
        return;
      }
      statements_.Add(other.statements_);
      if (other.EntityType != 0) {
        EntityType = other.EntityType;
      }
      if (other.GlobalAssetId.Length != 0) {
        GlobalAssetId = other.GlobalAssetId;
      }
      specificAssetIds_.Add(other.specificAssetIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            statements_.AddEntriesFrom(input, _repeated_statements_codec);
            break;
          }
          case 16: {
            EntityType = (global::FSR.GRPC.Lib.V3.EntityType) input.ReadEnum();
            break;
          }
          case 26: {
            GlobalAssetId = input.ReadString();
            break;
          }
          case 34: {
            specificAssetIds_.AddEntriesFrom(input, _repeated_specificAssetIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EventPayloadDTO : pb::IMessage<EventPayloadDTO> {
    private static readonly pb::MessageParser<EventPayloadDTO> _parser = new pb::MessageParser<EventPayloadDTO>(() => new EventPayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventPayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPayloadDTO(EventPayloadDTO other) : this() {
      source_ = other.source_ != null ? other.source_.Clone() : null;
      sourceSemanticId_ = other.sourceSemanticId_ != null ? other.sourceSemanticId_.Clone() : null;
      observableReference_ = other.observableReference_ != null ? other.observableReference_.Clone() : null;
      observableSemanticId_ = other.observableSemanticId_ != null ? other.observableSemanticId_.Clone() : null;
      topic_ = other.topic_;
      subjectId_ = other.subjectId_ != null ? other.subjectId_.Clone() : null;
      timestamp_ = other.timestamp_;
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPayloadDTO Clone() {
      return new EventPayloadDTO(this);
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 1;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "sourceSemanticId" field.</summary>
    public const int SourceSemanticIdFieldNumber = 2;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO sourceSemanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO SourceSemanticId {
      get { return sourceSemanticId_; }
      set {
        sourceSemanticId_ = value;
      }
    }

    /// <summary>Field number for the "observableReference" field.</summary>
    public const int ObservableReferenceFieldNumber = 3;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO observableReference_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO ObservableReference {
      get { return observableReference_; }
      set {
        observableReference_ = value;
      }
    }

    /// <summary>Field number for the "observableSemanticId" field.</summary>
    public const int ObservableSemanticIdFieldNumber = 4;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO observableSemanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO ObservableSemanticId {
      get { return observableSemanticId_; }
      set {
        observableSemanticId_ = value;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 5;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subjectId" field.</summary>
    public const int SubjectIdFieldNumber = 6;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO subjectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO SubjectId {
      get { return subjectId_; }
      set {
        subjectId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 7;
    private string timestamp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 8;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventPayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventPayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Source, other.Source)) return false;
      if (!object.Equals(SourceSemanticId, other.SourceSemanticId)) return false;
      if (!object.Equals(ObservableReference, other.ObservableReference)) return false;
      if (!object.Equals(ObservableSemanticId, other.ObservableSemanticId)) return false;
      if (Topic != other.Topic) return false;
      if (!object.Equals(SubjectId, other.SubjectId)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (source_ != null) hash ^= Source.GetHashCode();
      if (sourceSemanticId_ != null) hash ^= SourceSemanticId.GetHashCode();
      if (observableReference_ != null) hash ^= ObservableReference.GetHashCode();
      if (observableSemanticId_ != null) hash ^= ObservableSemanticId.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (subjectId_ != null) hash ^= SubjectId.GetHashCode();
      if (Timestamp.Length != 0) hash ^= Timestamp.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (source_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Source);
      }
      if (sourceSemanticId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SourceSemanticId);
      }
      if (observableReference_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ObservableReference);
      }
      if (observableSemanticId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ObservableSemanticId);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Topic);
      }
      if (subjectId_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SubjectId);
      }
      if (Timestamp.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Timestamp);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      if (sourceSemanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SourceSemanticId);
      }
      if (observableReference_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObservableReference);
      }
      if (observableSemanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObservableSemanticId);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (subjectId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubjectId);
      }
      if (Timestamp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Timestamp);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventPayloadDTO other) {
      if (other == null) {
        return;
      }
      if (other.source_ != null) {
        if (source_ == null) {
          Source = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        Source.MergeFrom(other.Source);
      }
      if (other.sourceSemanticId_ != null) {
        if (sourceSemanticId_ == null) {
          SourceSemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        SourceSemanticId.MergeFrom(other.SourceSemanticId);
      }
      if (other.observableReference_ != null) {
        if (observableReference_ == null) {
          ObservableReference = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        ObservableReference.MergeFrom(other.ObservableReference);
      }
      if (other.observableSemanticId_ != null) {
        if (observableSemanticId_ == null) {
          ObservableSemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        ObservableSemanticId.MergeFrom(other.ObservableSemanticId);
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.subjectId_ != null) {
        if (subjectId_ == null) {
          SubjectId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        SubjectId.MergeFrom(other.SubjectId);
      }
      if (other.Timestamp.Length != 0) {
        Timestamp = other.Timestamp;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (source_ == null) {
              Source = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(Source);
            break;
          }
          case 18: {
            if (sourceSemanticId_ == null) {
              SourceSemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(SourceSemanticId);
            break;
          }
          case 26: {
            if (observableReference_ == null) {
              ObservableReference = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(ObservableReference);
            break;
          }
          case 34: {
            if (observableSemanticId_ == null) {
              ObservableSemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(ObservableSemanticId);
            break;
          }
          case 42: {
            Topic = input.ReadString();
            break;
          }
          case 50: {
            if (subjectId_ == null) {
              SubjectId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(SubjectId);
            break;
          }
          case 58: {
            Timestamp = input.ReadString();
            break;
          }
          case 66: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Intentionally empty
  /// </summary>
  public sealed partial class EventElementPayloadDTO : pb::IMessage<EventElementPayloadDTO> {
    private static readonly pb::MessageParser<EventElementPayloadDTO> _parser = new pb::MessageParser<EventElementPayloadDTO>(() => new EventElementPayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventElementPayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventElementPayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventElementPayloadDTO(EventElementPayloadDTO other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventElementPayloadDTO Clone() {
      return new EventElementPayloadDTO(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventElementPayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventElementPayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventElementPayloadDTO other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class BasicEventElementPayloadDTO : pb::IMessage<BasicEventElementPayloadDTO> {
    private static readonly pb::MessageParser<BasicEventElementPayloadDTO> _parser = new pb::MessageParser<BasicEventElementPayloadDTO>(() => new BasicEventElementPayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BasicEventElementPayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicEventElementPayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicEventElementPayloadDTO(BasicEventElementPayloadDTO other) : this() {
      observed_ = other.observed_ != null ? other.observed_.Clone() : null;
      direction_ = other.direction_;
      state_ = other.state_;
      messageTopic_ = other.messageTopic_;
      messageBroker_ = other.messageBroker_ != null ? other.messageBroker_.Clone() : null;
      lastUpdate_ = other.lastUpdate_;
      minInterval_ = other.minInterval_;
      maxInterval_ = other.maxInterval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicEventElementPayloadDTO Clone() {
      return new BasicEventElementPayloadDTO(this);
    }

    /// <summary>Field number for the "observed" field.</summary>
    public const int ObservedFieldNumber = 1;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO observed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO Observed {
      get { return observed_; }
      set {
        observed_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 2;
    private global::FSR.GRPC.Lib.V3.Direction direction_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.Direction Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::FSR.GRPC.Lib.V3.StateOfEvent state_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.StateOfEvent State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "messageTopic" field.</summary>
    public const int MessageTopicFieldNumber = 4;
    private string messageTopic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MessageTopic {
      get { return messageTopic_; }
      set {
        messageTopic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "messageBroker" field.</summary>
    public const int MessageBrokerFieldNumber = 5;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO messageBroker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO MessageBroker {
      get { return messageBroker_; }
      set {
        messageBroker_ = value;
      }
    }

    /// <summary>Field number for the "lastUpdate" field.</summary>
    public const int LastUpdateFieldNumber = 6;
    private string lastUpdate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastUpdate {
      get { return lastUpdate_; }
      set {
        lastUpdate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "minInterval" field.</summary>
    public const int MinIntervalFieldNumber = 7;
    private string minInterval_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MinInterval {
      get { return minInterval_; }
      set {
        minInterval_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxInterval" field.</summary>
    public const int MaxIntervalFieldNumber = 8;
    private string maxInterval_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaxInterval {
      get { return maxInterval_; }
      set {
        maxInterval_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BasicEventElementPayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BasicEventElementPayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Observed, other.Observed)) return false;
      if (Direction != other.Direction) return false;
      if (State != other.State) return false;
      if (MessageTopic != other.MessageTopic) return false;
      if (!object.Equals(MessageBroker, other.MessageBroker)) return false;
      if (LastUpdate != other.LastUpdate) return false;
      if (MinInterval != other.MinInterval) return false;
      if (MaxInterval != other.MaxInterval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (observed_ != null) hash ^= Observed.GetHashCode();
      if (Direction != 0) hash ^= Direction.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (MessageTopic.Length != 0) hash ^= MessageTopic.GetHashCode();
      if (messageBroker_ != null) hash ^= MessageBroker.GetHashCode();
      if (LastUpdate.Length != 0) hash ^= LastUpdate.GetHashCode();
      if (MinInterval.Length != 0) hash ^= MinInterval.GetHashCode();
      if (MaxInterval.Length != 0) hash ^= MaxInterval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (observed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Observed);
      }
      if (Direction != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Direction);
      }
      if (State != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (MessageTopic.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MessageTopic);
      }
      if (messageBroker_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MessageBroker);
      }
      if (LastUpdate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LastUpdate);
      }
      if (MinInterval.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MinInterval);
      }
      if (MaxInterval.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MaxInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (observed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Observed);
      }
      if (Direction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (MessageTopic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageTopic);
      }
      if (messageBroker_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageBroker);
      }
      if (LastUpdate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastUpdate);
      }
      if (MinInterval.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MinInterval);
      }
      if (MaxInterval.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaxInterval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BasicEventElementPayloadDTO other) {
      if (other == null) {
        return;
      }
      if (other.observed_ != null) {
        if (observed_ == null) {
          Observed = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        Observed.MergeFrom(other.Observed);
      }
      if (other.Direction != 0) {
        Direction = other.Direction;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.MessageTopic.Length != 0) {
        MessageTopic = other.MessageTopic;
      }
      if (other.messageBroker_ != null) {
        if (messageBroker_ == null) {
          MessageBroker = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        MessageBroker.MergeFrom(other.MessageBroker);
      }
      if (other.LastUpdate.Length != 0) {
        LastUpdate = other.LastUpdate;
      }
      if (other.MinInterval.Length != 0) {
        MinInterval = other.MinInterval;
      }
      if (other.MaxInterval.Length != 0) {
        MaxInterval = other.MaxInterval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (observed_ == null) {
              Observed = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(Observed);
            break;
          }
          case 16: {
            Direction = (global::FSR.GRPC.Lib.V3.Direction) input.ReadEnum();
            break;
          }
          case 24: {
            State = (global::FSR.GRPC.Lib.V3.StateOfEvent) input.ReadEnum();
            break;
          }
          case 34: {
            MessageTopic = input.ReadString();
            break;
          }
          case 42: {
            if (messageBroker_ == null) {
              MessageBroker = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(MessageBroker);
            break;
          }
          case 50: {
            LastUpdate = input.ReadString();
            break;
          }
          case 58: {
            MinInterval = input.ReadString();
            break;
          }
          case 66: {
            MaxInterval = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OperationPayloadDTO : pb::IMessage<OperationPayloadDTO> {
    private static readonly pb::MessageParser<OperationPayloadDTO> _parser = new pb::MessageParser<OperationPayloadDTO>(() => new OperationPayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationPayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationPayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationPayloadDTO(OperationPayloadDTO other) : this() {
      inputVariables_ = other.inputVariables_.Clone();
      outputVariables_ = other.outputVariables_.Clone();
      inoutVariables_ = other.inoutVariables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationPayloadDTO Clone() {
      return new OperationPayloadDTO(this);
    }

    /// <summary>Field number for the "inputVariables" field.</summary>
    public const int InputVariablesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.OperationVariableDTO> _repeated_inputVariables_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.Lib.V3.OperationVariableDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.OperationVariableDTO> inputVariables_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.OperationVariableDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.OperationVariableDTO> InputVariables {
      get { return inputVariables_; }
    }

    /// <summary>Field number for the "outputVariables" field.</summary>
    public const int OutputVariablesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.OperationVariableDTO> _repeated_outputVariables_codec
        = pb::FieldCodec.ForMessage(18, global::FSR.GRPC.Lib.V3.OperationVariableDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.OperationVariableDTO> outputVariables_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.OperationVariableDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.OperationVariableDTO> OutputVariables {
      get { return outputVariables_; }
    }

    /// <summary>Field number for the "inoutVariables" field.</summary>
    public const int InoutVariablesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.OperationVariableDTO> _repeated_inoutVariables_codec
        = pb::FieldCodec.ForMessage(26, global::FSR.GRPC.Lib.V3.OperationVariableDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.OperationVariableDTO> inoutVariables_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.OperationVariableDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.OperationVariableDTO> InoutVariables {
      get { return inoutVariables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationPayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationPayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inputVariables_.Equals(other.inputVariables_)) return false;
      if(!outputVariables_.Equals(other.outputVariables_)) return false;
      if(!inoutVariables_.Equals(other.inoutVariables_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inputVariables_.GetHashCode();
      hash ^= outputVariables_.GetHashCode();
      hash ^= inoutVariables_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      inputVariables_.WriteTo(output, _repeated_inputVariables_codec);
      outputVariables_.WriteTo(output, _repeated_outputVariables_codec);
      inoutVariables_.WriteTo(output, _repeated_inoutVariables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inputVariables_.CalculateSize(_repeated_inputVariables_codec);
      size += outputVariables_.CalculateSize(_repeated_outputVariables_codec);
      size += inoutVariables_.CalculateSize(_repeated_inoutVariables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationPayloadDTO other) {
      if (other == null) {
        return;
      }
      inputVariables_.Add(other.inputVariables_);
      outputVariables_.Add(other.outputVariables_);
      inoutVariables_.Add(other.inoutVariables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inputVariables_.AddEntriesFrom(input, _repeated_inputVariables_codec);
            break;
          }
          case 18: {
            outputVariables_.AddEntriesFrom(input, _repeated_outputVariables_codec);
            break;
          }
          case 26: {
            inoutVariables_.AddEntriesFrom(input, _repeated_inoutVariables_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OperationVariableDTO : pb::IMessage<OperationVariableDTO> {
    private static readonly pb::MessageParser<OperationVariableDTO> _parser = new pb::MessageParser<OperationVariableDTO>(() => new OperationVariableDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationVariableDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationVariableDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationVariableDTO(OperationVariableDTO other) : this() {
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationVariableDTO Clone() {
      return new OperationVariableDTO(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::FSR.GRPC.Lib.V3.SubmodelElementDTO value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.SubmodelElementDTO Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationVariableDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationVariableDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (value_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationVariableDTO other) {
      if (other == null) {
        return;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::FSR.GRPC.Lib.V3.SubmodelElementDTO();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (value_ == null) {
              Value = new global::FSR.GRPC.Lib.V3.SubmodelElementDTO();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Intentionally empty
  /// </summary>
  public sealed partial class CapabilityPayloadDTO : pb::IMessage<CapabilityPayloadDTO> {
    private static readonly pb::MessageParser<CapabilityPayloadDTO> _parser = new pb::MessageParser<CapabilityPayloadDTO>(() => new CapabilityPayloadDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CapabilityPayloadDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CapabilityPayloadDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CapabilityPayloadDTO(CapabilityPayloadDTO other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CapabilityPayloadDTO Clone() {
      return new CapabilityPayloadDTO(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CapabilityPayloadDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CapabilityPayloadDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CapabilityPayloadDTO other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ConceptDescriptionDTO : pb::IMessage<ConceptDescriptionDTO> {
    private static readonly pb::MessageParser<ConceptDescriptionDTO> _parser = new pb::MessageParser<ConceptDescriptionDTO>(() => new ConceptDescriptionDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConceptDescriptionDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConceptDescriptionDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConceptDescriptionDTO(ConceptDescriptionDTO other) : this() {
      extensions_ = other.extensions_.Clone();
      category_ = other.category_;
      idShort_ = other.idShort_;
      displayName_ = other.displayName_.Clone();
      description_ = other.description_.Clone();
      administration_ = other.administration_ != null ? other.administration_.Clone() : null;
      id_ = other.id_;
      embeddedDataSpecifications_ = other.embeddedDataSpecifications_.Clone();
      isCaseOf_ = other.isCaseOf_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConceptDescriptionDTO Clone() {
      return new ConceptDescriptionDTO(this);
    }

    /// <summary>Field number for the "extensions" field.</summary>
    public const int ExtensionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.ExtensionDTO> _repeated_extensions_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.Lib.V3.ExtensionDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ExtensionDTO> extensions_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ExtensionDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ExtensionDTO> Extensions {
      get { return extensions_; }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 2;
    private string category_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idShort" field.</summary>
    public const int IdShortFieldNumber = 3;
    private string idShort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdShort {
      get { return idShort_; }
      set {
        idShort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.LangStringDTO> _repeated_displayName_codec
        = pb::FieldCodec.ForMessage(34, global::FSR.GRPC.Lib.V3.LangStringDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> displayName_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> DisplayName {
      get { return displayName_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.LangStringDTO> _repeated_description_codec
        = pb::FieldCodec.ForMessage(42, global::FSR.GRPC.Lib.V3.LangStringDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> description_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> Description {
      get { return description_; }
    }

    /// <summary>Field number for the "administration" field.</summary>
    public const int AdministrationFieldNumber = 6;
    private global::FSR.GRPC.Lib.V3.AdministrativeInformationDTO administration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.AdministrativeInformationDTO Administration {
      get { return administration_; }
      set {
        administration_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 7;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "embeddedDataSpecifications" field.</summary>
    public const int EmbeddedDataSpecificationsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> _repeated_embeddedDataSpecifications_codec
        = pb::FieldCodec.ForMessage(66, global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> embeddedDataSpecifications_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.EmbeddedDataSpecificationDTO> EmbeddedDataSpecifications {
      get { return embeddedDataSpecifications_; }
    }

    /// <summary>Field number for the "isCaseOf" field.</summary>
    public const int IsCaseOfFieldNumber = 9;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.ReferenceDTO> _repeated_isCaseOf_codec
        = pb::FieldCodec.ForMessage(74, global::FSR.GRPC.Lib.V3.ReferenceDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> isCaseOf_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ReferenceDTO> IsCaseOf {
      get { return isCaseOf_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConceptDescriptionDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConceptDescriptionDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!extensions_.Equals(other.extensions_)) return false;
      if (Category != other.Category) return false;
      if (IdShort != other.IdShort) return false;
      if(!displayName_.Equals(other.displayName_)) return false;
      if(!description_.Equals(other.description_)) return false;
      if (!object.Equals(Administration, other.Administration)) return false;
      if (Id != other.Id) return false;
      if(!embeddedDataSpecifications_.Equals(other.embeddedDataSpecifications_)) return false;
      if(!isCaseOf_.Equals(other.isCaseOf_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= extensions_.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (IdShort.Length != 0) hash ^= IdShort.GetHashCode();
      hash ^= displayName_.GetHashCode();
      hash ^= description_.GetHashCode();
      if (administration_ != null) hash ^= Administration.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= embeddedDataSpecifications_.GetHashCode();
      hash ^= isCaseOf_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      extensions_.WriteTo(output, _repeated_extensions_codec);
      if (Category.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Category);
      }
      if (IdShort.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IdShort);
      }
      displayName_.WriteTo(output, _repeated_displayName_codec);
      description_.WriteTo(output, _repeated_description_codec);
      if (administration_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Administration);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Id);
      }
      embeddedDataSpecifications_.WriteTo(output, _repeated_embeddedDataSpecifications_codec);
      isCaseOf_.WriteTo(output, _repeated_isCaseOf_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += extensions_.CalculateSize(_repeated_extensions_codec);
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (IdShort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdShort);
      }
      size += displayName_.CalculateSize(_repeated_displayName_codec);
      size += description_.CalculateSize(_repeated_description_codec);
      if (administration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Administration);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += embeddedDataSpecifications_.CalculateSize(_repeated_embeddedDataSpecifications_codec);
      size += isCaseOf_.CalculateSize(_repeated_isCaseOf_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConceptDescriptionDTO other) {
      if (other == null) {
        return;
      }
      extensions_.Add(other.extensions_);
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.IdShort.Length != 0) {
        IdShort = other.IdShort;
      }
      displayName_.Add(other.displayName_);
      description_.Add(other.description_);
      if (other.administration_ != null) {
        if (administration_ == null) {
          Administration = new global::FSR.GRPC.Lib.V3.AdministrativeInformationDTO();
        }
        Administration.MergeFrom(other.Administration);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      embeddedDataSpecifications_.Add(other.embeddedDataSpecifications_);
      isCaseOf_.Add(other.isCaseOf_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            extensions_.AddEntriesFrom(input, _repeated_extensions_codec);
            break;
          }
          case 18: {
            Category = input.ReadString();
            break;
          }
          case 26: {
            IdShort = input.ReadString();
            break;
          }
          case 34: {
            displayName_.AddEntriesFrom(input, _repeated_displayName_codec);
            break;
          }
          case 42: {
            description_.AddEntriesFrom(input, _repeated_description_codec);
            break;
          }
          case 50: {
            if (administration_ == null) {
              Administration = new global::FSR.GRPC.Lib.V3.AdministrativeInformationDTO();
            }
            input.ReadMessage(Administration);
            break;
          }
          case 58: {
            Id = input.ReadString();
            break;
          }
          case 66: {
            embeddedDataSpecifications_.AddEntriesFrom(input, _repeated_embeddedDataSpecifications_codec);
            break;
          }
          case 74: {
            isCaseOf_.AddEntriesFrom(input, _repeated_isCaseOf_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReferenceDTO : pb::IMessage<ReferenceDTO> {
    private static readonly pb::MessageParser<ReferenceDTO> _parser = new pb::MessageParser<ReferenceDTO>(() => new ReferenceDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReferenceDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceDTO(ReferenceDTO other) : this() {
      type_ = other.type_;
      referredSemanticId_ = other.referredSemanticId_ != null ? other.referredSemanticId_.Clone() : null;
      keys_ = other.keys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceDTO Clone() {
      return new ReferenceDTO(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::FSR.GRPC.Lib.V3.ReferenceTypes type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceTypes Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "ReferredSemanticId" field.</summary>
    public const int ReferredSemanticIdFieldNumber = 2;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO referredSemanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO ReferredSemanticId {
      get { return referredSemanticId_; }
      set {
        referredSemanticId_ = value;
      }
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 3;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.KeyDTO> _repeated_keys_codec
        = pb::FieldCodec.ForMessage(26, global::FSR.GRPC.Lib.V3.KeyDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.KeyDTO> keys_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.KeyDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.KeyDTO> Keys {
      get { return keys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReferenceDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReferenceDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(ReferredSemanticId, other.ReferredSemanticId)) return false;
      if(!keys_.Equals(other.keys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (referredSemanticId_ != null) hash ^= ReferredSemanticId.GetHashCode();
      hash ^= keys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (referredSemanticId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReferredSemanticId);
      }
      keys_.WriteTo(output, _repeated_keys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (referredSemanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReferredSemanticId);
      }
      size += keys_.CalculateSize(_repeated_keys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReferenceDTO other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.referredSemanticId_ != null) {
        if (referredSemanticId_ == null) {
          ReferredSemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        ReferredSemanticId.MergeFrom(other.ReferredSemanticId);
      }
      keys_.Add(other.keys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::FSR.GRPC.Lib.V3.ReferenceTypes) input.ReadEnum();
            break;
          }
          case 18: {
            if (referredSemanticId_ == null) {
              ReferredSemanticId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(ReferredSemanticId);
            break;
          }
          case 26: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyDTO : pb::IMessage<KeyDTO> {
    private static readonly pb::MessageParser<KeyDTO> _parser = new pb::MessageParser<KeyDTO>(() => new KeyDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyDTO(KeyDTO other) : this() {
      type_ = other.type_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyDTO Clone() {
      return new KeyDTO(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::FSR.GRPC.Lib.V3.KeyTypes type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.KeyTypes Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyDTO other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::FSR.GRPC.Lib.V3.KeyTypes) input.ReadEnum();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LangStringDTO : pb::IMessage<LangStringDTO> {
    private static readonly pb::MessageParser<LangStringDTO> _parser = new pb::MessageParser<LangStringDTO>(() => new LangStringDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangStringDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangStringDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangStringDTO(LangStringDTO other) : this() {
      language_ = other.language_;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangStringDTO Clone() {
      return new LangStringDTO(this);
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 1;
    private string language_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangStringDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangStringDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Language != other.Language) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Language.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Language);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangStringDTO other) {
      if (other == null) {
        return;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Language = input.ReadString();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmbeddedDataSpecificationDTO : pb::IMessage<EmbeddedDataSpecificationDTO> {
    private static readonly pb::MessageParser<EmbeddedDataSpecificationDTO> _parser = new pb::MessageParser<EmbeddedDataSpecificationDTO>(() => new EmbeddedDataSpecificationDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmbeddedDataSpecificationDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmbeddedDataSpecificationDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmbeddedDataSpecificationDTO(EmbeddedDataSpecificationDTO other) : this() {
      dataSpecification_ = other.dataSpecification_ != null ? other.dataSpecification_.Clone() : null;
      dataSpecificationContent_ = other.dataSpecificationContent_ != null ? other.dataSpecificationContent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmbeddedDataSpecificationDTO Clone() {
      return new EmbeddedDataSpecificationDTO(this);
    }

    /// <summary>Field number for the "dataSpecification" field.</summary>
    public const int DataSpecificationFieldNumber = 1;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO dataSpecification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO DataSpecification {
      get { return dataSpecification_; }
      set {
        dataSpecification_ = value;
      }
    }

    /// <summary>Field number for the "dataSpecificationContent" field.</summary>
    public const int DataSpecificationContentFieldNumber = 2;
    private global::FSR.GRPC.Lib.V3.DataSpecificationContentDTO dataSpecificationContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.DataSpecificationContentDTO DataSpecificationContent {
      get { return dataSpecificationContent_; }
      set {
        dataSpecificationContent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmbeddedDataSpecificationDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmbeddedDataSpecificationDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DataSpecification, other.DataSpecification)) return false;
      if (!object.Equals(DataSpecificationContent, other.DataSpecificationContent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataSpecification_ != null) hash ^= DataSpecification.GetHashCode();
      if (dataSpecificationContent_ != null) hash ^= DataSpecificationContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dataSpecification_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DataSpecification);
      }
      if (dataSpecificationContent_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DataSpecificationContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataSpecification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataSpecification);
      }
      if (dataSpecificationContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataSpecificationContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmbeddedDataSpecificationDTO other) {
      if (other == null) {
        return;
      }
      if (other.dataSpecification_ != null) {
        if (dataSpecification_ == null) {
          DataSpecification = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        DataSpecification.MergeFrom(other.DataSpecification);
      }
      if (other.dataSpecificationContent_ != null) {
        if (dataSpecificationContent_ == null) {
          DataSpecificationContent = new global::FSR.GRPC.Lib.V3.DataSpecificationContentDTO();
        }
        DataSpecificationContent.MergeFrom(other.DataSpecificationContent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dataSpecification_ == null) {
              DataSpecification = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(DataSpecification);
            break;
          }
          case 18: {
            if (dataSpecificationContent_ == null) {
              DataSpecificationContent = new global::FSR.GRPC.Lib.V3.DataSpecificationContentDTO();
            }
            input.ReadMessage(DataSpecificationContent);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LevelTypeDTO : pb::IMessage<LevelTypeDTO> {
    private static readonly pb::MessageParser<LevelTypeDTO> _parser = new pb::MessageParser<LevelTypeDTO>(() => new LevelTypeDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LevelTypeDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelTypeDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelTypeDTO(LevelTypeDTO other) : this() {
      min_ = other.min_;
      nom_ = other.nom_;
      typ_ = other.typ_;
      max_ = other.max_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelTypeDTO Clone() {
      return new LevelTypeDTO(this);
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 1;
    private bool min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Min {
      get { return min_; }
      set {
        min_ = value;
      }
    }

    /// <summary>Field number for the "nom" field.</summary>
    public const int NomFieldNumber = 2;
    private bool nom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Nom {
      get { return nom_; }
      set {
        nom_ = value;
      }
    }

    /// <summary>Field number for the "typ" field.</summary>
    public const int TypFieldNumber = 3;
    private bool typ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Typ {
      get { return typ_; }
      set {
        typ_ = value;
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 4;
    private bool max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Max {
      get { return max_; }
      set {
        max_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LevelTypeDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LevelTypeDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Min != other.Min) return false;
      if (Nom != other.Nom) return false;
      if (Typ != other.Typ) return false;
      if (Max != other.Max) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Min != false) hash ^= Min.GetHashCode();
      if (Nom != false) hash ^= Nom.GetHashCode();
      if (Typ != false) hash ^= Typ.GetHashCode();
      if (Max != false) hash ^= Max.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Min != false) {
        output.WriteRawTag(8);
        output.WriteBool(Min);
      }
      if (Nom != false) {
        output.WriteRawTag(16);
        output.WriteBool(Nom);
      }
      if (Typ != false) {
        output.WriteRawTag(24);
        output.WriteBool(Typ);
      }
      if (Max != false) {
        output.WriteRawTag(32);
        output.WriteBool(Max);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Min != false) {
        size += 1 + 1;
      }
      if (Nom != false) {
        size += 1 + 1;
      }
      if (Typ != false) {
        size += 1 + 1;
      }
      if (Max != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LevelTypeDTO other) {
      if (other == null) {
        return;
      }
      if (other.Min != false) {
        Min = other.Min;
      }
      if (other.Nom != false) {
        Nom = other.Nom;
      }
      if (other.Typ != false) {
        Typ = other.Typ;
      }
      if (other.Max != false) {
        Max = other.Max;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Min = input.ReadBool();
            break;
          }
          case 16: {
            Nom = input.ReadBool();
            break;
          }
          case 24: {
            Typ = input.ReadBool();
            break;
          }
          case 32: {
            Max = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ValueReferencePairDTO : pb::IMessage<ValueReferencePairDTO> {
    private static readonly pb::MessageParser<ValueReferencePairDTO> _parser = new pb::MessageParser<ValueReferencePairDTO>(() => new ValueReferencePairDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValueReferencePairDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueReferencePairDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueReferencePairDTO(ValueReferencePairDTO other) : this() {
      value_ = other.value_;
      valueId_ = other.valueId_ != null ? other.valueId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueReferencePairDTO Clone() {
      return new ValueReferencePairDTO(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valueId" field.</summary>
    public const int ValueIdFieldNumber = 2;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO valueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO ValueId {
      get { return valueId_; }
      set {
        valueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValueReferencePairDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValueReferencePairDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (!object.Equals(ValueId, other.ValueId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (valueId_ != null) hash ^= ValueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (valueId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ValueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (valueId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValueReferencePairDTO other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.valueId_ != null) {
        if (valueId_ == null) {
          ValueId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        ValueId.MergeFrom(other.ValueId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
          case 18: {
            if (valueId_ == null) {
              ValueId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(ValueId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ValueListDTO : pb::IMessage<ValueListDTO> {
    private static readonly pb::MessageParser<ValueListDTO> _parser = new pb::MessageParser<ValueListDTO>(() => new ValueListDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValueListDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueListDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueListDTO(ValueListDTO other) : this() {
      valueReferencePairs_ = other.valueReferencePairs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueListDTO Clone() {
      return new ValueListDTO(this);
    }

    /// <summary>Field number for the "valueReferencePairs" field.</summary>
    public const int ValueReferencePairsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.ValueReferencePairDTO> _repeated_valueReferencePairs_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.Lib.V3.ValueReferencePairDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ValueReferencePairDTO> valueReferencePairs_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ValueReferencePairDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.ValueReferencePairDTO> ValueReferencePairs {
      get { return valueReferencePairs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValueListDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValueListDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!valueReferencePairs_.Equals(other.valueReferencePairs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= valueReferencePairs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      valueReferencePairs_.WriteTo(output, _repeated_valueReferencePairs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += valueReferencePairs_.CalculateSize(_repeated_valueReferencePairs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValueListDTO other) {
      if (other == null) {
        return;
      }
      valueReferencePairs_.Add(other.valueReferencePairs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            valueReferencePairs_.AddEntriesFrom(input, _repeated_valueReferencePairs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataSpecificationContentDTO : pb::IMessage<DataSpecificationContentDTO> {
    private static readonly pb::MessageParser<DataSpecificationContentDTO> _parser = new pb::MessageParser<DataSpecificationContentDTO>(() => new DataSpecificationContentDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSpecificationContentDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.Lib.V3.AasModelsV3Reflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSpecificationContentDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSpecificationContentDTO(DataSpecificationContentDTO other) : this() {
      preferredName_ = other.preferredName_.Clone();
      shortName_ = other.shortName_.Clone();
      unit_ = other.unit_;
      unitId_ = other.unitId_ != null ? other.unitId_.Clone() : null;
      symbol_ = other.symbol_;
      dataType_ = other.dataType_;
      definition_ = other.definition_.Clone();
      valueFormat_ = other.valueFormat_;
      valueList_ = other.valueList_ != null ? other.valueList_.Clone() : null;
      value_ = other.value_;
      levelType_ = other.levelType_ != null ? other.levelType_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSpecificationContentDTO Clone() {
      return new DataSpecificationContentDTO(this);
    }

    /// <summary>Field number for the "preferredName" field.</summary>
    public const int PreferredNameFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.LangStringDTO> _repeated_preferredName_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.Lib.V3.LangStringDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> preferredName_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> PreferredName {
      get { return preferredName_; }
    }

    /// <summary>Field number for the "shortName" field.</summary>
    public const int ShortNameFieldNumber = 2;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.LangStringDTO> _repeated_shortName_codec
        = pb::FieldCodec.ForMessage(18, global::FSR.GRPC.Lib.V3.LangStringDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> shortName_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> ShortName {
      get { return shortName_; }
    }

    /// <summary>Field number for the "unit" field.</summary>
    public const int UnitFieldNumber = 3;
    private string unit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Unit {
      get { return unit_; }
      set {
        unit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unitId" field.</summary>
    public const int UnitIdFieldNumber = 4;
    private global::FSR.GRPC.Lib.V3.ReferenceDTO unitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ReferenceDTO UnitId {
      get { return unitId_; }
      set {
        unitId_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 5;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataType" field.</summary>
    public const int DataTypeFieldNumber = 6;
    private global::FSR.GRPC.Lib.V3.DataTypeIec61360 dataType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.DataTypeIec61360 DataType {
      get { return dataType_; }
      set {
        dataType_ = value;
      }
    }

    /// <summary>Field number for the "definition" field.</summary>
    public const int DefinitionFieldNumber = 7;
    private static readonly pb::FieldCodec<global::FSR.GRPC.Lib.V3.LangStringDTO> _repeated_definition_codec
        = pb::FieldCodec.ForMessage(58, global::FSR.GRPC.Lib.V3.LangStringDTO.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> definition_ = new pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.Lib.V3.LangStringDTO> Definition {
      get { return definition_; }
    }

    /// <summary>Field number for the "valueFormat" field.</summary>
    public const int ValueFormatFieldNumber = 8;
    private string valueFormat_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValueFormat {
      get { return valueFormat_; }
      set {
        valueFormat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valueList" field.</summary>
    public const int ValueListFieldNumber = 9;
    private global::FSR.GRPC.Lib.V3.ValueListDTO valueList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.ValueListDTO ValueList {
      get { return valueList_; }
      set {
        valueList_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 10;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "levelType" field.</summary>
    public const int LevelTypeFieldNumber = 11;
    private global::FSR.GRPC.Lib.V3.LevelTypeDTO levelType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.Lib.V3.LevelTypeDTO LevelType {
      get { return levelType_; }
      set {
        levelType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSpecificationContentDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSpecificationContentDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!preferredName_.Equals(other.preferredName_)) return false;
      if(!shortName_.Equals(other.shortName_)) return false;
      if (Unit != other.Unit) return false;
      if (!object.Equals(UnitId, other.UnitId)) return false;
      if (Symbol != other.Symbol) return false;
      if (DataType != other.DataType) return false;
      if(!definition_.Equals(other.definition_)) return false;
      if (ValueFormat != other.ValueFormat) return false;
      if (!object.Equals(ValueList, other.ValueList)) return false;
      if (Value != other.Value) return false;
      if (!object.Equals(LevelType, other.LevelType)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= preferredName_.GetHashCode();
      hash ^= shortName_.GetHashCode();
      if (Unit.Length != 0) hash ^= Unit.GetHashCode();
      if (unitId_ != null) hash ^= UnitId.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (DataType != 0) hash ^= DataType.GetHashCode();
      hash ^= definition_.GetHashCode();
      if (ValueFormat.Length != 0) hash ^= ValueFormat.GetHashCode();
      if (valueList_ != null) hash ^= ValueList.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (levelType_ != null) hash ^= LevelType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      preferredName_.WriteTo(output, _repeated_preferredName_codec);
      shortName_.WriteTo(output, _repeated_shortName_codec);
      if (Unit.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Unit);
      }
      if (unitId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UnitId);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Symbol);
      }
      if (DataType != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) DataType);
      }
      definition_.WriteTo(output, _repeated_definition_codec);
      if (ValueFormat.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ValueFormat);
      }
      if (valueList_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ValueList);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Value);
      }
      if (levelType_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LevelType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += preferredName_.CalculateSize(_repeated_preferredName_codec);
      size += shortName_.CalculateSize(_repeated_shortName_codec);
      if (Unit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Unit);
      }
      if (unitId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitId);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (DataType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataType);
      }
      size += definition_.CalculateSize(_repeated_definition_codec);
      if (ValueFormat.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueFormat);
      }
      if (valueList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValueList);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (levelType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LevelType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSpecificationContentDTO other) {
      if (other == null) {
        return;
      }
      preferredName_.Add(other.preferredName_);
      shortName_.Add(other.shortName_);
      if (other.Unit.Length != 0) {
        Unit = other.Unit;
      }
      if (other.unitId_ != null) {
        if (unitId_ == null) {
          UnitId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
        }
        UnitId.MergeFrom(other.UnitId);
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.DataType != 0) {
        DataType = other.DataType;
      }
      definition_.Add(other.definition_);
      if (other.ValueFormat.Length != 0) {
        ValueFormat = other.ValueFormat;
      }
      if (other.valueList_ != null) {
        if (valueList_ == null) {
          ValueList = new global::FSR.GRPC.Lib.V3.ValueListDTO();
        }
        ValueList.MergeFrom(other.ValueList);
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.levelType_ != null) {
        if (levelType_ == null) {
          LevelType = new global::FSR.GRPC.Lib.V3.LevelTypeDTO();
        }
        LevelType.MergeFrom(other.LevelType);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            preferredName_.AddEntriesFrom(input, _repeated_preferredName_codec);
            break;
          }
          case 18: {
            shortName_.AddEntriesFrom(input, _repeated_shortName_codec);
            break;
          }
          case 26: {
            Unit = input.ReadString();
            break;
          }
          case 34: {
            if (unitId_ == null) {
              UnitId = new global::FSR.GRPC.Lib.V3.ReferenceDTO();
            }
            input.ReadMessage(UnitId);
            break;
          }
          case 42: {
            Symbol = input.ReadString();
            break;
          }
          case 48: {
            DataType = (global::FSR.GRPC.Lib.V3.DataTypeIec61360) input.ReadEnum();
            break;
          }
          case 58: {
            definition_.AddEntriesFrom(input, _repeated_definition_codec);
            break;
          }
          case 66: {
            ValueFormat = input.ReadString();
            break;
          }
          case 74: {
            if (valueList_ == null) {
              ValueList = new global::FSR.GRPC.Lib.V3.ValueListDTO();
            }
            input.ReadMessage(ValueList);
            break;
          }
          case 82: {
            Value = input.ReadString();
            break;
          }
          case 90: {
            if (levelType_ == null) {
              LevelType = new global::FSR.GRPC.Lib.V3.LevelTypeDTO();
            }
            input.ReadMessage(LevelType);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
