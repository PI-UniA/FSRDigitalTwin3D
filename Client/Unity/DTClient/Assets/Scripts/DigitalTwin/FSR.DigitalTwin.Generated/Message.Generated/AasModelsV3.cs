// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/AasModels.V3.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace FSR.GRPC.V3 {

  /// <summary>Holder for reflection information generated from Protos/AasModels.V3.proto</summary>
  public static partial class AasModelsV3Reflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/AasModels.V3.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AasModelsV3Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQcm90b3MvQWFzTW9kZWxzLlYzLnByb3RvEgtGU1IuR1JQQy5WMyL7AQoO",
            "RXh0ZW5zaW9uTW9kZWwSLwoKc2VtYW50aWNJZBgBIAEoCzIbLkZTUi5HUlBD",
            "LlYzLlJlZmVyZW5jZU1vZGVsEjwKF3N1cHBsZW1lbnRhbFNlbWFudGljSWRz",
            "GAIgAygLMhsuRlNSLkdSUEMuVjMuUmVmZXJlbmNlTW9kZWwSDAoEbmFtZRgD",
            "IAEoCRIuCgl2YWx1ZVR5cGUYBCABKA4yGy5GU1IuR1JQQy5WMy5EYXRhVHlw",
            "ZURlZlhzZBINCgV2YWx1ZRgFIAEoCRItCghyZWZlcnNUbxgGIAMoCzIbLkZT",
            "Ui5HUlBDLlYzLlJlZmVyZW5jZU1vZGVsItYBCh5BZG1pbmlzdHJhdGl2ZUlu",
            "Zm9ybWF0aW9uTW9kZWwSTwoaZW1iZWRkZWREYXRhU3BlY2lmaWNhdGlvbnMY",
            "ASADKAsyKy5GU1IuR1JQQy5WMy5FbWJlZGRlZERhdGFTcGVjaWZpY2F0aW9u",
            "TW9kZWwSDwoHdmVyc2lvbhgCIAEoCRIQCghyZXZpc2lvbhgDIAEoCRIsCgdj",
            "cmVhdG9yGAQgASgLMhsuRlNSLkdSUEMuVjMuUmVmZXJlbmNlTW9kZWwSEgoK",
            "dGVtcGxhdGVJZBgFIAEoCSKkAgoOUXVhbGlmaWVyTW9kZWwSLwoKc2VtYW50",
            "aWNJZBgBIAEoCzIbLkZTUi5HUlBDLlYzLlJlZmVyZW5jZU1vZGVsEjwKF3N1",
            "cHBsZW1lbnRhbFNlbWFudGljSWRzGAIgAygLMhsuRlNSLkdSUEMuVjMuUmVm",
            "ZXJlbmNlTW9kZWwSKAoEa2luZBgDIAEoDjIaLkZTUi5HUlBDLlYzLlF1YWxp",
            "ZmllcktpbmQSDAoEdHlwZRgEIAEoCRIuCgl2YWx1ZVR5cGUYBSABKA4yGy5G",
            "U1IuR1JQQy5WMy5EYXRhVHlwZURlZlhzZBINCgV2YWx1ZRgGIAEoCRIsCgd2",
            "YWx1ZUlkGAcgASgLMhsuRlNSLkdSUEMuVjMuUmVmZXJlbmNlTW9kZWwimwQK",
            "HUFzc2V0QWRtaW5pc3RyYXRpb25TaGVsbE1vZGVsEi8KCmV4dGVuc2lvbnMY",
            "ASADKAsyGy5GU1IuR1JQQy5WMy5FeHRlbnNpb25Nb2RlbBIQCghjYXRlZ29y",
            "eRgCIAEoCRIPCgdpZFNob3J0GAMgASgJEjEKC2Rpc3BsYXlOYW1lGAQgAygL",
            "MhwuRlNSLkdSUEMuVjMuTGFuZ1N0cmluZ01vZGVsEjEKC2Rlc2NyaXB0aW9u",
            "GAUgAygLMhwuRlNSLkdSUEMuVjMuTGFuZ1N0cmluZ01vZGVsEkMKDmFkbWlu",
            "aXN0cmF0aW9uGAYgASgLMisuRlNSLkdSUEMuVjMuQWRtaW5pc3RyYXRpdmVJ",
            "bmZvcm1hdGlvbk1vZGVsEgoKAmlkGAcgASgJEk8KGmVtYmVkZGVkRGF0YVNw",
            "ZWNpZmljYXRpb25zGAggAygLMisuRlNSLkdSUEMuVjMuRW1iZWRkZWREYXRh",
            "U3BlY2lmaWNhdGlvbk1vZGVsEjAKC2Rlcml2ZWRGcm9tGAkgASgLMhsuRlNS",
            "LkdSUEMuVjMuUmVmZXJlbmNlTW9kZWwSPAoQYXNzZXRJbmZvcm1hdGlvbhgK",
            "IAEoCzIiLkZTUi5HUlBDLlYzLkFzc2V0SW5mb3JtYXRpb25Nb2RlbBIuCglz",
            "dWJtb2RlbHMYCyADKAsyGy5GU1IuR1JQQy5WMy5SZWZlcmVuY2VNb2RlbCLf",
            "AQoVQXNzZXRJbmZvcm1hdGlvbk1vZGVsEikKCWFzc2V0S2luZBgBIAEoDjIW",
            "LkZTUi5HUlBDLlYzLkFzc2V0S2luZBIVCg1nbG9iYWxBc3NldElkGAIgASgJ",
            "EjsKEHNwZWNpZmljQXNzZXRJZHMYAyADKAsyIS5GU1IuR1JQQy5WMy5TcGVj",
            "aWZpY0Fzc2V0SWRNb2RlbBIRCglhc3NldFR5cGUYBCABKAkSNAoQZGVmYXVs",
            "dFRodW1ibmFpbBgFIAEoCzIaLkZTUi5HUlBDLlYzLlJlc291cmNlTW9kZWwi",
            "MgoNUmVzb3VyY2VNb2RlbBIMCgRQYXRoGAEgASgJEhMKC0NvbnRlbnRUeXBl",
            "GAIgASgJItoBChRTcGVjaWZpY0Fzc2V0SWRNb2RlbBIvCgpzZW1hbnRpY0lk",
            "GAEgASgLMhsuRlNSLkdSUEMuVjMuUmVmZXJlbmNlTW9kZWwSPAoXc3VwcGxl",
            "bWVudGFsU2VtYW50aWNJZHMYAiADKAsyGy5GU1IuR1JQQy5WMy5SZWZlcmVu",
            "Y2VNb2RlbBIMCgRuYW1lGAMgASgJEg0KBXZhbHVlGAQgASgJEjYKEWV4dGVy",
            "bmFsU3ViamVjdElkGAUgASgLMhsuRlNSLkdSUEMuVjMuUmVmZXJlbmNlTW9k",
            "ZWwi8gQKDVN1Ym1vZGVsTW9kZWwSLwoKZXh0ZW5zaW9ucxgBIAMoCzIbLkZT",
            "Ui5HUlBDLlYzLkV4dGVuc2lvbk1vZGVsEhAKCGNhdGVnb3J5GAIgASgJEg8K",
            "B2lkU2hvcnQYAyABKAkSMQoLZGlzcGxheU5hbWUYBCADKAsyHC5GU1IuR1JQ",
            "Qy5WMy5MYW5nU3RyaW5nTW9kZWwSMQoLZGVzY3JpcHRpb24YBSADKAsyHC5G",
            "U1IuR1JQQy5WMy5MYW5nU3RyaW5nTW9kZWwSQwoOYWRtaW5pc3RyYXRpb24Y",
            "BiABKAsyKy5GU1IuR1JQQy5WMy5BZG1pbmlzdHJhdGl2ZUluZm9ybWF0aW9u",
            "TW9kZWwSCgoCaWQYByABKAkSKAoEa2luZBgIIAEoDjIaLkZTUi5HUlBDLlYz",
            "Lk1vZGVsbGluZ0tpbmQSLwoKc2VtYW50aWNJZBgJIAEoCzIbLkZTUi5HUlBD",
            "LlYzLlJlZmVyZW5jZU1vZGVsEjwKF3N1cHBsZW1lbnRhbFNlbWFudGljSWRz",
            "GAogAygLMhsuRlNSLkdSUEMuVjMuUmVmZXJlbmNlTW9kZWwSLwoKcXVhbGlm",
            "aWVycxgLIAMoCzIbLkZTUi5HUlBDLlYzLlF1YWxpZmllck1vZGVsEk8KGmVt",
            "YmVkZGVkRGF0YVNwZWNpZmljYXRpb25zGAwgAygLMisuRlNSLkdSUEMuVjMu",
            "RW1iZWRkZWREYXRhU3BlY2lmaWNhdGlvbk1vZGVsEjsKEHN1Ym1vZGVsRWxl",
            "bWVudHMYDSADKAsyIS5GU1IuR1JQQy5WMy5TdWJtb2RlbEVsZW1lbnRNb2Rl",
            "bCLsCgoUU3VibW9kZWxFbGVtZW50TW9kZWwSLwoKZXh0ZW5zaW9ucxgBIAMo",
            "CzIbLkZTUi5HUlBDLlYzLkV4dGVuc2lvbk1vZGVsEhAKCGNhdGVnb3J5GAIg",
            "ASgJEg8KB2lkU2hvcnQYAyABKAkSMQoLZGlzcGxheU5hbWUYBCADKAsyHC5G",
            "U1IuR1JQQy5WMy5MYW5nU3RyaW5nTW9kZWwSMQoLZGVzY3JpcHRpb24YBSAD",
            "KAsyHC5GU1IuR1JQQy5WMy5MYW5nU3RyaW5nTW9kZWwSLwoKc2VtYW50aWNJ",
            "ZBgGIAEoCzIbLkZTUi5HUlBDLlYzLlJlZmVyZW5jZU1vZGVsEjwKF3N1cHBs",
            "ZW1lbnRhbFNlbWFudGljSWRzGAcgAygLMhsuRlNSLkdSUEMuVjMuUmVmZXJl",
            "bmNlTW9kZWwSLwoKcXVhbGlmaWVycxgIIAMoCzIbLkZTUi5HUlBDLlYzLlF1",
            "YWxpZmllck1vZGVsEk8KGmVtYmVkZGVkRGF0YVNwZWNpZmljYXRpb25zGAkg",
            "AygLMisuRlNSLkdSUEMuVjMuRW1iZWRkZWREYXRhU3BlY2lmaWNhdGlvbk1v",
            "ZGVsEj0KE3N1Ym1vZGVsRWxlbWVudFR5cGUYCiABKA4yIC5GU1IuR1JQQy5W",
            "My5TdWJtb2RlbEVsZW1lbnRUeXBlElIKHGFubm90YXRlZFJlbGF0aW9uc2hp",
            "cEVsZW1lbnQYCyABKAsyLC5GU1IuR1JQQy5WMy5Bbm5vdGF0ZWRSZWxhdGlv",
            "bnNoaXBFbGVtZW50RFRPEjwKEWJhc2ljRXZlbnRFbGVtZW50GAwgASgLMiEu",
            "RlNSLkdSUEMuVjMuQmFzaWNFdmVudEVsZW1lbnREVE8SIgoEYmxvYhgNIAEo",
            "CzIULkZTUi5HUlBDLlYzLkJsb2JEVE8SLgoKY2FwYWJpbGl0eRgOIAEoCzIa",
            "LkZTUi5HUlBDLlYzLkNhcGFiaWxpdHlEVE8SMAoLZGF0YUVsZW1lbnQYDyAB",
            "KAsyGy5GU1IuR1JQQy5WMy5EYXRhRWxlbWVudERUTxImCgZlbnRpdHkYECAB",
            "KAsyFi5GU1IuR1JQQy5WMy5FbnRpdHlEVE8SMgoMZXZlbnRFbGVtZW50GBEg",
            "ASgLMhwuRlNSLkdSUEMuVjMuRXZlbnRFbGVtZW50RFRPEiIKBGZpbGUYEiAB",
            "KAsyFC5GU1IuR1JQQy5WMy5GaWxlRFRPEkQKFW11bHRpTGFuZ3VhZ2VQcm9w",
            "ZXJ0eRgTIAEoCzIlLkZTUi5HUlBDLlYzLk11bHRpTGFuZ3VhZ2VQcm9wZXJ0",
            "eURUTxIsCglvcGVyYXRpb24YFCABKAsyGS5GU1IuR1JQQy5WMy5PcGVyYXRp",
            "b25EVE8SKgoIcHJvcGVydHkYFSABKAsyGC5GU1IuR1JQQy5WMy5Qcm9wZXJ0",
            "eURUTxIkCgVyYW5nZRgWIAEoCzIVLkZTUi5HUlBDLlYzLlJhbmdlRFRPEjoK",
            "EHJlZmVyZW5jZUVsZW1lbnQYFyABKAsyIC5GU1IuR1JQQy5WMy5SZWZlcmVu",
            "Y2VFbGVtZW50RFRPEkAKE3JlbGF0aW9uc2hpcEVsZW1lbnQYGCABKAsyIy5G",
            "U1IuR1JQQy5WMy5SZWxhdGlvbnNoaXBFbGVtZW50RFRPEkAKE3N1Ym1vZGVs",
            "RWxlbWVudExpc3QYGSABKAsyIy5GU1IuR1JQQy5WMy5TdWJtb2RlbEVsZW1l",
            "bnRMaXN0RFRPEkwKGXN1Ym1vZGVsRWxlbWVudENvbGxlY3Rpb24YGiABKAsy",
            "KS5GU1IuR1JQQy5WMy5TdWJtb2RlbEVsZW1lbnRDb2xsZWN0aW9uRFRPInEK",
            "FlJlbGF0aW9uc2hpcEVsZW1lbnREVE8SKgoFZmlyc3QYASABKAsyGy5GU1Iu",
            "R1JQQy5WMy5SZWZlcmVuY2VNb2RlbBIrCgZzZWNvbmQYAiABKAsyGy5GU1Iu",
            "R1JQQy5WMy5SZWZlcmVuY2VNb2RlbCKYAgoWU3VibW9kZWxFbGVtZW50TGlz",
            "dERUTxIVCg1vcmRlclJlbGV2YW50GAEgASgIEjoKFXNlbWFudGljSWRMaXN0",
            "RWxlbWVudBgCIAEoCzIbLkZTUi5HUlBDLlYzLlJlZmVyZW5jZU1vZGVsEj4K",
            "FHR5cGVWYWx1ZUxpc3RFbGVtZW50GAMgASgOMiAuRlNSLkdSUEMuVjMuU3Vi",
            "bW9kZWxFbGVtZW50VHlwZRI5ChR2YWx1ZVR5cGVMaXN0RWxlbWVudBgEIAEo",
            "DjIbLkZTUi5HUlBDLlYzLkRhdGFUeXBlRGVmWHNkEjAKBXZhbHVlGAUgAygL",
            "MiEuRlNSLkdSUEMuVjMuU3VibW9kZWxFbGVtZW50TW9kZWwiUAocU3VibW9k",
            "ZWxFbGVtZW50Q29sbGVjdGlvbkRUTxIwCgV2YWx1ZRgBIAMoCzIhLkZTUi5H",
            "UlBDLlYzLlN1Ym1vZGVsRWxlbWVudE1vZGVsIhAKDkRhdGFFbGVtZW50RFRP",
            "IpgGChBEYXRhRWxlbWVudE1vZGVsEi8KCmV4dGVuc2lvbnMYASADKAsyGy5G",
            "U1IuR1JQQy5WMy5FeHRlbnNpb25Nb2RlbBIQCghjYXRlZ29yeRgCIAEoCRIP",
            "CgdpZFNob3J0GAMgASgJEjEKC2Rpc3BsYXlOYW1lGAQgAygLMhwuRlNSLkdS",
            "UEMuVjMuTGFuZ1N0cmluZ01vZGVsEjEKC2Rlc2NyaXB0aW9uGAUgAygLMhwu",
            "RlNSLkdSUEMuVjMuTGFuZ1N0cmluZ01vZGVsEi8KCnNlbWFudGljSWQYBiAB",
            "KAsyGy5GU1IuR1JQQy5WMy5SZWZlcmVuY2VNb2RlbBI8ChdzdXBwbGVtZW50",
            "YWxTZW1hbnRpY0lkcxgHIAMoCzIbLkZTUi5HUlBDLlYzLlJlZmVyZW5jZU1v",
            "ZGVsEi8KCnF1YWxpZmllcnMYCCADKAsyGy5GU1IuR1JQQy5WMy5RdWFsaWZp",
            "ZXJNb2RlbBJPChplbWJlZGRlZERhdGFTcGVjaWZpY2F0aW9ucxgJIAMoCzIr",
            "LkZTUi5HUlBDLlYzLkVtYmVkZGVkRGF0YVNwZWNpZmljYXRpb25Nb2RlbBI9",
            "ChNzdWJtb2RlbEVsZW1lbnRUeXBlGAogASgOMiAuRlNSLkdSUEMuVjMuU3Vi",
            "bW9kZWxFbGVtZW50VHlwZRIqCghwcm9wZXJ0eRgLIAEoCzIYLkZTUi5HUlBD",
            "LlYzLlByb3BlcnR5RFRPEkQKFW11bHRpTGFuZ3VhZ2VQcm9wZXJ0eRgMIAEo",
            "CzIlLkZTUi5HUlBDLlYzLk11bHRpTGFuZ3VhZ2VQcm9wZXJ0eURUTxIkCgVy",
            "YW5nZRgNIAEoCzIVLkZTUi5HUlBDLlYzLlJhbmdlRFRPEjoKEHJlZmVyZW5j",
            "ZUVsZW1lbnQYDiABKAsyIC5GU1IuR1JQQy5WMy5SZWZlcmVuY2VFbGVtZW50",
            "RFRPEiIKBGJsb2IYDyABKAsyFC5GU1IuR1JQQy5WMy5CbG9iRFRPEiIKBGZp",
            "bGUYECABKAsyFC5GU1IuR1JQQy5WMy5GaWxlRFRPInoKC1Byb3BlcnR5RFRP",
            "Ei4KCXZhbHVlVHlwZRgBIAEoDjIbLkZTUi5HUlBDLlYzLkRhdGFUeXBlRGVm",
            "WHNkEg0KBXZhbHVlGAIgASgJEiwKB3ZhbHVlSWQYAyABKAsyGy5GU1IuR1JQ",
            "Qy5WMy5SZWZlcmVuY2VNb2RlbCJ1ChhNdWx0aUxhbmd1YWdlUHJvcGVydHlE",
            "VE8SKwoFdmFsdWUYASADKAsyHC5GU1IuR1JQQy5WMy5MYW5nU3RyaW5nTW9k",
            "ZWwSLAoHdmFsdWVJZBgCIAEoCzIbLkZTUi5HUlBDLlYzLlJlZmVyZW5jZU1v",
            "ZGVsIlQKCFJhbmdlRFRPEi4KCXZhbHVlVHlwZRgBIAEoDjIbLkZTUi5HUlBD",
            "LlYzLkRhdGFUeXBlRGVmWHNkEgsKA21pbhgCIAEoCRILCgNtYXgYAyABKAki",
            "QQoTUmVmZXJlbmNlRWxlbWVudERUTxIqCgV2YWx1ZRgBIAEoCzIbLkZTUi5H",
            "UlBDLlYzLlJlZmVyZW5jZU1vZGVsIi0KB0Jsb2JEVE8SDQoFdmFsdWUYASAB",
            "KAwSEwoLY29udGVudFR5cGUYAiABKAkiLQoHRmlsZURUTxINCgV2YWx1ZRgB",
            "IAEoCRITCgtjb250ZW50VHlwZRgCIAEoCSKuAQofQW5ub3RhdGVkUmVsYXRp",
            "b25zaGlwRWxlbWVudERUTxIqCgVmaXJzdBgBIAEoCzIbLkZTUi5HUlBDLlYz",
            "LlJlZmVyZW5jZU1vZGVsEisKBnNlY29uZBgCIAEoCzIbLkZTUi5HUlBDLlYz",
            "LlJlZmVyZW5jZU1vZGVsEjIKC2Fubm90YXRpb25zGAMgAygLMh0uRlNSLkdS",
            "UEMuVjMuRGF0YUVsZW1lbnRNb2RlbCLDAQoJRW50aXR5RFRPEjUKCnN0YXRl",
            "bWVudHMYASADKAsyIS5GU1IuR1JQQy5WMy5TdWJtb2RlbEVsZW1lbnRNb2Rl",
            "bBIrCgplbnRpdHlUeXBlGAIgASgOMhcuRlNSLkdSUEMuVjMuRW50aXR5VHlw",
            "ZRIVCg1nbG9iYWxBc3NldElkGAMgASgJEjsKEHNwZWNpZmljQXNzZXRJZHMY",
            "BCADKAsyIS5GU1IuR1JQQy5WMy5TcGVjaWZpY0Fzc2V0SWRNb2RlbCLPAgoR",
            "RXZlbnRQYXlsb2FkTW9kZWwSKwoGc291cmNlGAEgASgLMhsuRlNSLkdSUEMu",
            "VjMuUmVmZXJlbmNlTW9kZWwSNQoQc291cmNlU2VtYW50aWNJZBgCIAEoCzIb",
            "LkZTUi5HUlBDLlYzLlJlZmVyZW5jZU1vZGVsEjgKE29ic2VydmFibGVSZWZl",
            "cmVuY2UYAyABKAsyGy5GU1IuR1JQQy5WMy5SZWZlcmVuY2VNb2RlbBI5ChRv",
            "YnNlcnZhYmxlU2VtYW50aWNJZBgEIAEoCzIbLkZTUi5HUlBDLlYzLlJlZmVy",
            "ZW5jZU1vZGVsEg0KBXRvcGljGAUgASgJEi4KCXN1YmplY3RJZBgGIAEoCzIb",
            "LkZTUi5HUlBDLlYzLlJlZmVyZW5jZU1vZGVsEhEKCXRpbWVzdGFtcBgHIAEo",
            "CRIPCgdwYXlsb2FkGAggASgMIhEKD0V2ZW50RWxlbWVudERUTyKiAgoUQmFz",
            "aWNFdmVudEVsZW1lbnREVE8SLQoIb2JzZXJ2ZWQYASABKAsyGy5GU1IuR1JQ",
            "Qy5WMy5SZWZlcmVuY2VNb2RlbBIpCglkaXJlY3Rpb24YAiABKA4yFi5GU1Iu",
            "R1JQQy5WMy5EaXJlY3Rpb24SKAoFc3RhdGUYAyABKA4yGS5GU1IuR1JQQy5W",
            "My5TdGF0ZU9mRXZlbnQSFAoMbWVzc2FnZVRvcGljGAQgASgJEjIKDW1lc3Nh",
            "Z2VCcm9rZXIYBSABKAsyGy5GU1IuR1JQQy5WMy5SZWZlcmVuY2VNb2RlbBIS",
            "CgpsYXN0VXBkYXRlGAYgASgJEhMKC21pbkludGVydmFsGAcgASgJEhMKC21h",
            "eEludGVydmFsGAggASgJIsYBCgxPcGVyYXRpb25EVE8SOwoOaW5wdXRWYXJp",
            "YWJsZXMYASADKAsyIy5GU1IuR1JQQy5WMy5PcGVyYXRpb25WYXJpYWJsZU1v",
            "ZGVsEjwKD291dHB1dFZhcmlhYmxlcxgCIAMoCzIjLkZTUi5HUlBDLlYzLk9w",
            "ZXJhdGlvblZhcmlhYmxlTW9kZWwSOwoOaW5vdXRWYXJpYWJsZXMYAyADKAsy",
            "Iy5GU1IuR1JQQy5WMy5PcGVyYXRpb25WYXJpYWJsZU1vZGVsIkoKFk9wZXJh",
            "dGlvblZhcmlhYmxlTW9kZWwSMAoFdmFsdWUYASABKAsyIS5GU1IuR1JQQy5W",
            "My5TdWJtb2RlbEVsZW1lbnRNb2RlbCIPCg1DYXBhYmlsaXR5RFRPIqQDChdD",
            "b25jZXB0RGVzY3JpcHRpb25Nb2RlbBIvCgpleHRlbnNpb25zGAEgAygLMhsu",
            "RlNSLkdSUEMuVjMuRXh0ZW5zaW9uTW9kZWwSEAoIY2F0ZWdvcnkYAiABKAkS",
            "DwoHaWRTaG9ydBgDIAEoCRIxCgtkaXNwbGF5TmFtZRgEIAMoCzIcLkZTUi5H",
            "UlBDLlYzLkxhbmdTdHJpbmdNb2RlbBIxCgtkZXNjcmlwdGlvbhgFIAMoCzIc",
            "LkZTUi5HUlBDLlYzLkxhbmdTdHJpbmdNb2RlbBJDCg5hZG1pbmlzdHJhdGlv",
            "bhgGIAEoCzIrLkZTUi5HUlBDLlYzLkFkbWluaXN0cmF0aXZlSW5mb3JtYXRp",
            "b25Nb2RlbBIKCgJpZBgHIAEoCRJPChplbWJlZGRlZERhdGFTcGVjaWZpY2F0",
            "aW9ucxgIIAMoCzIrLkZTUi5HUlBDLlYzLkVtYmVkZGVkRGF0YVNwZWNpZmlj",
            "YXRpb25Nb2RlbBItCghpc0Nhc2VPZhgJIAMoCzIbLkZTUi5HUlBDLlYzLlJl",
            "ZmVyZW5jZU1vZGVsIpkBCg5SZWZlcmVuY2VNb2RlbBIpCgR0eXBlGAEgASgO",
            "MhsuRlNSLkdSUEMuVjMuUmVmZXJlbmNlVHlwZXMSNwoSUmVmZXJyZWRTZW1h",
            "bnRpY0lkGAIgASgLMhsuRlNSLkdSUEMuVjMuUmVmZXJlbmNlTW9kZWwSIwoE",
            "a2V5cxgDIAMoCzIVLkZTUi5HUlBDLlYzLktleU1vZGVsIj4KCEtleU1vZGVs",
            "EiMKBHR5cGUYASABKA4yFS5GU1IuR1JQQy5WMy5LZXlUeXBlcxINCgVWYWx1",
            "ZRgCIAEoCSIxCg9MYW5nU3RyaW5nTW9kZWwSEAoIbGFuZ3VhZ2UYASABKAkS",
            "DAoEdGV4dBgCIAEoCSKmAQoeRW1iZWRkZWREYXRhU3BlY2lmaWNhdGlvbk1v",
            "ZGVsEjYKEWRhdGFTcGVjaWZpY2F0aW9uGAEgASgLMhsuRlNSLkdSUEMuVjMu",
            "UmVmZXJlbmNlTW9kZWwSTAoYZGF0YVNwZWNpZmljYXRpb25Db250ZW50GAIg",
            "ASgLMiouRlNSLkdSUEMuVjMuRGF0YVNwZWNpZmljYXRpb25Db250ZW50TW9k",
            "ZWwiRAoOTGV2ZWxUeXBlTW9kZWwSCwoDbWluGAEgASgIEgsKA25vbRgCIAEo",
            "CBILCgN0eXAYAyABKAgSCwoDbWF4GAQgASgIIlYKF1ZhbHVlUmVmZXJlbmNl",
            "UGFpck1vZGVsEg0KBXZhbHVlGAEgASgJEiwKB3ZhbHVlSWQYAiABKAsyGy5G",
            "U1IuR1JQQy5WMy5SZWZlcmVuY2VNb2RlbCJTCg5WYWx1ZUxpc3RNb2RlbBJB",
            "ChN2YWx1ZVJlZmVyZW5jZVBhaXJzGAEgAygLMiQuRlNSLkdSUEMuVjMuVmFs",
            "dWVSZWZlcmVuY2VQYWlyTW9kZWwitwMKHURhdGFTcGVjaWZpY2F0aW9uQ29u",
            "dGVudE1vZGVsEjMKDXByZWZlcnJlZE5hbWUYASADKAsyHC5GU1IuR1JQQy5W",
            "My5MYW5nU3RyaW5nTW9kZWwSLwoJc2hvcnROYW1lGAIgAygLMhwuRlNSLkdS",
            "UEMuVjMuTGFuZ1N0cmluZ01vZGVsEgwKBHVuaXQYAyABKAkSKwoGdW5pdElk",
            "GAQgASgLMhsuRlNSLkdSUEMuVjMuUmVmZXJlbmNlTW9kZWwSDgoGc3ltYm9s",
            "GAUgASgJEi8KCGRhdGFUeXBlGAYgASgOMh0uRlNSLkdSUEMuVjMuRGF0YVR5",
            "cGVJZWM2MTM2MBIwCgpkZWZpbml0aW9uGAcgAygLMhwuRlNSLkdSUEMuVjMu",
            "TGFuZ1N0cmluZ01vZGVsEhMKC3ZhbHVlRm9ybWF0GAggASgJEi4KCXZhbHVl",
            "TGlzdBgJIAEoCzIbLkZTUi5HUlBDLlYzLlZhbHVlTGlzdE1vZGVsEg0KBXZh",
            "bHVlGAogASgJEi4KCWxldmVsVHlwZRgLIAEoCzIbLkZTUi5HUlBDLlYzLkxl",
            "dmVsVHlwZU1vZGVsKkkKDU1vZGVsbGluZ0tpbmQSGwoXTU9ERUxMSU5HX0tJ",
            "TkRfVEVNUExBVEUQABIbChdNT0RFTExJTkdfS0lORF9JTlNUQU5DRRABKoAB",
            "Cg1RdWFsaWZpZXJLaW5kEiIKHlFVQUxJRklFUl9LSU5EX1ZBTFVFX1FVQUxJ",
            "RklFUhAAEiQKIFFVQUxJRklFUl9LSU5EX0NPTkNFUFRfUVVBTElGSUVSEAES",
            "JQohUVVBTElGSUVSX0tJTkRfVEVNUExBVEVfUVVBTElGSUVSEAIqWAoJQXNz",
            "ZXRLaW5kEhMKD0FTU0VUX0tJTkRfVFlQRRAAEhcKE0FTU0VUX0tJTkRfSU5T",
            "VEFOQ0UQARIdChlBU1NFVF9LSU5EX05PVF9BUFBMSUNBQkxFEAIq5QUKE1N1",
            "Ym1vZGVsRWxlbWVudFR5cGUSOAo0U1VCTU9ERUxfRUxFTUVOVF9UWVBFX0FO",
            "Tk9UQVRFRF9SRUxBVElPTlNISVBfRUxFTUVOVBAAEi0KKVNVQk1PREVMX0VM",
            "RU1FTlRfVFlQRV9CQVNJQ19FVkVOVF9FTEVNRU5UEAESHgoaU1VCTU9ERUxf",
            "RUxFTUVOVF9UWVBFX0JMT0IQAhIkCiBTVUJNT0RFTF9FTEVNRU5UX1RZUEVf",
            "Q0FQQUJJTElUWRADEiYKIlNVQk1PREVMX0VMRU1FTlRfVFlQRV9EQVRBX0VM",
            "RU1FTlQQBBIgChxTVUJNT0RFTF9FTEVNRU5UX1RZUEVfRU5USVRZEAUSJwoj",
            "U1VCTU9ERUxfRUxFTUVOVF9UWVBFX0VWRU5UX0VMRU1FTlQQBhIeChpTVUJN",
            "T0RFTF9FTEVNRU5UX1RZUEVfRklMRRAHEjEKLVNVQk1PREVMX0VMRU1FTlRf",
            "VFlQRV9NVUxUSV9MQU5HVUFHRV9QUk9QRVJUWRAIEiMKH1NVQk1PREVMX0VM",
            "RU1FTlRfVFlQRV9PUEVSQVRJT04QCRIiCh5TVUJNT0RFTF9FTEVNRU5UX1RZ",
            "UEVfUFJPUEVSVFkQChIfChtTVUJNT0RFTF9FTEVNRU5UX1RZUEVfUkFOR0UQ",
            "CxIrCidTVUJNT0RFTF9FTEVNRU5UX1RZUEVfUkVGRVJFTkNFX0VMRU1FTlQQ",
            "DBIuCipTVUJNT0RFTF9FTEVNRU5UX1RZUEVfUkVMQVRJT05TSElQX0VMRU1F",
            "TlQQDRIqCiZTVUJNT0RFTF9FTEVNRU5UX1RZUEVfU1VCTU9ERUxfRUxFTUVO",
            "VBAOEi8KK1NVQk1PREVMX0VMRU1FTlRfVFlQRV9TVUJNT0RFTF9FTEVNRU5U",
            "X0xJU1QQDxI1CjFTVUJNT0RFTF9FTEVNRU5UX1RZUEVfU1VCTU9ERUxfRUxF",
            "TUVOVF9DT0xMRUNUSU9OEBAqVAoKRW50aXR5VHlwZRIhCh1FTlRJVFlfVFlQ",
            "RV9DT19NQU5BR0VEX0VOVElUWRAAEiMKH0VOVElUWV9UWVBFX1NFTEZfTUFO",
            "QUdFRF9FTlRJVFkQASo2CglEaXJlY3Rpb24SEwoPRElSRUNUSU9OX0lOUFVU",
            "EAASFAoQRElSRUNUSU9OX09VVFBVVBABKj0KDFN0YXRlT2ZFdmVudBIVChFT",
            "VEFURV9PRl9FVkVOVF9PThAAEhYKElNUQVRFX09GX0VWRU5UX09GRhABKlsK",
            "DlJlZmVyZW5jZVR5cGVzEiUKIVJFRkVSRU5DRV9UWVBFX0VYVEVSTkFMX1JF",
            "RkVSRU5DRRAAEiIKHlJFRkVSRU5DRV9UWVBFX01PREVMX1JFRkVSRU5DRRAB",
            "KuoFCghLZXlUeXBlcxIsCihLRVlfVFlQRVNfQU5OT1RBVEVEX1JFTEFUSU9O",
            "U0hJUF9FTEVNRU5UEAASKAokS0VZX1RZUEVTX0FTU0VUX0FETUlOSVNUUkFU",
            "SU9OX1NIRUxMEAESIQodS0VZX1RZUEVTX0JBU0lDX0VWRU5UX0VMRU1FTlQQ",
            "AhISCg5LRVlfVFlQRVNfQkxPQhADEhgKFEtFWV9UWVBFU19DQVBBQklMSVRZ",
            "EAQSIQodS0VZX1RZUEVTX0NPTkNFUFRfREVTQ1JJUFRJT04QBRIaChZLRVlf",
            "VFlQRVNfREFUQV9FTEVNRU5UEAYSFAoQS0VZX1RZUEVTX0VOVElUWRAHEhsK",
            "F0tFWV9UWVBFU19FVkVOVF9FTEVNRU5UEAgSEgoOS0VZX1RZUEVTX0ZJTEUQ",
            "CRIgChxLRVlfVFlQRVNfRlJBR01FTlRfUkVGRVJFTkNFEAoSHgoaS0VZX1RZ",
            "UEVTX0dMT0JBTF9SRUZFUkVOQ0UQCxIaChZLRVlfVFlQRVNfSURFTlRJRklB",
            "QkxFEAwSJQohS0VZX1RZUEVTX01VTFRJX0xBTkdVQUdFX1BST1BFUlRZEA0S",
            "FwoTS0VZX1RZUEVTX09QRVJBVElPThAOEhYKEktFWV9UWVBFU19QUk9QRVJU",
            "WRAPEhMKD0tFWV9UWVBFU19SQU5HRRAQEhcKE0tFWV9UWVBFU19SRUZFUkFC",
            "TEUQERIfChtLRVlfVFlQRVNfUkVGRVJFTkNFX0VMRU1FTlQQEhIiCh5LRVlf",
            "VFlQRVNfUkVMQVRJT05TSElQX0VMRU1FTlQQExIWChJLRVlfVFlQRVNfU1VC",
            "TU9ERUwQFBIeChpLRVlfVFlQRVNfU1VCTU9ERUxfRUxFTUVOVBAVEikKJUtF",
            "WV9UWVBFU19TVUJNT0RFTF9FTEVNRU5UX0NPTExFQ1RJT04QFhIjCh9LRVlf",
            "VFlQRVNfU1VCTU9ERUxfRUxFTUVOVF9MSVNUEBcq8gcKDkRhdGFUeXBlRGVm",
            "WHNkEh0KGURBVEFfVFlQRV9ERUZfWFNEX0FOWV9VUkkQABIjCh9EQVRBX1RZ",
            "UEVfREVGX1hTRF9CQVNFNjRfQklOQVJZEAESHQoZREFUQV9UWVBFX0RFRl9Y",
            "U0RfQk9PTEVBThACEhoKFkRBVEFfVFlQRV9ERUZfWFNEX0JZVEUQAxIaChZE",
            "QVRBX1RZUEVfREVGX1hTRF9EQVRFEAQSHwobREFUQV9UWVBFX0RFRl9YU0Rf",
            "REFURV9USU1FEAUSHQoZREFUQV9UWVBFX0RFRl9YU0RfREVDSU1BTBAGEhwK",
            "GERBVEFfVFlQRV9ERUZfWFNEX0RPVUJMRRAHEh4KGkRBVEFfVFlQRV9ERUZf",
            "WFNEX0RVUkFUSU9OEAgSGwoXREFUQV9UWVBFX0RFRl9YU0RfRkxPQVQQCRIb",
            "ChdEQVRBX1RZUEVfREVGX1hTRF9HX0RBWRAKEh0KGURBVEFfVFlQRV9ERUZf",
            "WFNEX0dfTU9OVEgQCxIhCh1EQVRBX1RZUEVfREVGX1hTRF9HX01PTlRIX0RB",
            "WRAMEhwKGERBVEFfVFlQRV9ERUZfWFNEX0dfWUVBUhANEiIKHkRBVEFfVFlQ",
            "RV9ERUZfWFNEX0dfWUVBUl9NT05USBAOEiAKHERBVEFfVFlQRV9ERUZfWFNE",
            "X0hFWF9CSU5BUlkQDxIZChVEQVRBX1RZUEVfREVGX1hTRF9JTlQQEBIdChlE",
            "QVRBX1RZUEVfREVGX1hTRF9JTlRFR0VSEBESGgoWREFUQV9UWVBFX0RFRl9Y",
            "U0RfTE9ORxASEiYKIkRBVEFfVFlQRV9ERUZfWFNEX05FR0FUSVZFX0lOVEVH",
            "RVIQExIqCiZEQVRBX1RZUEVfREVGX1hTRF9OT05fTkVHQVRJVkVfSU5URUdF",
            "UhAUEioKJkRBVEFfVFlQRV9ERUZfWFNEX05PTl9QT1NJVElWRV9JTlRFR0VS",
            "EBUSJgoiREFUQV9UWVBFX0RFRl9YU0RfUE9TSVRJVkVfSU5URUdFUhAWEhsK",
            "F0RBVEFfVFlQRV9ERUZfWFNEX1NIT1JUEBcSHAoYREFUQV9UWVBFX0RFRl9Y",
            "U0RfU1RSSU5HEBgSGgoWREFUQV9UWVBFX0RFRl9YU0RfVElNRRAZEiMKH0RB",
            "VEFfVFlQRV9ERUZfWFNEX1VOU0lHTkVEX0JZVEUQGhIiCh5EQVRBX1RZUEVf",
            "REVGX1hTRF9VTlNJR05FRF9JTlQQGxIjCh9EQVRBX1RZUEVfREVGX1hTRF9V",
            "TlNJR05FRF9MT05HEBwSJAogREFUQV9UWVBFX0RFRl9YU0RfVU5TSUdORURf",
            "U0hPUlQQHSqrBQoQRGF0YVR5cGVJZWM2MTM2MBIcChhEQVRBX1RZUEVfSUVD",
            "XzYxMzYwX0RBVEUQABIeChpEQVRBX1RZUEVfSUVDXzYxMzYwX1NUUklORxAB",
            "EisKJ0RBVEFfVFlQRV9JRUNfNjEzNjBfU1RSSU5HX1RSQU5TTEFUQUJMRRAC",
            "EicKI0RBVEFfVFlQRV9JRUNfNjEzNjBfSU5URUdFUl9NRUFTVVJFEAMSJQoh",
            "REFUQV9UWVBFX0lFQ182MTM2MF9JTlRFR0VSX0NPVU5UEAQSKAokREFUQV9U",
            "WVBFX0lFQ182MTM2MF9JTlRFR0VSX0NVUlJFTkNZEAUSJAogREFUQV9UWVBF",
            "X0lFQ182MTM2MF9SRUFMX01FQVNVUkUQBhIiCh5EQVRBX1RZUEVfSUVDXzYx",
            "MzYwX1JFQUxfQ09VTlQQBxIlCiFEQVRBX1RZUEVfSUVDXzYxMzYwX1JFQUxf",
            "Q1VSUkVOQ1kQCBIfChtEQVRBX1RZUEVfSUVDXzYxMzYwX0JPT0xFQU4QCRIb",
            "ChdEQVRBX1RZUEVfSUVDXzYxMzYwX0lSSRAKEhwKGERBVEFfVFlQRV9JRUNf",
            "NjEzNjBfSVJESRALEiAKHERBVEFfVFlQRV9JRUNfNjEzNjBfUkFUSU9OQUwQ",
            "DBIoCiREQVRBX1RZUEVfSUVDXzYxMzYwX1JBVElPTkFMX01FQVNVUkUQDRIc",
            "ChhEQVRBX1RZUEVfSUVDXzYxMzYwX1RJTUUQDhIhCh1EQVRBX1RZUEVfSUVD",
            "XzYxMzYwX1RJTUVTVEFNUBAPEhwKGERBVEFfVFlQRV9JRUNfNjEzNjBfRklM",
            "RRAQEhwKGERBVEFfVFlQRV9JRUNfNjEzNjBfSFRNTBAREhwKGERBVEFfVFlQ",
            "RV9JRUNfNjEzNjBfQkxPQhASQg6qAgtGU1IuR1JQQy5WM2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::FSR.GRPC.V3.ModellingKind), typeof(global::FSR.GRPC.V3.QualifierKind), typeof(global::FSR.GRPC.V3.AssetKind), typeof(global::FSR.GRPC.V3.SubmodelElementType), typeof(global::FSR.GRPC.V3.EntityType), typeof(global::FSR.GRPC.V3.Direction), typeof(global::FSR.GRPC.V3.StateOfEvent), typeof(global::FSR.GRPC.V3.ReferenceTypes), typeof(global::FSR.GRPC.V3.KeyTypes), typeof(global::FSR.GRPC.V3.DataTypeDefXsd), typeof(global::FSR.GRPC.V3.DataTypeIec61360), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.ExtensionModel), global::FSR.GRPC.V3.ExtensionModel.Parser, new[]{ "SemanticId", "SupplementalSemanticIds", "Name", "ValueType", "Value", "RefersTo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.AdministrativeInformationModel), global::FSR.GRPC.V3.AdministrativeInformationModel.Parser, new[]{ "EmbeddedDataSpecifications", "Version", "Revision", "Creator", "TemplateId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.QualifierModel), global::FSR.GRPC.V3.QualifierModel.Parser, new[]{ "SemanticId", "SupplementalSemanticIds", "Kind", "Type", "ValueType", "Value", "ValueId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.AssetAdministrationShellModel), global::FSR.GRPC.V3.AssetAdministrationShellModel.Parser, new[]{ "Extensions", "Category", "IdShort", "DisplayName", "Description", "Administration", "Id", "EmbeddedDataSpecifications", "DerivedFrom", "AssetInformation", "Submodels" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.AssetInformationModel), global::FSR.GRPC.V3.AssetInformationModel.Parser, new[]{ "AssetKind", "GlobalAssetId", "SpecificAssetIds", "AssetType", "DefaultThumbnail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.ResourceModel), global::FSR.GRPC.V3.ResourceModel.Parser, new[]{ "Path", "ContentType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.SpecificAssetIdModel), global::FSR.GRPC.V3.SpecificAssetIdModel.Parser, new[]{ "SemanticId", "SupplementalSemanticIds", "Name", "Value", "ExternalSubjectId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.SubmodelModel), global::FSR.GRPC.V3.SubmodelModel.Parser, new[]{ "Extensions", "Category", "IdShort", "DisplayName", "Description", "Administration", "Id", "Kind", "SemanticId", "SupplementalSemanticIds", "Qualifiers", "EmbeddedDataSpecifications", "SubmodelElements" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.SubmodelElementModel), global::FSR.GRPC.V3.SubmodelElementModel.Parser, new[]{ "Extensions", "Category", "IdShort", "DisplayName", "Description", "SemanticId", "SupplementalSemanticIds", "Qualifiers", "EmbeddedDataSpecifications", "SubmodelElementType", "AnnotatedRelationshipElement", "BasicEventElement", "Blob", "Capability", "DataElement", "Entity", "EventElement", "File", "MultiLanguageProperty", "Operation", "Property", "Range", "ReferenceElement", "RelationshipElement", "SubmodelElementList", "SubmodelElementCollection" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.RelationshipElementDTO), global::FSR.GRPC.V3.RelationshipElementDTO.Parser, new[]{ "First", "Second" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.SubmodelElementListDTO), global::FSR.GRPC.V3.SubmodelElementListDTO.Parser, new[]{ "OrderRelevant", "SemanticIdListElement", "TypeValueListElement", "ValueTypeListElement", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.SubmodelElementCollectionDTO), global::FSR.GRPC.V3.SubmodelElementCollectionDTO.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.DataElementDTO), global::FSR.GRPC.V3.DataElementDTO.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.DataElementModel), global::FSR.GRPC.V3.DataElementModel.Parser, new[]{ "Extensions", "Category", "IdShort", "DisplayName", "Description", "SemanticId", "SupplementalSemanticIds", "Qualifiers", "EmbeddedDataSpecifications", "SubmodelElementType", "Property", "MultiLanguageProperty", "Range", "ReferenceElement", "Blob", "File" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.PropertyDTO), global::FSR.GRPC.V3.PropertyDTO.Parser, new[]{ "ValueType", "Value", "ValueId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.MultiLanguagePropertyDTO), global::FSR.GRPC.V3.MultiLanguagePropertyDTO.Parser, new[]{ "Value", "ValueId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.RangeDTO), global::FSR.GRPC.V3.RangeDTO.Parser, new[]{ "ValueType", "Min", "Max" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.ReferenceElementDTO), global::FSR.GRPC.V3.ReferenceElementDTO.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.BlobDTO), global::FSR.GRPC.V3.BlobDTO.Parser, new[]{ "Value", "ContentType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.FileDTO), global::FSR.GRPC.V3.FileDTO.Parser, new[]{ "Value", "ContentType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.AnnotatedRelationshipElementDTO), global::FSR.GRPC.V3.AnnotatedRelationshipElementDTO.Parser, new[]{ "First", "Second", "Annotations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.EntityDTO), global::FSR.GRPC.V3.EntityDTO.Parser, new[]{ "Statements", "EntityType", "GlobalAssetId", "SpecificAssetIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.EventPayloadModel), global::FSR.GRPC.V3.EventPayloadModel.Parser, new[]{ "Source", "SourceSemanticId", "ObservableReference", "ObservableSemanticId", "Topic", "SubjectId", "Timestamp", "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.EventElementDTO), global::FSR.GRPC.V3.EventElementDTO.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.BasicEventElementDTO), global::FSR.GRPC.V3.BasicEventElementDTO.Parser, new[]{ "Observed", "Direction", "State", "MessageTopic", "MessageBroker", "LastUpdate", "MinInterval", "MaxInterval" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.OperationDTO), global::FSR.GRPC.V3.OperationDTO.Parser, new[]{ "InputVariables", "OutputVariables", "InoutVariables" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.OperationVariableModel), global::FSR.GRPC.V3.OperationVariableModel.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.CapabilityDTO), global::FSR.GRPC.V3.CapabilityDTO.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.ConceptDescriptionModel), global::FSR.GRPC.V3.ConceptDescriptionModel.Parser, new[]{ "Extensions", "Category", "IdShort", "DisplayName", "Description", "Administration", "Id", "EmbeddedDataSpecifications", "IsCaseOf" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.ReferenceModel), global::FSR.GRPC.V3.ReferenceModel.Parser, new[]{ "Type", "ReferredSemanticId", "Keys" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.KeyModel), global::FSR.GRPC.V3.KeyModel.Parser, new[]{ "Type", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.LangStringModel), global::FSR.GRPC.V3.LangStringModel.Parser, new[]{ "Language", "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.EmbeddedDataSpecificationModel), global::FSR.GRPC.V3.EmbeddedDataSpecificationModel.Parser, new[]{ "DataSpecification", "DataSpecificationContent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.LevelTypeModel), global::FSR.GRPC.V3.LevelTypeModel.Parser, new[]{ "Min", "Nom", "Typ", "Max" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.ValueReferencePairModel), global::FSR.GRPC.V3.ValueReferencePairModel.Parser, new[]{ "Value", "ValueId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.ValueListModel), global::FSR.GRPC.V3.ValueListModel.Parser, new[]{ "ValueReferencePairs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FSR.GRPC.V3.DataSpecificationContentModel), global::FSR.GRPC.V3.DataSpecificationContentModel.Parser, new[]{ "PreferredName", "ShortName", "Unit", "UnitId", "Symbol", "DataType", "Definition", "ValueFormat", "ValueList", "Value", "LevelType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ModellingKind {
    [pbr::OriginalName("MODELLING_KIND_TEMPLATE")] Template = 0,
    [pbr::OriginalName("MODELLING_KIND_INSTANCE")] Instance = 1,
  }

  public enum QualifierKind {
    [pbr::OriginalName("QUALIFIER_KIND_VALUE_QUALIFIER")] ValueQualifier = 0,
    [pbr::OriginalName("QUALIFIER_KIND_CONCEPT_QUALIFIER")] ConceptQualifier = 1,
    [pbr::OriginalName("QUALIFIER_KIND_TEMPLATE_QUALIFIER")] TemplateQualifier = 2,
  }

  public enum AssetKind {
    [pbr::OriginalName("ASSET_KIND_TYPE")] Type = 0,
    [pbr::OriginalName("ASSET_KIND_INSTANCE")] Instance = 1,
    [pbr::OriginalName("ASSET_KIND_NOT_APPLICABLE")] NotApplicable = 2,
  }

  public enum SubmodelElementType {
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_ANNOTATED_RELATIONSHIP_ELEMENT")] AnnotatedRelationshipElement = 0,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_BASIC_EVENT_ELEMENT")] BasicEventElement = 1,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_BLOB")] Blob = 2,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_CAPABILITY")] Capability = 3,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_DATA_ELEMENT")] DataElement = 4,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_ENTITY")] Entity = 5,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_EVENT_ELEMENT")] EventElement = 6,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_FILE")] File = 7,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_MULTI_LANGUAGE_PROPERTY")] MultiLanguageProperty = 8,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_OPERATION")] Operation = 9,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_PROPERTY")] Property = 10,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_RANGE")] Range = 11,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_REFERENCE_ELEMENT")] ReferenceElement = 12,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_RELATIONSHIP_ELEMENT")] RelationshipElement = 13,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_SUBMODEL_ELEMENT")] SubmodelElement = 14,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_SUBMODEL_ELEMENT_LIST")] SubmodelElementList = 15,
    [pbr::OriginalName("SUBMODEL_ELEMENT_TYPE_SUBMODEL_ELEMENT_COLLECTION")] SubmodelElementCollection = 16,
  }

  public enum EntityType {
    [pbr::OriginalName("ENTITY_TYPE_CO_MANAGED_ENTITY")] CoManagedEntity = 0,
    [pbr::OriginalName("ENTITY_TYPE_SELF_MANAGED_ENTITY")] SelfManagedEntity = 1,
  }

  public enum Direction {
    [pbr::OriginalName("DIRECTION_INPUT")] Input = 0,
    [pbr::OriginalName("DIRECTION_OUTPUT")] Output = 1,
  }

  public enum StateOfEvent {
    [pbr::OriginalName("STATE_OF_EVENT_ON")] On = 0,
    [pbr::OriginalName("STATE_OF_EVENT_OFF")] Off = 1,
  }

  public enum ReferenceTypes {
    [pbr::OriginalName("REFERENCE_TYPE_EXTERNAL_REFERENCE")] ReferenceTypeExternalReference = 0,
    [pbr::OriginalName("REFERENCE_TYPE_MODEL_REFERENCE")] ReferenceTypeModelReference = 1,
  }

  public enum KeyTypes {
    [pbr::OriginalName("KEY_TYPES_ANNOTATED_RELATIONSHIP_ELEMENT")] AnnotatedRelationshipElement = 0,
    [pbr::OriginalName("KEY_TYPES_ASSET_ADMINISTRATION_SHELL")] AssetAdministrationShell = 1,
    [pbr::OriginalName("KEY_TYPES_BASIC_EVENT_ELEMENT")] BasicEventElement = 2,
    [pbr::OriginalName("KEY_TYPES_BLOB")] Blob = 3,
    [pbr::OriginalName("KEY_TYPES_CAPABILITY")] Capability = 4,
    [pbr::OriginalName("KEY_TYPES_CONCEPT_DESCRIPTION")] ConceptDescription = 5,
    [pbr::OriginalName("KEY_TYPES_DATA_ELEMENT")] DataElement = 6,
    [pbr::OriginalName("KEY_TYPES_ENTITY")] Entity = 7,
    [pbr::OriginalName("KEY_TYPES_EVENT_ELEMENT")] EventElement = 8,
    [pbr::OriginalName("KEY_TYPES_FILE")] File = 9,
    [pbr::OriginalName("KEY_TYPES_FRAGMENT_REFERENCE")] FragmentReference = 10,
    [pbr::OriginalName("KEY_TYPES_GLOBAL_REFERENCE")] GlobalReference = 11,
    [pbr::OriginalName("KEY_TYPES_IDENTIFIABLE")] Identifiable = 12,
    [pbr::OriginalName("KEY_TYPES_MULTI_LANGUAGE_PROPERTY")] MultiLanguageProperty = 13,
    [pbr::OriginalName("KEY_TYPES_OPERATION")] Operation = 14,
    [pbr::OriginalName("KEY_TYPES_PROPERTY")] Property = 15,
    [pbr::OriginalName("KEY_TYPES_RANGE")] Range = 16,
    [pbr::OriginalName("KEY_TYPES_REFERABLE")] Referable = 17,
    [pbr::OriginalName("KEY_TYPES_REFERENCE_ELEMENT")] ReferenceElement = 18,
    [pbr::OriginalName("KEY_TYPES_RELATIONSHIP_ELEMENT")] RelationshipElement = 19,
    [pbr::OriginalName("KEY_TYPES_SUBMODEL")] Submodel = 20,
    [pbr::OriginalName("KEY_TYPES_SUBMODEL_ELEMENT")] SubmodelElement = 21,
    [pbr::OriginalName("KEY_TYPES_SUBMODEL_ELEMENT_COLLECTION")] SubmodelElementCollection = 22,
    [pbr::OriginalName("KEY_TYPES_SUBMODEL_ELEMENT_LIST")] SubmodelElementList = 23,
  }

  public enum DataTypeDefXsd {
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_ANY_URI")] AnyUri = 0,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_BASE64_BINARY")] Base64Binary = 1,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_BOOLEAN")] Boolean = 2,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_BYTE")] Byte = 3,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_DATE")] Date = 4,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_DATE_TIME")] DateTime = 5,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_DECIMAL")] Decimal = 6,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_DOUBLE")] Double = 7,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_DURATION")] Duration = 8,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_FLOAT")] Float = 9,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_G_DAY")] GDay = 10,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_G_MONTH")] GMonth = 11,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_G_MONTH_DAY")] GMonthDay = 12,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_G_YEAR")] GYear = 13,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_G_YEAR_MONTH")] GYearMonth = 14,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_HEX_BINARY")] HexBinary = 15,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_INT")] Int = 16,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_INTEGER")] Integer = 17,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_LONG")] Long = 18,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_NEGATIVE_INTEGER")] NegativeInteger = 19,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_NON_NEGATIVE_INTEGER")] NonNegativeInteger = 20,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_NON_POSITIVE_INTEGER")] NonPositiveInteger = 21,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_POSITIVE_INTEGER")] PositiveInteger = 22,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_SHORT")] Short = 23,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_STRING")] String = 24,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_TIME")] Time = 25,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_UNSIGNED_BYTE")] UnsignedByte = 26,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_UNSIGNED_INT")] UnsignedInt = 27,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_UNSIGNED_LONG")] UnsignedLong = 28,
    [pbr::OriginalName("DATA_TYPE_DEF_XSD_UNSIGNED_SHORT")] UnsignedShort = 29,
  }

  public enum DataTypeIec61360 {
    [pbr::OriginalName("DATA_TYPE_IEC_61360_DATE")] Date = 0,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_STRING")] String = 1,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_STRING_TRANSLATABLE")] StringTranslatable = 2,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_INTEGER_MEASURE")] IntegerMeasure = 3,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_INTEGER_COUNT")] IntegerCount = 4,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_INTEGER_CURRENCY")] IntegerCurrency = 5,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_REAL_MEASURE")] RealMeasure = 6,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_REAL_COUNT")] RealCount = 7,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_REAL_CURRENCY")] RealCurrency = 8,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_BOOLEAN")] Boolean = 9,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_IRI")] Iri = 10,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_IRDI")] Irdi = 11,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_RATIONAL")] Rational = 12,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_RATIONAL_MEASURE")] RationalMeasure = 13,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_TIME")] Time = 14,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_TIMESTAMP")] Timestamp = 15,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_FILE")] File = 16,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_HTML")] Html = 17,
    [pbr::OriginalName("DATA_TYPE_IEC_61360_BLOB")] Blob = 18,
  }

  #endregion

  #region Messages
  public sealed partial class ExtensionModel : pb::IMessage<ExtensionModel> {
    private static readonly pb::MessageParser<ExtensionModel> _parser = new pb::MessageParser<ExtensionModel>(() => new ExtensionModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExtensionModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtensionModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtensionModel(ExtensionModel other) : this() {
      semanticId_ = other.semanticId_ != null ? other.semanticId_.Clone() : null;
      supplementalSemanticIds_ = other.supplementalSemanticIds_.Clone();
      name_ = other.name_;
      valueType_ = other.valueType_;
      value_ = other.value_;
      refersTo_ = other.refersTo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtensionModel Clone() {
      return new ExtensionModel(this);
    }

    /// <summary>Field number for the "semanticId" field.</summary>
    public const int SemanticIdFieldNumber = 1;
    private global::FSR.GRPC.V3.ReferenceModel semanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel SemanticId {
      get { return semanticId_; }
      set {
        semanticId_ = value;
      }
    }

    /// <summary>Field number for the "supplementalSemanticIds" field.</summary>
    public const int SupplementalSemanticIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.ReferenceModel> _repeated_supplementalSemanticIds_codec
        = pb::FieldCodec.ForMessage(18, global::FSR.GRPC.V3.ReferenceModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> supplementalSemanticIds_ = new pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> SupplementalSemanticIds {
      get { return supplementalSemanticIds_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valueType" field.</summary>
    public const int ValueTypeFieldNumber = 4;
    private global::FSR.GRPC.V3.DataTypeDefXsd valueType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.DataTypeDefXsd ValueType {
      get { return valueType_; }
      set {
        valueType_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 5;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "refersTo" field.</summary>
    public const int RefersToFieldNumber = 6;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.ReferenceModel> _repeated_refersTo_codec
        = pb::FieldCodec.ForMessage(50, global::FSR.GRPC.V3.ReferenceModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> refersTo_ = new pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> RefersTo {
      get { return refersTo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExtensionModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExtensionModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SemanticId, other.SemanticId)) return false;
      if(!supplementalSemanticIds_.Equals(other.supplementalSemanticIds_)) return false;
      if (Name != other.Name) return false;
      if (ValueType != other.ValueType) return false;
      if (Value != other.Value) return false;
      if(!refersTo_.Equals(other.refersTo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (semanticId_ != null) hash ^= SemanticId.GetHashCode();
      hash ^= supplementalSemanticIds_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ValueType != 0) hash ^= ValueType.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      hash ^= refersTo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (semanticId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SemanticId);
      }
      supplementalSemanticIds_.WriteTo(output, _repeated_supplementalSemanticIds_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (ValueType != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ValueType);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Value);
      }
      refersTo_.WriteTo(output, _repeated_refersTo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (semanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticId);
      }
      size += supplementalSemanticIds_.CalculateSize(_repeated_supplementalSemanticIds_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ValueType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValueType);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      size += refersTo_.CalculateSize(_repeated_refersTo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExtensionModel other) {
      if (other == null) {
        return;
      }
      if (other.semanticId_ != null) {
        if (semanticId_ == null) {
          SemanticId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        SemanticId.MergeFrom(other.SemanticId);
      }
      supplementalSemanticIds_.Add(other.supplementalSemanticIds_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ValueType != 0) {
        ValueType = other.ValueType;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      refersTo_.Add(other.refersTo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (semanticId_ == null) {
              SemanticId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(SemanticId);
            break;
          }
          case 18: {
            supplementalSemanticIds_.AddEntriesFrom(input, _repeated_supplementalSemanticIds_codec);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            ValueType = (global::FSR.GRPC.V3.DataTypeDefXsd) input.ReadEnum();
            break;
          }
          case 42: {
            Value = input.ReadString();
            break;
          }
          case 50: {
            refersTo_.AddEntriesFrom(input, _repeated_refersTo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdministrativeInformationModel : pb::IMessage<AdministrativeInformationModel> {
    private static readonly pb::MessageParser<AdministrativeInformationModel> _parser = new pb::MessageParser<AdministrativeInformationModel>(() => new AdministrativeInformationModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdministrativeInformationModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdministrativeInformationModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdministrativeInformationModel(AdministrativeInformationModel other) : this() {
      embeddedDataSpecifications_ = other.embeddedDataSpecifications_.Clone();
      version_ = other.version_;
      revision_ = other.revision_;
      creator_ = other.creator_ != null ? other.creator_.Clone() : null;
      templateId_ = other.templateId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdministrativeInformationModel Clone() {
      return new AdministrativeInformationModel(this);
    }

    /// <summary>Field number for the "embeddedDataSpecifications" field.</summary>
    public const int EmbeddedDataSpecificationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> _repeated_embeddedDataSpecifications_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.V3.EmbeddedDataSpecificationModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> embeddedDataSpecifications_ = new pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> EmbeddedDataSpecifications {
      get { return embeddedDataSpecifications_; }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "revision" field.</summary>
    public const int RevisionFieldNumber = 3;
    private string revision_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Revision {
      get { return revision_; }
      set {
        revision_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "creator" field.</summary>
    public const int CreatorFieldNumber = 4;
    private global::FSR.GRPC.V3.ReferenceModel creator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel Creator {
      get { return creator_; }
      set {
        creator_ = value;
      }
    }

    /// <summary>Field number for the "templateId" field.</summary>
    public const int TemplateIdFieldNumber = 5;
    private string templateId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TemplateId {
      get { return templateId_; }
      set {
        templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdministrativeInformationModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdministrativeInformationModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!embeddedDataSpecifications_.Equals(other.embeddedDataSpecifications_)) return false;
      if (Version != other.Version) return false;
      if (Revision != other.Revision) return false;
      if (!object.Equals(Creator, other.Creator)) return false;
      if (TemplateId != other.TemplateId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= embeddedDataSpecifications_.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Revision.Length != 0) hash ^= Revision.GetHashCode();
      if (creator_ != null) hash ^= Creator.GetHashCode();
      if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      embeddedDataSpecifications_.WriteTo(output, _repeated_embeddedDataSpecifications_codec);
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (Revision.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Revision);
      }
      if (creator_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Creator);
      }
      if (TemplateId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TemplateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += embeddedDataSpecifications_.CalculateSize(_repeated_embeddedDataSpecifications_codec);
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Revision.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Revision);
      }
      if (creator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Creator);
      }
      if (TemplateId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdministrativeInformationModel other) {
      if (other == null) {
        return;
      }
      embeddedDataSpecifications_.Add(other.embeddedDataSpecifications_);
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Revision.Length != 0) {
        Revision = other.Revision;
      }
      if (other.creator_ != null) {
        if (creator_ == null) {
          Creator = new global::FSR.GRPC.V3.ReferenceModel();
        }
        Creator.MergeFrom(other.Creator);
      }
      if (other.TemplateId.Length != 0) {
        TemplateId = other.TemplateId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            embeddedDataSpecifications_.AddEntriesFrom(input, _repeated_embeddedDataSpecifications_codec);
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            Revision = input.ReadString();
            break;
          }
          case 34: {
            if (creator_ == null) {
              Creator = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(Creator);
            break;
          }
          case 42: {
            TemplateId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QualifierModel : pb::IMessage<QualifierModel> {
    private static readonly pb::MessageParser<QualifierModel> _parser = new pb::MessageParser<QualifierModel>(() => new QualifierModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QualifierModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QualifierModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QualifierModel(QualifierModel other) : this() {
      semanticId_ = other.semanticId_ != null ? other.semanticId_.Clone() : null;
      supplementalSemanticIds_ = other.supplementalSemanticIds_.Clone();
      kind_ = other.kind_;
      type_ = other.type_;
      valueType_ = other.valueType_;
      value_ = other.value_;
      valueId_ = other.valueId_ != null ? other.valueId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QualifierModel Clone() {
      return new QualifierModel(this);
    }

    /// <summary>Field number for the "semanticId" field.</summary>
    public const int SemanticIdFieldNumber = 1;
    private global::FSR.GRPC.V3.ReferenceModel semanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel SemanticId {
      get { return semanticId_; }
      set {
        semanticId_ = value;
      }
    }

    /// <summary>Field number for the "supplementalSemanticIds" field.</summary>
    public const int SupplementalSemanticIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.ReferenceModel> _repeated_supplementalSemanticIds_codec
        = pb::FieldCodec.ForMessage(18, global::FSR.GRPC.V3.ReferenceModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> supplementalSemanticIds_ = new pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> SupplementalSemanticIds {
      get { return supplementalSemanticIds_; }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 3;
    private global::FSR.GRPC.V3.QualifierKind kind_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.QualifierKind Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valueType" field.</summary>
    public const int ValueTypeFieldNumber = 5;
    private global::FSR.GRPC.V3.DataTypeDefXsd valueType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.DataTypeDefXsd ValueType {
      get { return valueType_; }
      set {
        valueType_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 6;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valueId" field.</summary>
    public const int ValueIdFieldNumber = 7;
    private global::FSR.GRPC.V3.ReferenceModel valueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel ValueId {
      get { return valueId_; }
      set {
        valueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QualifierModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QualifierModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SemanticId, other.SemanticId)) return false;
      if(!supplementalSemanticIds_.Equals(other.supplementalSemanticIds_)) return false;
      if (Kind != other.Kind) return false;
      if (Type != other.Type) return false;
      if (ValueType != other.ValueType) return false;
      if (Value != other.Value) return false;
      if (!object.Equals(ValueId, other.ValueId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (semanticId_ != null) hash ^= SemanticId.GetHashCode();
      hash ^= supplementalSemanticIds_.GetHashCode();
      if (Kind != 0) hash ^= Kind.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (ValueType != 0) hash ^= ValueType.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (valueId_ != null) hash ^= ValueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (semanticId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SemanticId);
      }
      supplementalSemanticIds_.WriteTo(output, _repeated_supplementalSemanticIds_codec);
      if (Kind != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Kind);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Type);
      }
      if (ValueType != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ValueType);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Value);
      }
      if (valueId_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ValueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (semanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticId);
      }
      size += supplementalSemanticIds_.CalculateSize(_repeated_supplementalSemanticIds_codec);
      if (Kind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (ValueType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValueType);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (valueId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QualifierModel other) {
      if (other == null) {
        return;
      }
      if (other.semanticId_ != null) {
        if (semanticId_ == null) {
          SemanticId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        SemanticId.MergeFrom(other.SemanticId);
      }
      supplementalSemanticIds_.Add(other.supplementalSemanticIds_);
      if (other.Kind != 0) {
        Kind = other.Kind;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.ValueType != 0) {
        ValueType = other.ValueType;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.valueId_ != null) {
        if (valueId_ == null) {
          ValueId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        ValueId.MergeFrom(other.ValueId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (semanticId_ == null) {
              SemanticId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(SemanticId);
            break;
          }
          case 18: {
            supplementalSemanticIds_.AddEntriesFrom(input, _repeated_supplementalSemanticIds_codec);
            break;
          }
          case 24: {
            Kind = (global::FSR.GRPC.V3.QualifierKind) input.ReadEnum();
            break;
          }
          case 34: {
            Type = input.ReadString();
            break;
          }
          case 40: {
            ValueType = (global::FSR.GRPC.V3.DataTypeDefXsd) input.ReadEnum();
            break;
          }
          case 50: {
            Value = input.ReadString();
            break;
          }
          case 58: {
            if (valueId_ == null) {
              ValueId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(ValueId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssetAdministrationShellModel : pb::IMessage<AssetAdministrationShellModel> {
    private static readonly pb::MessageParser<AssetAdministrationShellModel> _parser = new pb::MessageParser<AssetAdministrationShellModel>(() => new AssetAdministrationShellModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssetAdministrationShellModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetAdministrationShellModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetAdministrationShellModel(AssetAdministrationShellModel other) : this() {
      extensions_ = other.extensions_.Clone();
      category_ = other.category_;
      idShort_ = other.idShort_;
      displayName_ = other.displayName_.Clone();
      description_ = other.description_.Clone();
      administration_ = other.administration_ != null ? other.administration_.Clone() : null;
      id_ = other.id_;
      embeddedDataSpecifications_ = other.embeddedDataSpecifications_.Clone();
      derivedFrom_ = other.derivedFrom_ != null ? other.derivedFrom_.Clone() : null;
      assetInformation_ = other.assetInformation_ != null ? other.assetInformation_.Clone() : null;
      submodels_ = other.submodels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetAdministrationShellModel Clone() {
      return new AssetAdministrationShellModel(this);
    }

    /// <summary>Field number for the "extensions" field.</summary>
    public const int ExtensionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.ExtensionModel> _repeated_extensions_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.V3.ExtensionModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.ExtensionModel> extensions_ = new pbc::RepeatedField<global::FSR.GRPC.V3.ExtensionModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.ExtensionModel> Extensions {
      get { return extensions_; }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 2;
    private string category_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idShort" field.</summary>
    public const int IdShortFieldNumber = 3;
    private string idShort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdShort {
      get { return idShort_; }
      set {
        idShort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.LangStringModel> _repeated_displayName_codec
        = pb::FieldCodec.ForMessage(34, global::FSR.GRPC.V3.LangStringModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> displayName_ = new pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> DisplayName {
      get { return displayName_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.LangStringModel> _repeated_description_codec
        = pb::FieldCodec.ForMessage(42, global::FSR.GRPC.V3.LangStringModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> description_ = new pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> Description {
      get { return description_; }
    }

    /// <summary>Field number for the "administration" field.</summary>
    public const int AdministrationFieldNumber = 6;
    private global::FSR.GRPC.V3.AdministrativeInformationModel administration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.AdministrativeInformationModel Administration {
      get { return administration_; }
      set {
        administration_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 7;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "embeddedDataSpecifications" field.</summary>
    public const int EmbeddedDataSpecificationsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> _repeated_embeddedDataSpecifications_codec
        = pb::FieldCodec.ForMessage(66, global::FSR.GRPC.V3.EmbeddedDataSpecificationModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> embeddedDataSpecifications_ = new pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> EmbeddedDataSpecifications {
      get { return embeddedDataSpecifications_; }
    }

    /// <summary>Field number for the "derivedFrom" field.</summary>
    public const int DerivedFromFieldNumber = 9;
    private global::FSR.GRPC.V3.ReferenceModel derivedFrom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel DerivedFrom {
      get { return derivedFrom_; }
      set {
        derivedFrom_ = value;
      }
    }

    /// <summary>Field number for the "assetInformation" field.</summary>
    public const int AssetInformationFieldNumber = 10;
    private global::FSR.GRPC.V3.AssetInformationModel assetInformation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.AssetInformationModel AssetInformation {
      get { return assetInformation_; }
      set {
        assetInformation_ = value;
      }
    }

    /// <summary>Field number for the "submodels" field.</summary>
    public const int SubmodelsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.ReferenceModel> _repeated_submodels_codec
        = pb::FieldCodec.ForMessage(90, global::FSR.GRPC.V3.ReferenceModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> submodels_ = new pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> Submodels {
      get { return submodels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssetAdministrationShellModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssetAdministrationShellModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!extensions_.Equals(other.extensions_)) return false;
      if (Category != other.Category) return false;
      if (IdShort != other.IdShort) return false;
      if(!displayName_.Equals(other.displayName_)) return false;
      if(!description_.Equals(other.description_)) return false;
      if (!object.Equals(Administration, other.Administration)) return false;
      if (Id != other.Id) return false;
      if(!embeddedDataSpecifications_.Equals(other.embeddedDataSpecifications_)) return false;
      if (!object.Equals(DerivedFrom, other.DerivedFrom)) return false;
      if (!object.Equals(AssetInformation, other.AssetInformation)) return false;
      if(!submodels_.Equals(other.submodels_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= extensions_.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (IdShort.Length != 0) hash ^= IdShort.GetHashCode();
      hash ^= displayName_.GetHashCode();
      hash ^= description_.GetHashCode();
      if (administration_ != null) hash ^= Administration.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= embeddedDataSpecifications_.GetHashCode();
      if (derivedFrom_ != null) hash ^= DerivedFrom.GetHashCode();
      if (assetInformation_ != null) hash ^= AssetInformation.GetHashCode();
      hash ^= submodels_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      extensions_.WriteTo(output, _repeated_extensions_codec);
      if (Category.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Category);
      }
      if (IdShort.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IdShort);
      }
      displayName_.WriteTo(output, _repeated_displayName_codec);
      description_.WriteTo(output, _repeated_description_codec);
      if (administration_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Administration);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Id);
      }
      embeddedDataSpecifications_.WriteTo(output, _repeated_embeddedDataSpecifications_codec);
      if (derivedFrom_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DerivedFrom);
      }
      if (assetInformation_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(AssetInformation);
      }
      submodels_.WriteTo(output, _repeated_submodels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += extensions_.CalculateSize(_repeated_extensions_codec);
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (IdShort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdShort);
      }
      size += displayName_.CalculateSize(_repeated_displayName_codec);
      size += description_.CalculateSize(_repeated_description_codec);
      if (administration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Administration);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += embeddedDataSpecifications_.CalculateSize(_repeated_embeddedDataSpecifications_codec);
      if (derivedFrom_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DerivedFrom);
      }
      if (assetInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AssetInformation);
      }
      size += submodels_.CalculateSize(_repeated_submodels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssetAdministrationShellModel other) {
      if (other == null) {
        return;
      }
      extensions_.Add(other.extensions_);
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.IdShort.Length != 0) {
        IdShort = other.IdShort;
      }
      displayName_.Add(other.displayName_);
      description_.Add(other.description_);
      if (other.administration_ != null) {
        if (administration_ == null) {
          Administration = new global::FSR.GRPC.V3.AdministrativeInformationModel();
        }
        Administration.MergeFrom(other.Administration);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      embeddedDataSpecifications_.Add(other.embeddedDataSpecifications_);
      if (other.derivedFrom_ != null) {
        if (derivedFrom_ == null) {
          DerivedFrom = new global::FSR.GRPC.V3.ReferenceModel();
        }
        DerivedFrom.MergeFrom(other.DerivedFrom);
      }
      if (other.assetInformation_ != null) {
        if (assetInformation_ == null) {
          AssetInformation = new global::FSR.GRPC.V3.AssetInformationModel();
        }
        AssetInformation.MergeFrom(other.AssetInformation);
      }
      submodels_.Add(other.submodels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            extensions_.AddEntriesFrom(input, _repeated_extensions_codec);
            break;
          }
          case 18: {
            Category = input.ReadString();
            break;
          }
          case 26: {
            IdShort = input.ReadString();
            break;
          }
          case 34: {
            displayName_.AddEntriesFrom(input, _repeated_displayName_codec);
            break;
          }
          case 42: {
            description_.AddEntriesFrom(input, _repeated_description_codec);
            break;
          }
          case 50: {
            if (administration_ == null) {
              Administration = new global::FSR.GRPC.V3.AdministrativeInformationModel();
            }
            input.ReadMessage(Administration);
            break;
          }
          case 58: {
            Id = input.ReadString();
            break;
          }
          case 66: {
            embeddedDataSpecifications_.AddEntriesFrom(input, _repeated_embeddedDataSpecifications_codec);
            break;
          }
          case 74: {
            if (derivedFrom_ == null) {
              DerivedFrom = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(DerivedFrom);
            break;
          }
          case 82: {
            if (assetInformation_ == null) {
              AssetInformation = new global::FSR.GRPC.V3.AssetInformationModel();
            }
            input.ReadMessage(AssetInformation);
            break;
          }
          case 90: {
            submodels_.AddEntriesFrom(input, _repeated_submodels_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssetInformationModel : pb::IMessage<AssetInformationModel> {
    private static readonly pb::MessageParser<AssetInformationModel> _parser = new pb::MessageParser<AssetInformationModel>(() => new AssetInformationModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssetInformationModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetInformationModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetInformationModel(AssetInformationModel other) : this() {
      assetKind_ = other.assetKind_;
      globalAssetId_ = other.globalAssetId_;
      specificAssetIds_ = other.specificAssetIds_.Clone();
      assetType_ = other.assetType_;
      defaultThumbnail_ = other.defaultThumbnail_ != null ? other.defaultThumbnail_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetInformationModel Clone() {
      return new AssetInformationModel(this);
    }

    /// <summary>Field number for the "assetKind" field.</summary>
    public const int AssetKindFieldNumber = 1;
    private global::FSR.GRPC.V3.AssetKind assetKind_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.AssetKind AssetKind {
      get { return assetKind_; }
      set {
        assetKind_ = value;
      }
    }

    /// <summary>Field number for the "globalAssetId" field.</summary>
    public const int GlobalAssetIdFieldNumber = 2;
    private string globalAssetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GlobalAssetId {
      get { return globalAssetId_; }
      set {
        globalAssetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "specificAssetIds" field.</summary>
    public const int SpecificAssetIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.SpecificAssetIdModel> _repeated_specificAssetIds_codec
        = pb::FieldCodec.ForMessage(26, global::FSR.GRPC.V3.SpecificAssetIdModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.SpecificAssetIdModel> specificAssetIds_ = new pbc::RepeatedField<global::FSR.GRPC.V3.SpecificAssetIdModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.SpecificAssetIdModel> SpecificAssetIds {
      get { return specificAssetIds_; }
    }

    /// <summary>Field number for the "assetType" field.</summary>
    public const int AssetTypeFieldNumber = 4;
    private string assetType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetType {
      get { return assetType_; }
      set {
        assetType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "defaultThumbnail" field.</summary>
    public const int DefaultThumbnailFieldNumber = 5;
    private global::FSR.GRPC.V3.ResourceModel defaultThumbnail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ResourceModel DefaultThumbnail {
      get { return defaultThumbnail_; }
      set {
        defaultThumbnail_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssetInformationModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssetInformationModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AssetKind != other.AssetKind) return false;
      if (GlobalAssetId != other.GlobalAssetId) return false;
      if(!specificAssetIds_.Equals(other.specificAssetIds_)) return false;
      if (AssetType != other.AssetType) return false;
      if (!object.Equals(DefaultThumbnail, other.DefaultThumbnail)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AssetKind != 0) hash ^= AssetKind.GetHashCode();
      if (GlobalAssetId.Length != 0) hash ^= GlobalAssetId.GetHashCode();
      hash ^= specificAssetIds_.GetHashCode();
      if (AssetType.Length != 0) hash ^= AssetType.GetHashCode();
      if (defaultThumbnail_ != null) hash ^= DefaultThumbnail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AssetKind != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AssetKind);
      }
      if (GlobalAssetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GlobalAssetId);
      }
      specificAssetIds_.WriteTo(output, _repeated_specificAssetIds_codec);
      if (AssetType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AssetType);
      }
      if (defaultThumbnail_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DefaultThumbnail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AssetKind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AssetKind);
      }
      if (GlobalAssetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GlobalAssetId);
      }
      size += specificAssetIds_.CalculateSize(_repeated_specificAssetIds_codec);
      if (AssetType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetType);
      }
      if (defaultThumbnail_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefaultThumbnail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssetInformationModel other) {
      if (other == null) {
        return;
      }
      if (other.AssetKind != 0) {
        AssetKind = other.AssetKind;
      }
      if (other.GlobalAssetId.Length != 0) {
        GlobalAssetId = other.GlobalAssetId;
      }
      specificAssetIds_.Add(other.specificAssetIds_);
      if (other.AssetType.Length != 0) {
        AssetType = other.AssetType;
      }
      if (other.defaultThumbnail_ != null) {
        if (defaultThumbnail_ == null) {
          DefaultThumbnail = new global::FSR.GRPC.V3.ResourceModel();
        }
        DefaultThumbnail.MergeFrom(other.DefaultThumbnail);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AssetKind = (global::FSR.GRPC.V3.AssetKind) input.ReadEnum();
            break;
          }
          case 18: {
            GlobalAssetId = input.ReadString();
            break;
          }
          case 26: {
            specificAssetIds_.AddEntriesFrom(input, _repeated_specificAssetIds_codec);
            break;
          }
          case 34: {
            AssetType = input.ReadString();
            break;
          }
          case 42: {
            if (defaultThumbnail_ == null) {
              DefaultThumbnail = new global::FSR.GRPC.V3.ResourceModel();
            }
            input.ReadMessage(DefaultThumbnail);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResourceModel : pb::IMessage<ResourceModel> {
    private static readonly pb::MessageParser<ResourceModel> _parser = new pb::MessageParser<ResourceModel>(() => new ResourceModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResourceModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceModel(ResourceModel other) : this() {
      path_ = other.path_;
      contentType_ = other.contentType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceModel Clone() {
      return new ResourceModel(this);
    }

    /// <summary>Field number for the "Path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContentType" field.</summary>
    public const int ContentTypeFieldNumber = 2;
    private string contentType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResourceModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResourceModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (ContentType != other.ContentType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (ContentType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (ContentType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResourceModel other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 18: {
            ContentType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpecificAssetIdModel : pb::IMessage<SpecificAssetIdModel> {
    private static readonly pb::MessageParser<SpecificAssetIdModel> _parser = new pb::MessageParser<SpecificAssetIdModel>(() => new SpecificAssetIdModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpecificAssetIdModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecificAssetIdModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecificAssetIdModel(SpecificAssetIdModel other) : this() {
      semanticId_ = other.semanticId_ != null ? other.semanticId_.Clone() : null;
      supplementalSemanticIds_ = other.supplementalSemanticIds_.Clone();
      name_ = other.name_;
      value_ = other.value_;
      externalSubjectId_ = other.externalSubjectId_ != null ? other.externalSubjectId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecificAssetIdModel Clone() {
      return new SpecificAssetIdModel(this);
    }

    /// <summary>Field number for the "semanticId" field.</summary>
    public const int SemanticIdFieldNumber = 1;
    private global::FSR.GRPC.V3.ReferenceModel semanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel SemanticId {
      get { return semanticId_; }
      set {
        semanticId_ = value;
      }
    }

    /// <summary>Field number for the "supplementalSemanticIds" field.</summary>
    public const int SupplementalSemanticIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.ReferenceModel> _repeated_supplementalSemanticIds_codec
        = pb::FieldCodec.ForMessage(18, global::FSR.GRPC.V3.ReferenceModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> supplementalSemanticIds_ = new pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> SupplementalSemanticIds {
      get { return supplementalSemanticIds_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 4;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "externalSubjectId" field.</summary>
    public const int ExternalSubjectIdFieldNumber = 5;
    private global::FSR.GRPC.V3.ReferenceModel externalSubjectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel ExternalSubjectId {
      get { return externalSubjectId_; }
      set {
        externalSubjectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpecificAssetIdModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpecificAssetIdModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SemanticId, other.SemanticId)) return false;
      if(!supplementalSemanticIds_.Equals(other.supplementalSemanticIds_)) return false;
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      if (!object.Equals(ExternalSubjectId, other.ExternalSubjectId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (semanticId_ != null) hash ^= SemanticId.GetHashCode();
      hash ^= supplementalSemanticIds_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (externalSubjectId_ != null) hash ^= ExternalSubjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (semanticId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SemanticId);
      }
      supplementalSemanticIds_.WriteTo(output, _repeated_supplementalSemanticIds_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Value);
      }
      if (externalSubjectId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExternalSubjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (semanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticId);
      }
      size += supplementalSemanticIds_.CalculateSize(_repeated_supplementalSemanticIds_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (externalSubjectId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalSubjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpecificAssetIdModel other) {
      if (other == null) {
        return;
      }
      if (other.semanticId_ != null) {
        if (semanticId_ == null) {
          SemanticId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        SemanticId.MergeFrom(other.SemanticId);
      }
      supplementalSemanticIds_.Add(other.supplementalSemanticIds_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.externalSubjectId_ != null) {
        if (externalSubjectId_ == null) {
          ExternalSubjectId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        ExternalSubjectId.MergeFrom(other.ExternalSubjectId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (semanticId_ == null) {
              SemanticId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(SemanticId);
            break;
          }
          case 18: {
            supplementalSemanticIds_.AddEntriesFrom(input, _repeated_supplementalSemanticIds_codec);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Value = input.ReadString();
            break;
          }
          case 42: {
            if (externalSubjectId_ == null) {
              ExternalSubjectId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(ExternalSubjectId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmodelModel : pb::IMessage<SubmodelModel> {
    private static readonly pb::MessageParser<SubmodelModel> _parser = new pb::MessageParser<SubmodelModel>(() => new SubmodelModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmodelModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelModel(SubmodelModel other) : this() {
      extensions_ = other.extensions_.Clone();
      category_ = other.category_;
      idShort_ = other.idShort_;
      displayName_ = other.displayName_.Clone();
      description_ = other.description_.Clone();
      administration_ = other.administration_ != null ? other.administration_.Clone() : null;
      id_ = other.id_;
      kind_ = other.kind_;
      semanticId_ = other.semanticId_ != null ? other.semanticId_.Clone() : null;
      supplementalSemanticIds_ = other.supplementalSemanticIds_.Clone();
      qualifiers_ = other.qualifiers_.Clone();
      embeddedDataSpecifications_ = other.embeddedDataSpecifications_.Clone();
      submodelElements_ = other.submodelElements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelModel Clone() {
      return new SubmodelModel(this);
    }

    /// <summary>Field number for the "extensions" field.</summary>
    public const int ExtensionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.ExtensionModel> _repeated_extensions_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.V3.ExtensionModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.ExtensionModel> extensions_ = new pbc::RepeatedField<global::FSR.GRPC.V3.ExtensionModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.ExtensionModel> Extensions {
      get { return extensions_; }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 2;
    private string category_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idShort" field.</summary>
    public const int IdShortFieldNumber = 3;
    private string idShort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdShort {
      get { return idShort_; }
      set {
        idShort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.LangStringModel> _repeated_displayName_codec
        = pb::FieldCodec.ForMessage(34, global::FSR.GRPC.V3.LangStringModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> displayName_ = new pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> DisplayName {
      get { return displayName_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.LangStringModel> _repeated_description_codec
        = pb::FieldCodec.ForMessage(42, global::FSR.GRPC.V3.LangStringModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> description_ = new pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> Description {
      get { return description_; }
    }

    /// <summary>Field number for the "administration" field.</summary>
    public const int AdministrationFieldNumber = 6;
    private global::FSR.GRPC.V3.AdministrativeInformationModel administration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.AdministrativeInformationModel Administration {
      get { return administration_; }
      set {
        administration_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 7;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 8;
    private global::FSR.GRPC.V3.ModellingKind kind_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ModellingKind Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "semanticId" field.</summary>
    public const int SemanticIdFieldNumber = 9;
    private global::FSR.GRPC.V3.ReferenceModel semanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel SemanticId {
      get { return semanticId_; }
      set {
        semanticId_ = value;
      }
    }

    /// <summary>Field number for the "supplementalSemanticIds" field.</summary>
    public const int SupplementalSemanticIdsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.ReferenceModel> _repeated_supplementalSemanticIds_codec
        = pb::FieldCodec.ForMessage(82, global::FSR.GRPC.V3.ReferenceModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> supplementalSemanticIds_ = new pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> SupplementalSemanticIds {
      get { return supplementalSemanticIds_; }
    }

    /// <summary>Field number for the "qualifiers" field.</summary>
    public const int QualifiersFieldNumber = 11;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.QualifierModel> _repeated_qualifiers_codec
        = pb::FieldCodec.ForMessage(90, global::FSR.GRPC.V3.QualifierModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.QualifierModel> qualifiers_ = new pbc::RepeatedField<global::FSR.GRPC.V3.QualifierModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.QualifierModel> Qualifiers {
      get { return qualifiers_; }
    }

    /// <summary>Field number for the "embeddedDataSpecifications" field.</summary>
    public const int EmbeddedDataSpecificationsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> _repeated_embeddedDataSpecifications_codec
        = pb::FieldCodec.ForMessage(98, global::FSR.GRPC.V3.EmbeddedDataSpecificationModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> embeddedDataSpecifications_ = new pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> EmbeddedDataSpecifications {
      get { return embeddedDataSpecifications_; }
    }

    /// <summary>Field number for the "submodelElements" field.</summary>
    public const int SubmodelElementsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.SubmodelElementModel> _repeated_submodelElements_codec
        = pb::FieldCodec.ForMessage(106, global::FSR.GRPC.V3.SubmodelElementModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.SubmodelElementModel> submodelElements_ = new pbc::RepeatedField<global::FSR.GRPC.V3.SubmodelElementModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.SubmodelElementModel> SubmodelElements {
      get { return submodelElements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmodelModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmodelModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!extensions_.Equals(other.extensions_)) return false;
      if (Category != other.Category) return false;
      if (IdShort != other.IdShort) return false;
      if(!displayName_.Equals(other.displayName_)) return false;
      if(!description_.Equals(other.description_)) return false;
      if (!object.Equals(Administration, other.Administration)) return false;
      if (Id != other.Id) return false;
      if (Kind != other.Kind) return false;
      if (!object.Equals(SemanticId, other.SemanticId)) return false;
      if(!supplementalSemanticIds_.Equals(other.supplementalSemanticIds_)) return false;
      if(!qualifiers_.Equals(other.qualifiers_)) return false;
      if(!embeddedDataSpecifications_.Equals(other.embeddedDataSpecifications_)) return false;
      if(!submodelElements_.Equals(other.submodelElements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= extensions_.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (IdShort.Length != 0) hash ^= IdShort.GetHashCode();
      hash ^= displayName_.GetHashCode();
      hash ^= description_.GetHashCode();
      if (administration_ != null) hash ^= Administration.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Kind != 0) hash ^= Kind.GetHashCode();
      if (semanticId_ != null) hash ^= SemanticId.GetHashCode();
      hash ^= supplementalSemanticIds_.GetHashCode();
      hash ^= qualifiers_.GetHashCode();
      hash ^= embeddedDataSpecifications_.GetHashCode();
      hash ^= submodelElements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      extensions_.WriteTo(output, _repeated_extensions_codec);
      if (Category.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Category);
      }
      if (IdShort.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IdShort);
      }
      displayName_.WriteTo(output, _repeated_displayName_codec);
      description_.WriteTo(output, _repeated_description_codec);
      if (administration_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Administration);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Id);
      }
      if (Kind != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Kind);
      }
      if (semanticId_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(SemanticId);
      }
      supplementalSemanticIds_.WriteTo(output, _repeated_supplementalSemanticIds_codec);
      qualifiers_.WriteTo(output, _repeated_qualifiers_codec);
      embeddedDataSpecifications_.WriteTo(output, _repeated_embeddedDataSpecifications_codec);
      submodelElements_.WriteTo(output, _repeated_submodelElements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += extensions_.CalculateSize(_repeated_extensions_codec);
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (IdShort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdShort);
      }
      size += displayName_.CalculateSize(_repeated_displayName_codec);
      size += description_.CalculateSize(_repeated_description_codec);
      if (administration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Administration);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Kind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
      }
      if (semanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticId);
      }
      size += supplementalSemanticIds_.CalculateSize(_repeated_supplementalSemanticIds_codec);
      size += qualifiers_.CalculateSize(_repeated_qualifiers_codec);
      size += embeddedDataSpecifications_.CalculateSize(_repeated_embeddedDataSpecifications_codec);
      size += submodelElements_.CalculateSize(_repeated_submodelElements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmodelModel other) {
      if (other == null) {
        return;
      }
      extensions_.Add(other.extensions_);
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.IdShort.Length != 0) {
        IdShort = other.IdShort;
      }
      displayName_.Add(other.displayName_);
      description_.Add(other.description_);
      if (other.administration_ != null) {
        if (administration_ == null) {
          Administration = new global::FSR.GRPC.V3.AdministrativeInformationModel();
        }
        Administration.MergeFrom(other.Administration);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Kind != 0) {
        Kind = other.Kind;
      }
      if (other.semanticId_ != null) {
        if (semanticId_ == null) {
          SemanticId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        SemanticId.MergeFrom(other.SemanticId);
      }
      supplementalSemanticIds_.Add(other.supplementalSemanticIds_);
      qualifiers_.Add(other.qualifiers_);
      embeddedDataSpecifications_.Add(other.embeddedDataSpecifications_);
      submodelElements_.Add(other.submodelElements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            extensions_.AddEntriesFrom(input, _repeated_extensions_codec);
            break;
          }
          case 18: {
            Category = input.ReadString();
            break;
          }
          case 26: {
            IdShort = input.ReadString();
            break;
          }
          case 34: {
            displayName_.AddEntriesFrom(input, _repeated_displayName_codec);
            break;
          }
          case 42: {
            description_.AddEntriesFrom(input, _repeated_description_codec);
            break;
          }
          case 50: {
            if (administration_ == null) {
              Administration = new global::FSR.GRPC.V3.AdministrativeInformationModel();
            }
            input.ReadMessage(Administration);
            break;
          }
          case 58: {
            Id = input.ReadString();
            break;
          }
          case 64: {
            Kind = (global::FSR.GRPC.V3.ModellingKind) input.ReadEnum();
            break;
          }
          case 74: {
            if (semanticId_ == null) {
              SemanticId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(SemanticId);
            break;
          }
          case 82: {
            supplementalSemanticIds_.AddEntriesFrom(input, _repeated_supplementalSemanticIds_codec);
            break;
          }
          case 90: {
            qualifiers_.AddEntriesFrom(input, _repeated_qualifiers_codec);
            break;
          }
          case 98: {
            embeddedDataSpecifications_.AddEntriesFrom(input, _repeated_embeddedDataSpecifications_codec);
            break;
          }
          case 106: {
            submodelElements_.AddEntriesFrom(input, _repeated_submodelElements_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmodelElementModel : pb::IMessage<SubmodelElementModel> {
    private static readonly pb::MessageParser<SubmodelElementModel> _parser = new pb::MessageParser<SubmodelElementModel>(() => new SubmodelElementModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmodelElementModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementModel(SubmodelElementModel other) : this() {
      extensions_ = other.extensions_.Clone();
      category_ = other.category_;
      idShort_ = other.idShort_;
      displayName_ = other.displayName_.Clone();
      description_ = other.description_.Clone();
      semanticId_ = other.semanticId_ != null ? other.semanticId_.Clone() : null;
      supplementalSemanticIds_ = other.supplementalSemanticIds_.Clone();
      qualifiers_ = other.qualifiers_.Clone();
      embeddedDataSpecifications_ = other.embeddedDataSpecifications_.Clone();
      submodelElementType_ = other.submodelElementType_;
      annotatedRelationshipElement_ = other.annotatedRelationshipElement_ != null ? other.annotatedRelationshipElement_.Clone() : null;
      basicEventElement_ = other.basicEventElement_ != null ? other.basicEventElement_.Clone() : null;
      blob_ = other.blob_ != null ? other.blob_.Clone() : null;
      capability_ = other.capability_ != null ? other.capability_.Clone() : null;
      dataElement_ = other.dataElement_ != null ? other.dataElement_.Clone() : null;
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      eventElement_ = other.eventElement_ != null ? other.eventElement_.Clone() : null;
      file_ = other.file_ != null ? other.file_.Clone() : null;
      multiLanguageProperty_ = other.multiLanguageProperty_ != null ? other.multiLanguageProperty_.Clone() : null;
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      property_ = other.property_ != null ? other.property_.Clone() : null;
      range_ = other.range_ != null ? other.range_.Clone() : null;
      referenceElement_ = other.referenceElement_ != null ? other.referenceElement_.Clone() : null;
      relationshipElement_ = other.relationshipElement_ != null ? other.relationshipElement_.Clone() : null;
      submodelElementList_ = other.submodelElementList_ != null ? other.submodelElementList_.Clone() : null;
      submodelElementCollection_ = other.submodelElementCollection_ != null ? other.submodelElementCollection_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementModel Clone() {
      return new SubmodelElementModel(this);
    }

    /// <summary>Field number for the "extensions" field.</summary>
    public const int ExtensionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.ExtensionModel> _repeated_extensions_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.V3.ExtensionModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.ExtensionModel> extensions_ = new pbc::RepeatedField<global::FSR.GRPC.V3.ExtensionModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.ExtensionModel> Extensions {
      get { return extensions_; }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 2;
    private string category_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idShort" field.</summary>
    public const int IdShortFieldNumber = 3;
    private string idShort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdShort {
      get { return idShort_; }
      set {
        idShort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.LangStringModel> _repeated_displayName_codec
        = pb::FieldCodec.ForMessage(34, global::FSR.GRPC.V3.LangStringModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> displayName_ = new pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> DisplayName {
      get { return displayName_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.LangStringModel> _repeated_description_codec
        = pb::FieldCodec.ForMessage(42, global::FSR.GRPC.V3.LangStringModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> description_ = new pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> Description {
      get { return description_; }
    }

    /// <summary>Field number for the "semanticId" field.</summary>
    public const int SemanticIdFieldNumber = 6;
    private global::FSR.GRPC.V3.ReferenceModel semanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel SemanticId {
      get { return semanticId_; }
      set {
        semanticId_ = value;
      }
    }

    /// <summary>Field number for the "supplementalSemanticIds" field.</summary>
    public const int SupplementalSemanticIdsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.ReferenceModel> _repeated_supplementalSemanticIds_codec
        = pb::FieldCodec.ForMessage(58, global::FSR.GRPC.V3.ReferenceModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> supplementalSemanticIds_ = new pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> SupplementalSemanticIds {
      get { return supplementalSemanticIds_; }
    }

    /// <summary>Field number for the "qualifiers" field.</summary>
    public const int QualifiersFieldNumber = 8;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.QualifierModel> _repeated_qualifiers_codec
        = pb::FieldCodec.ForMessage(66, global::FSR.GRPC.V3.QualifierModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.QualifierModel> qualifiers_ = new pbc::RepeatedField<global::FSR.GRPC.V3.QualifierModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.QualifierModel> Qualifiers {
      get { return qualifiers_; }
    }

    /// <summary>Field number for the "embeddedDataSpecifications" field.</summary>
    public const int EmbeddedDataSpecificationsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> _repeated_embeddedDataSpecifications_codec
        = pb::FieldCodec.ForMessage(74, global::FSR.GRPC.V3.EmbeddedDataSpecificationModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> embeddedDataSpecifications_ = new pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> EmbeddedDataSpecifications {
      get { return embeddedDataSpecifications_; }
    }

    /// <summary>Field number for the "submodelElementType" field.</summary>
    public const int SubmodelElementTypeFieldNumber = 10;
    private global::FSR.GRPC.V3.SubmodelElementType submodelElementType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.SubmodelElementType SubmodelElementType {
      get { return submodelElementType_; }
      set {
        submodelElementType_ = value;
      }
    }

    /// <summary>Field number for the "annotatedRelationshipElement" field.</summary>
    public const int AnnotatedRelationshipElementFieldNumber = 11;
    private global::FSR.GRPC.V3.AnnotatedRelationshipElementDTO annotatedRelationshipElement_;
    /// <summary>
    /// SubmodelElement payload here.
    /// TODO: Find better solution! (Current solution causes an overhead of around 128 bytes per model)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.AnnotatedRelationshipElementDTO AnnotatedRelationshipElement {
      get { return annotatedRelationshipElement_; }
      set {
        annotatedRelationshipElement_ = value;
      }
    }

    /// <summary>Field number for the "basicEventElement" field.</summary>
    public const int BasicEventElementFieldNumber = 12;
    private global::FSR.GRPC.V3.BasicEventElementDTO basicEventElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.BasicEventElementDTO BasicEventElement {
      get { return basicEventElement_; }
      set {
        basicEventElement_ = value;
      }
    }

    /// <summary>Field number for the "blob" field.</summary>
    public const int BlobFieldNumber = 13;
    private global::FSR.GRPC.V3.BlobDTO blob_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.BlobDTO Blob {
      get { return blob_; }
      set {
        blob_ = value;
      }
    }

    /// <summary>Field number for the "capability" field.</summary>
    public const int CapabilityFieldNumber = 14;
    private global::FSR.GRPC.V3.CapabilityDTO capability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.CapabilityDTO Capability {
      get { return capability_; }
      set {
        capability_ = value;
      }
    }

    /// <summary>Field number for the "dataElement" field.</summary>
    public const int DataElementFieldNumber = 15;
    private global::FSR.GRPC.V3.DataElementDTO dataElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.DataElementDTO DataElement {
      get { return dataElement_; }
      set {
        dataElement_ = value;
      }
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 16;
    private global::FSR.GRPC.V3.EntityDTO entity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.EntityDTO Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    /// <summary>Field number for the "eventElement" field.</summary>
    public const int EventElementFieldNumber = 17;
    private global::FSR.GRPC.V3.EventElementDTO eventElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.EventElementDTO EventElement {
      get { return eventElement_; }
      set {
        eventElement_ = value;
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 18;
    private global::FSR.GRPC.V3.FileDTO file_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.FileDTO File {
      get { return file_; }
      set {
        file_ = value;
      }
    }

    /// <summary>Field number for the "multiLanguageProperty" field.</summary>
    public const int MultiLanguagePropertyFieldNumber = 19;
    private global::FSR.GRPC.V3.MultiLanguagePropertyDTO multiLanguageProperty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.MultiLanguagePropertyDTO MultiLanguageProperty {
      get { return multiLanguageProperty_; }
      set {
        multiLanguageProperty_ = value;
      }
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 20;
    private global::FSR.GRPC.V3.OperationDTO operation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.OperationDTO Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 21;
    private global::FSR.GRPC.V3.PropertyDTO property_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.PropertyDTO Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 22;
    private global::FSR.GRPC.V3.RangeDTO range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.RangeDTO Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    /// <summary>Field number for the "referenceElement" field.</summary>
    public const int ReferenceElementFieldNumber = 23;
    private global::FSR.GRPC.V3.ReferenceElementDTO referenceElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceElementDTO ReferenceElement {
      get { return referenceElement_; }
      set {
        referenceElement_ = value;
      }
    }

    /// <summary>Field number for the "relationshipElement" field.</summary>
    public const int RelationshipElementFieldNumber = 24;
    private global::FSR.GRPC.V3.RelationshipElementDTO relationshipElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.RelationshipElementDTO RelationshipElement {
      get { return relationshipElement_; }
      set {
        relationshipElement_ = value;
      }
    }

    /// <summary>Field number for the "submodelElementList" field.</summary>
    public const int SubmodelElementListFieldNumber = 25;
    private global::FSR.GRPC.V3.SubmodelElementListDTO submodelElementList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.SubmodelElementListDTO SubmodelElementList {
      get { return submodelElementList_; }
      set {
        submodelElementList_ = value;
      }
    }

    /// <summary>Field number for the "submodelElementCollection" field.</summary>
    public const int SubmodelElementCollectionFieldNumber = 26;
    private global::FSR.GRPC.V3.SubmodelElementCollectionDTO submodelElementCollection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.SubmodelElementCollectionDTO SubmodelElementCollection {
      get { return submodelElementCollection_; }
      set {
        submodelElementCollection_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmodelElementModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmodelElementModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!extensions_.Equals(other.extensions_)) return false;
      if (Category != other.Category) return false;
      if (IdShort != other.IdShort) return false;
      if(!displayName_.Equals(other.displayName_)) return false;
      if(!description_.Equals(other.description_)) return false;
      if (!object.Equals(SemanticId, other.SemanticId)) return false;
      if(!supplementalSemanticIds_.Equals(other.supplementalSemanticIds_)) return false;
      if(!qualifiers_.Equals(other.qualifiers_)) return false;
      if(!embeddedDataSpecifications_.Equals(other.embeddedDataSpecifications_)) return false;
      if (SubmodelElementType != other.SubmodelElementType) return false;
      if (!object.Equals(AnnotatedRelationshipElement, other.AnnotatedRelationshipElement)) return false;
      if (!object.Equals(BasicEventElement, other.BasicEventElement)) return false;
      if (!object.Equals(Blob, other.Blob)) return false;
      if (!object.Equals(Capability, other.Capability)) return false;
      if (!object.Equals(DataElement, other.DataElement)) return false;
      if (!object.Equals(Entity, other.Entity)) return false;
      if (!object.Equals(EventElement, other.EventElement)) return false;
      if (!object.Equals(File, other.File)) return false;
      if (!object.Equals(MultiLanguageProperty, other.MultiLanguageProperty)) return false;
      if (!object.Equals(Operation, other.Operation)) return false;
      if (!object.Equals(Property, other.Property)) return false;
      if (!object.Equals(Range, other.Range)) return false;
      if (!object.Equals(ReferenceElement, other.ReferenceElement)) return false;
      if (!object.Equals(RelationshipElement, other.RelationshipElement)) return false;
      if (!object.Equals(SubmodelElementList, other.SubmodelElementList)) return false;
      if (!object.Equals(SubmodelElementCollection, other.SubmodelElementCollection)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= extensions_.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (IdShort.Length != 0) hash ^= IdShort.GetHashCode();
      hash ^= displayName_.GetHashCode();
      hash ^= description_.GetHashCode();
      if (semanticId_ != null) hash ^= SemanticId.GetHashCode();
      hash ^= supplementalSemanticIds_.GetHashCode();
      hash ^= qualifiers_.GetHashCode();
      hash ^= embeddedDataSpecifications_.GetHashCode();
      if (SubmodelElementType != 0) hash ^= SubmodelElementType.GetHashCode();
      if (annotatedRelationshipElement_ != null) hash ^= AnnotatedRelationshipElement.GetHashCode();
      if (basicEventElement_ != null) hash ^= BasicEventElement.GetHashCode();
      if (blob_ != null) hash ^= Blob.GetHashCode();
      if (capability_ != null) hash ^= Capability.GetHashCode();
      if (dataElement_ != null) hash ^= DataElement.GetHashCode();
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (eventElement_ != null) hash ^= EventElement.GetHashCode();
      if (file_ != null) hash ^= File.GetHashCode();
      if (multiLanguageProperty_ != null) hash ^= MultiLanguageProperty.GetHashCode();
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (property_ != null) hash ^= Property.GetHashCode();
      if (range_ != null) hash ^= Range.GetHashCode();
      if (referenceElement_ != null) hash ^= ReferenceElement.GetHashCode();
      if (relationshipElement_ != null) hash ^= RelationshipElement.GetHashCode();
      if (submodelElementList_ != null) hash ^= SubmodelElementList.GetHashCode();
      if (submodelElementCollection_ != null) hash ^= SubmodelElementCollection.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      extensions_.WriteTo(output, _repeated_extensions_codec);
      if (Category.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Category);
      }
      if (IdShort.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IdShort);
      }
      displayName_.WriteTo(output, _repeated_displayName_codec);
      description_.WriteTo(output, _repeated_description_codec);
      if (semanticId_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SemanticId);
      }
      supplementalSemanticIds_.WriteTo(output, _repeated_supplementalSemanticIds_codec);
      qualifiers_.WriteTo(output, _repeated_qualifiers_codec);
      embeddedDataSpecifications_.WriteTo(output, _repeated_embeddedDataSpecifications_codec);
      if (SubmodelElementType != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) SubmodelElementType);
      }
      if (annotatedRelationshipElement_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(AnnotatedRelationshipElement);
      }
      if (basicEventElement_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(BasicEventElement);
      }
      if (blob_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Blob);
      }
      if (capability_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Capability);
      }
      if (dataElement_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(DataElement);
      }
      if (entity_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Entity);
      }
      if (eventElement_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(EventElement);
      }
      if (file_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(File);
      }
      if (multiLanguageProperty_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(MultiLanguageProperty);
      }
      if (operation_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Operation);
      }
      if (property_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Property);
      }
      if (range_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Range);
      }
      if (referenceElement_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(ReferenceElement);
      }
      if (relationshipElement_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(RelationshipElement);
      }
      if (submodelElementList_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(SubmodelElementList);
      }
      if (submodelElementCollection_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(SubmodelElementCollection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += extensions_.CalculateSize(_repeated_extensions_codec);
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (IdShort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdShort);
      }
      size += displayName_.CalculateSize(_repeated_displayName_codec);
      size += description_.CalculateSize(_repeated_description_codec);
      if (semanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticId);
      }
      size += supplementalSemanticIds_.CalculateSize(_repeated_supplementalSemanticIds_codec);
      size += qualifiers_.CalculateSize(_repeated_qualifiers_codec);
      size += embeddedDataSpecifications_.CalculateSize(_repeated_embeddedDataSpecifications_codec);
      if (SubmodelElementType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubmodelElementType);
      }
      if (annotatedRelationshipElement_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnnotatedRelationshipElement);
      }
      if (basicEventElement_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicEventElement);
      }
      if (blob_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blob);
      }
      if (capability_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Capability);
      }
      if (dataElement_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataElement);
      }
      if (entity_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (eventElement_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EventElement);
      }
      if (file_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (multiLanguageProperty_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MultiLanguageProperty);
      }
      if (operation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (property_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      if (range_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Range);
      }
      if (referenceElement_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReferenceElement);
      }
      if (relationshipElement_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RelationshipElement);
      }
      if (submodelElementList_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SubmodelElementList);
      }
      if (submodelElementCollection_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SubmodelElementCollection);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmodelElementModel other) {
      if (other == null) {
        return;
      }
      extensions_.Add(other.extensions_);
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.IdShort.Length != 0) {
        IdShort = other.IdShort;
      }
      displayName_.Add(other.displayName_);
      description_.Add(other.description_);
      if (other.semanticId_ != null) {
        if (semanticId_ == null) {
          SemanticId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        SemanticId.MergeFrom(other.SemanticId);
      }
      supplementalSemanticIds_.Add(other.supplementalSemanticIds_);
      qualifiers_.Add(other.qualifiers_);
      embeddedDataSpecifications_.Add(other.embeddedDataSpecifications_);
      if (other.SubmodelElementType != 0) {
        SubmodelElementType = other.SubmodelElementType;
      }
      if (other.annotatedRelationshipElement_ != null) {
        if (annotatedRelationshipElement_ == null) {
          AnnotatedRelationshipElement = new global::FSR.GRPC.V3.AnnotatedRelationshipElementDTO();
        }
        AnnotatedRelationshipElement.MergeFrom(other.AnnotatedRelationshipElement);
      }
      if (other.basicEventElement_ != null) {
        if (basicEventElement_ == null) {
          BasicEventElement = new global::FSR.GRPC.V3.BasicEventElementDTO();
        }
        BasicEventElement.MergeFrom(other.BasicEventElement);
      }
      if (other.blob_ != null) {
        if (blob_ == null) {
          Blob = new global::FSR.GRPC.V3.BlobDTO();
        }
        Blob.MergeFrom(other.Blob);
      }
      if (other.capability_ != null) {
        if (capability_ == null) {
          Capability = new global::FSR.GRPC.V3.CapabilityDTO();
        }
        Capability.MergeFrom(other.Capability);
      }
      if (other.dataElement_ != null) {
        if (dataElement_ == null) {
          DataElement = new global::FSR.GRPC.V3.DataElementDTO();
        }
        DataElement.MergeFrom(other.DataElement);
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          Entity = new global::FSR.GRPC.V3.EntityDTO();
        }
        Entity.MergeFrom(other.Entity);
      }
      if (other.eventElement_ != null) {
        if (eventElement_ == null) {
          EventElement = new global::FSR.GRPC.V3.EventElementDTO();
        }
        EventElement.MergeFrom(other.EventElement);
      }
      if (other.file_ != null) {
        if (file_ == null) {
          File = new global::FSR.GRPC.V3.FileDTO();
        }
        File.MergeFrom(other.File);
      }
      if (other.multiLanguageProperty_ != null) {
        if (multiLanguageProperty_ == null) {
          MultiLanguageProperty = new global::FSR.GRPC.V3.MultiLanguagePropertyDTO();
        }
        MultiLanguageProperty.MergeFrom(other.MultiLanguageProperty);
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::FSR.GRPC.V3.OperationDTO();
        }
        Operation.MergeFrom(other.Operation);
      }
      if (other.property_ != null) {
        if (property_ == null) {
          Property = new global::FSR.GRPC.V3.PropertyDTO();
        }
        Property.MergeFrom(other.Property);
      }
      if (other.range_ != null) {
        if (range_ == null) {
          Range = new global::FSR.GRPC.V3.RangeDTO();
        }
        Range.MergeFrom(other.Range);
      }
      if (other.referenceElement_ != null) {
        if (referenceElement_ == null) {
          ReferenceElement = new global::FSR.GRPC.V3.ReferenceElementDTO();
        }
        ReferenceElement.MergeFrom(other.ReferenceElement);
      }
      if (other.relationshipElement_ != null) {
        if (relationshipElement_ == null) {
          RelationshipElement = new global::FSR.GRPC.V3.RelationshipElementDTO();
        }
        RelationshipElement.MergeFrom(other.RelationshipElement);
      }
      if (other.submodelElementList_ != null) {
        if (submodelElementList_ == null) {
          SubmodelElementList = new global::FSR.GRPC.V3.SubmodelElementListDTO();
        }
        SubmodelElementList.MergeFrom(other.SubmodelElementList);
      }
      if (other.submodelElementCollection_ != null) {
        if (submodelElementCollection_ == null) {
          SubmodelElementCollection = new global::FSR.GRPC.V3.SubmodelElementCollectionDTO();
        }
        SubmodelElementCollection.MergeFrom(other.SubmodelElementCollection);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            extensions_.AddEntriesFrom(input, _repeated_extensions_codec);
            break;
          }
          case 18: {
            Category = input.ReadString();
            break;
          }
          case 26: {
            IdShort = input.ReadString();
            break;
          }
          case 34: {
            displayName_.AddEntriesFrom(input, _repeated_displayName_codec);
            break;
          }
          case 42: {
            description_.AddEntriesFrom(input, _repeated_description_codec);
            break;
          }
          case 50: {
            if (semanticId_ == null) {
              SemanticId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(SemanticId);
            break;
          }
          case 58: {
            supplementalSemanticIds_.AddEntriesFrom(input, _repeated_supplementalSemanticIds_codec);
            break;
          }
          case 66: {
            qualifiers_.AddEntriesFrom(input, _repeated_qualifiers_codec);
            break;
          }
          case 74: {
            embeddedDataSpecifications_.AddEntriesFrom(input, _repeated_embeddedDataSpecifications_codec);
            break;
          }
          case 80: {
            SubmodelElementType = (global::FSR.GRPC.V3.SubmodelElementType) input.ReadEnum();
            break;
          }
          case 90: {
            if (annotatedRelationshipElement_ == null) {
              AnnotatedRelationshipElement = new global::FSR.GRPC.V3.AnnotatedRelationshipElementDTO();
            }
            input.ReadMessage(AnnotatedRelationshipElement);
            break;
          }
          case 98: {
            if (basicEventElement_ == null) {
              BasicEventElement = new global::FSR.GRPC.V3.BasicEventElementDTO();
            }
            input.ReadMessage(BasicEventElement);
            break;
          }
          case 106: {
            if (blob_ == null) {
              Blob = new global::FSR.GRPC.V3.BlobDTO();
            }
            input.ReadMessage(Blob);
            break;
          }
          case 114: {
            if (capability_ == null) {
              Capability = new global::FSR.GRPC.V3.CapabilityDTO();
            }
            input.ReadMessage(Capability);
            break;
          }
          case 122: {
            if (dataElement_ == null) {
              DataElement = new global::FSR.GRPC.V3.DataElementDTO();
            }
            input.ReadMessage(DataElement);
            break;
          }
          case 130: {
            if (entity_ == null) {
              Entity = new global::FSR.GRPC.V3.EntityDTO();
            }
            input.ReadMessage(Entity);
            break;
          }
          case 138: {
            if (eventElement_ == null) {
              EventElement = new global::FSR.GRPC.V3.EventElementDTO();
            }
            input.ReadMessage(EventElement);
            break;
          }
          case 146: {
            if (file_ == null) {
              File = new global::FSR.GRPC.V3.FileDTO();
            }
            input.ReadMessage(File);
            break;
          }
          case 154: {
            if (multiLanguageProperty_ == null) {
              MultiLanguageProperty = new global::FSR.GRPC.V3.MultiLanguagePropertyDTO();
            }
            input.ReadMessage(MultiLanguageProperty);
            break;
          }
          case 162: {
            if (operation_ == null) {
              Operation = new global::FSR.GRPC.V3.OperationDTO();
            }
            input.ReadMessage(Operation);
            break;
          }
          case 170: {
            if (property_ == null) {
              Property = new global::FSR.GRPC.V3.PropertyDTO();
            }
            input.ReadMessage(Property);
            break;
          }
          case 178: {
            if (range_ == null) {
              Range = new global::FSR.GRPC.V3.RangeDTO();
            }
            input.ReadMessage(Range);
            break;
          }
          case 186: {
            if (referenceElement_ == null) {
              ReferenceElement = new global::FSR.GRPC.V3.ReferenceElementDTO();
            }
            input.ReadMessage(ReferenceElement);
            break;
          }
          case 194: {
            if (relationshipElement_ == null) {
              RelationshipElement = new global::FSR.GRPC.V3.RelationshipElementDTO();
            }
            input.ReadMessage(RelationshipElement);
            break;
          }
          case 202: {
            if (submodelElementList_ == null) {
              SubmodelElementList = new global::FSR.GRPC.V3.SubmodelElementListDTO();
            }
            input.ReadMessage(SubmodelElementList);
            break;
          }
          case 210: {
            if (submodelElementCollection_ == null) {
              SubmodelElementCollection = new global::FSR.GRPC.V3.SubmodelElementCollectionDTO();
            }
            input.ReadMessage(SubmodelElementCollection);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RelationshipElementDTO : pb::IMessage<RelationshipElementDTO> {
    private static readonly pb::MessageParser<RelationshipElementDTO> _parser = new pb::MessageParser<RelationshipElementDTO>(() => new RelationshipElementDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelationshipElementDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationshipElementDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationshipElementDTO(RelationshipElementDTO other) : this() {
      first_ = other.first_ != null ? other.first_.Clone() : null;
      second_ = other.second_ != null ? other.second_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelationshipElementDTO Clone() {
      return new RelationshipElementDTO(this);
    }

    /// <summary>Field number for the "first" field.</summary>
    public const int FirstFieldNumber = 1;
    private global::FSR.GRPC.V3.ReferenceModel first_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel First {
      get { return first_; }
      set {
        first_ = value;
      }
    }

    /// <summary>Field number for the "second" field.</summary>
    public const int SecondFieldNumber = 2;
    private global::FSR.GRPC.V3.ReferenceModel second_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel Second {
      get { return second_; }
      set {
        second_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelationshipElementDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelationshipElementDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(First, other.First)) return false;
      if (!object.Equals(Second, other.Second)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (first_ != null) hash ^= First.GetHashCode();
      if (second_ != null) hash ^= Second.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (first_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(First);
      }
      if (second_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Second);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (first_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(First);
      }
      if (second_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Second);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelationshipElementDTO other) {
      if (other == null) {
        return;
      }
      if (other.first_ != null) {
        if (first_ == null) {
          First = new global::FSR.GRPC.V3.ReferenceModel();
        }
        First.MergeFrom(other.First);
      }
      if (other.second_ != null) {
        if (second_ == null) {
          Second = new global::FSR.GRPC.V3.ReferenceModel();
        }
        Second.MergeFrom(other.Second);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (first_ == null) {
              First = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(First);
            break;
          }
          case 18: {
            if (second_ == null) {
              Second = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(Second);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmodelElementListDTO : pb::IMessage<SubmodelElementListDTO> {
    private static readonly pb::MessageParser<SubmodelElementListDTO> _parser = new pb::MessageParser<SubmodelElementListDTO>(() => new SubmodelElementListDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmodelElementListDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementListDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementListDTO(SubmodelElementListDTO other) : this() {
      orderRelevant_ = other.orderRelevant_;
      semanticIdListElement_ = other.semanticIdListElement_ != null ? other.semanticIdListElement_.Clone() : null;
      typeValueListElement_ = other.typeValueListElement_;
      valueTypeListElement_ = other.valueTypeListElement_;
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementListDTO Clone() {
      return new SubmodelElementListDTO(this);
    }

    /// <summary>Field number for the "orderRelevant" field.</summary>
    public const int OrderRelevantFieldNumber = 1;
    private bool orderRelevant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OrderRelevant {
      get { return orderRelevant_; }
      set {
        orderRelevant_ = value;
      }
    }

    /// <summary>Field number for the "semanticIdListElement" field.</summary>
    public const int SemanticIdListElementFieldNumber = 2;
    private global::FSR.GRPC.V3.ReferenceModel semanticIdListElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel SemanticIdListElement {
      get { return semanticIdListElement_; }
      set {
        semanticIdListElement_ = value;
      }
    }

    /// <summary>Field number for the "typeValueListElement" field.</summary>
    public const int TypeValueListElementFieldNumber = 3;
    private global::FSR.GRPC.V3.SubmodelElementType typeValueListElement_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.SubmodelElementType TypeValueListElement {
      get { return typeValueListElement_; }
      set {
        typeValueListElement_ = value;
      }
    }

    /// <summary>Field number for the "valueTypeListElement" field.</summary>
    public const int ValueTypeListElementFieldNumber = 4;
    private global::FSR.GRPC.V3.DataTypeDefXsd valueTypeListElement_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.DataTypeDefXsd ValueTypeListElement {
      get { return valueTypeListElement_; }
      set {
        valueTypeListElement_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 5;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.SubmodelElementModel> _repeated_value_codec
        = pb::FieldCodec.ForMessage(42, global::FSR.GRPC.V3.SubmodelElementModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.SubmodelElementModel> value_ = new pbc::RepeatedField<global::FSR.GRPC.V3.SubmodelElementModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.SubmodelElementModel> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmodelElementListDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmodelElementListDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderRelevant != other.OrderRelevant) return false;
      if (!object.Equals(SemanticIdListElement, other.SemanticIdListElement)) return false;
      if (TypeValueListElement != other.TypeValueListElement) return false;
      if (ValueTypeListElement != other.ValueTypeListElement) return false;
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderRelevant != false) hash ^= OrderRelevant.GetHashCode();
      if (semanticIdListElement_ != null) hash ^= SemanticIdListElement.GetHashCode();
      if (TypeValueListElement != 0) hash ^= TypeValueListElement.GetHashCode();
      if (ValueTypeListElement != 0) hash ^= ValueTypeListElement.GetHashCode();
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderRelevant != false) {
        output.WriteRawTag(8);
        output.WriteBool(OrderRelevant);
      }
      if (semanticIdListElement_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SemanticIdListElement);
      }
      if (TypeValueListElement != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TypeValueListElement);
      }
      if (ValueTypeListElement != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ValueTypeListElement);
      }
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderRelevant != false) {
        size += 1 + 1;
      }
      if (semanticIdListElement_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticIdListElement);
      }
      if (TypeValueListElement != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TypeValueListElement);
      }
      if (ValueTypeListElement != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValueTypeListElement);
      }
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmodelElementListDTO other) {
      if (other == null) {
        return;
      }
      if (other.OrderRelevant != false) {
        OrderRelevant = other.OrderRelevant;
      }
      if (other.semanticIdListElement_ != null) {
        if (semanticIdListElement_ == null) {
          SemanticIdListElement = new global::FSR.GRPC.V3.ReferenceModel();
        }
        SemanticIdListElement.MergeFrom(other.SemanticIdListElement);
      }
      if (other.TypeValueListElement != 0) {
        TypeValueListElement = other.TypeValueListElement;
      }
      if (other.ValueTypeListElement != 0) {
        ValueTypeListElement = other.ValueTypeListElement;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OrderRelevant = input.ReadBool();
            break;
          }
          case 18: {
            if (semanticIdListElement_ == null) {
              SemanticIdListElement = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(SemanticIdListElement);
            break;
          }
          case 24: {
            TypeValueListElement = (global::FSR.GRPC.V3.SubmodelElementType) input.ReadEnum();
            break;
          }
          case 32: {
            ValueTypeListElement = (global::FSR.GRPC.V3.DataTypeDefXsd) input.ReadEnum();
            break;
          }
          case 42: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmodelElementCollectionDTO : pb::IMessage<SubmodelElementCollectionDTO> {
    private static readonly pb::MessageParser<SubmodelElementCollectionDTO> _parser = new pb::MessageParser<SubmodelElementCollectionDTO>(() => new SubmodelElementCollectionDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmodelElementCollectionDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementCollectionDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementCollectionDTO(SubmodelElementCollectionDTO other) : this() {
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmodelElementCollectionDTO Clone() {
      return new SubmodelElementCollectionDTO(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.SubmodelElementModel> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.V3.SubmodelElementModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.SubmodelElementModel> value_ = new pbc::RepeatedField<global::FSR.GRPC.V3.SubmodelElementModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.SubmodelElementModel> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmodelElementCollectionDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmodelElementCollectionDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmodelElementCollectionDTO other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Intentionally empty
  /// </summary>
  public sealed partial class DataElementDTO : pb::IMessage<DataElementDTO> {
    private static readonly pb::MessageParser<DataElementDTO> _parser = new pb::MessageParser<DataElementDTO>(() => new DataElementDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataElementDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataElementDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataElementDTO(DataElementDTO other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataElementDTO Clone() {
      return new DataElementDTO(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataElementDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataElementDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataElementDTO other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class DataElementModel : pb::IMessage<DataElementModel> {
    private static readonly pb::MessageParser<DataElementModel> _parser = new pb::MessageParser<DataElementModel>(() => new DataElementModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataElementModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataElementModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataElementModel(DataElementModel other) : this() {
      extensions_ = other.extensions_.Clone();
      category_ = other.category_;
      idShort_ = other.idShort_;
      displayName_ = other.displayName_.Clone();
      description_ = other.description_.Clone();
      semanticId_ = other.semanticId_ != null ? other.semanticId_.Clone() : null;
      supplementalSemanticIds_ = other.supplementalSemanticIds_.Clone();
      qualifiers_ = other.qualifiers_.Clone();
      embeddedDataSpecifications_ = other.embeddedDataSpecifications_.Clone();
      submodelElementType_ = other.submodelElementType_;
      property_ = other.property_ != null ? other.property_.Clone() : null;
      multiLanguageProperty_ = other.multiLanguageProperty_ != null ? other.multiLanguageProperty_.Clone() : null;
      range_ = other.range_ != null ? other.range_.Clone() : null;
      referenceElement_ = other.referenceElement_ != null ? other.referenceElement_.Clone() : null;
      blob_ = other.blob_ != null ? other.blob_.Clone() : null;
      file_ = other.file_ != null ? other.file_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataElementModel Clone() {
      return new DataElementModel(this);
    }

    /// <summary>Field number for the "extensions" field.</summary>
    public const int ExtensionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.ExtensionModel> _repeated_extensions_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.V3.ExtensionModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.ExtensionModel> extensions_ = new pbc::RepeatedField<global::FSR.GRPC.V3.ExtensionModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.ExtensionModel> Extensions {
      get { return extensions_; }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 2;
    private string category_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idShort" field.</summary>
    public const int IdShortFieldNumber = 3;
    private string idShort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdShort {
      get { return idShort_; }
      set {
        idShort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.LangStringModel> _repeated_displayName_codec
        = pb::FieldCodec.ForMessage(34, global::FSR.GRPC.V3.LangStringModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> displayName_ = new pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> DisplayName {
      get { return displayName_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.LangStringModel> _repeated_description_codec
        = pb::FieldCodec.ForMessage(42, global::FSR.GRPC.V3.LangStringModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> description_ = new pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> Description {
      get { return description_; }
    }

    /// <summary>Field number for the "semanticId" field.</summary>
    public const int SemanticIdFieldNumber = 6;
    private global::FSR.GRPC.V3.ReferenceModel semanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel SemanticId {
      get { return semanticId_; }
      set {
        semanticId_ = value;
      }
    }

    /// <summary>Field number for the "supplementalSemanticIds" field.</summary>
    public const int SupplementalSemanticIdsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.ReferenceModel> _repeated_supplementalSemanticIds_codec
        = pb::FieldCodec.ForMessage(58, global::FSR.GRPC.V3.ReferenceModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> supplementalSemanticIds_ = new pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> SupplementalSemanticIds {
      get { return supplementalSemanticIds_; }
    }

    /// <summary>Field number for the "qualifiers" field.</summary>
    public const int QualifiersFieldNumber = 8;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.QualifierModel> _repeated_qualifiers_codec
        = pb::FieldCodec.ForMessage(66, global::FSR.GRPC.V3.QualifierModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.QualifierModel> qualifiers_ = new pbc::RepeatedField<global::FSR.GRPC.V3.QualifierModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.QualifierModel> Qualifiers {
      get { return qualifiers_; }
    }

    /// <summary>Field number for the "embeddedDataSpecifications" field.</summary>
    public const int EmbeddedDataSpecificationsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> _repeated_embeddedDataSpecifications_codec
        = pb::FieldCodec.ForMessage(74, global::FSR.GRPC.V3.EmbeddedDataSpecificationModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> embeddedDataSpecifications_ = new pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> EmbeddedDataSpecifications {
      get { return embeddedDataSpecifications_; }
    }

    /// <summary>Field number for the "submodelElementType" field.</summary>
    public const int SubmodelElementTypeFieldNumber = 10;
    private global::FSR.GRPC.V3.SubmodelElementType submodelElementType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.SubmodelElementType SubmodelElementType {
      get { return submodelElementType_; }
      set {
        submodelElementType_ = value;
      }
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 11;
    private global::FSR.GRPC.V3.PropertyDTO property_;
    /// <summary>
    /// DataElement payload here.
    /// TODO: Find better solution! (Current solution causes an overhead of around 48 bytes per model)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.PropertyDTO Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    /// <summary>Field number for the "multiLanguageProperty" field.</summary>
    public const int MultiLanguagePropertyFieldNumber = 12;
    private global::FSR.GRPC.V3.MultiLanguagePropertyDTO multiLanguageProperty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.MultiLanguagePropertyDTO MultiLanguageProperty {
      get { return multiLanguageProperty_; }
      set {
        multiLanguageProperty_ = value;
      }
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 13;
    private global::FSR.GRPC.V3.RangeDTO range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.RangeDTO Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    /// <summary>Field number for the "referenceElement" field.</summary>
    public const int ReferenceElementFieldNumber = 14;
    private global::FSR.GRPC.V3.ReferenceElementDTO referenceElement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceElementDTO ReferenceElement {
      get { return referenceElement_; }
      set {
        referenceElement_ = value;
      }
    }

    /// <summary>Field number for the "blob" field.</summary>
    public const int BlobFieldNumber = 15;
    private global::FSR.GRPC.V3.BlobDTO blob_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.BlobDTO Blob {
      get { return blob_; }
      set {
        blob_ = value;
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 16;
    private global::FSR.GRPC.V3.FileDTO file_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.FileDTO File {
      get { return file_; }
      set {
        file_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataElementModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataElementModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!extensions_.Equals(other.extensions_)) return false;
      if (Category != other.Category) return false;
      if (IdShort != other.IdShort) return false;
      if(!displayName_.Equals(other.displayName_)) return false;
      if(!description_.Equals(other.description_)) return false;
      if (!object.Equals(SemanticId, other.SemanticId)) return false;
      if(!supplementalSemanticIds_.Equals(other.supplementalSemanticIds_)) return false;
      if(!qualifiers_.Equals(other.qualifiers_)) return false;
      if(!embeddedDataSpecifications_.Equals(other.embeddedDataSpecifications_)) return false;
      if (SubmodelElementType != other.SubmodelElementType) return false;
      if (!object.Equals(Property, other.Property)) return false;
      if (!object.Equals(MultiLanguageProperty, other.MultiLanguageProperty)) return false;
      if (!object.Equals(Range, other.Range)) return false;
      if (!object.Equals(ReferenceElement, other.ReferenceElement)) return false;
      if (!object.Equals(Blob, other.Blob)) return false;
      if (!object.Equals(File, other.File)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= extensions_.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (IdShort.Length != 0) hash ^= IdShort.GetHashCode();
      hash ^= displayName_.GetHashCode();
      hash ^= description_.GetHashCode();
      if (semanticId_ != null) hash ^= SemanticId.GetHashCode();
      hash ^= supplementalSemanticIds_.GetHashCode();
      hash ^= qualifiers_.GetHashCode();
      hash ^= embeddedDataSpecifications_.GetHashCode();
      if (SubmodelElementType != 0) hash ^= SubmodelElementType.GetHashCode();
      if (property_ != null) hash ^= Property.GetHashCode();
      if (multiLanguageProperty_ != null) hash ^= MultiLanguageProperty.GetHashCode();
      if (range_ != null) hash ^= Range.GetHashCode();
      if (referenceElement_ != null) hash ^= ReferenceElement.GetHashCode();
      if (blob_ != null) hash ^= Blob.GetHashCode();
      if (file_ != null) hash ^= File.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      extensions_.WriteTo(output, _repeated_extensions_codec);
      if (Category.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Category);
      }
      if (IdShort.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IdShort);
      }
      displayName_.WriteTo(output, _repeated_displayName_codec);
      description_.WriteTo(output, _repeated_description_codec);
      if (semanticId_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SemanticId);
      }
      supplementalSemanticIds_.WriteTo(output, _repeated_supplementalSemanticIds_codec);
      qualifiers_.WriteTo(output, _repeated_qualifiers_codec);
      embeddedDataSpecifications_.WriteTo(output, _repeated_embeddedDataSpecifications_codec);
      if (SubmodelElementType != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) SubmodelElementType);
      }
      if (property_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Property);
      }
      if (multiLanguageProperty_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(MultiLanguageProperty);
      }
      if (range_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Range);
      }
      if (referenceElement_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ReferenceElement);
      }
      if (blob_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Blob);
      }
      if (file_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(File);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += extensions_.CalculateSize(_repeated_extensions_codec);
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (IdShort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdShort);
      }
      size += displayName_.CalculateSize(_repeated_displayName_codec);
      size += description_.CalculateSize(_repeated_description_codec);
      if (semanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SemanticId);
      }
      size += supplementalSemanticIds_.CalculateSize(_repeated_supplementalSemanticIds_codec);
      size += qualifiers_.CalculateSize(_repeated_qualifiers_codec);
      size += embeddedDataSpecifications_.CalculateSize(_repeated_embeddedDataSpecifications_codec);
      if (SubmodelElementType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubmodelElementType);
      }
      if (property_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      if (multiLanguageProperty_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MultiLanguageProperty);
      }
      if (range_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Range);
      }
      if (referenceElement_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReferenceElement);
      }
      if (blob_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blob);
      }
      if (file_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(File);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataElementModel other) {
      if (other == null) {
        return;
      }
      extensions_.Add(other.extensions_);
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.IdShort.Length != 0) {
        IdShort = other.IdShort;
      }
      displayName_.Add(other.displayName_);
      description_.Add(other.description_);
      if (other.semanticId_ != null) {
        if (semanticId_ == null) {
          SemanticId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        SemanticId.MergeFrom(other.SemanticId);
      }
      supplementalSemanticIds_.Add(other.supplementalSemanticIds_);
      qualifiers_.Add(other.qualifiers_);
      embeddedDataSpecifications_.Add(other.embeddedDataSpecifications_);
      if (other.SubmodelElementType != 0) {
        SubmodelElementType = other.SubmodelElementType;
      }
      if (other.property_ != null) {
        if (property_ == null) {
          Property = new global::FSR.GRPC.V3.PropertyDTO();
        }
        Property.MergeFrom(other.Property);
      }
      if (other.multiLanguageProperty_ != null) {
        if (multiLanguageProperty_ == null) {
          MultiLanguageProperty = new global::FSR.GRPC.V3.MultiLanguagePropertyDTO();
        }
        MultiLanguageProperty.MergeFrom(other.MultiLanguageProperty);
      }
      if (other.range_ != null) {
        if (range_ == null) {
          Range = new global::FSR.GRPC.V3.RangeDTO();
        }
        Range.MergeFrom(other.Range);
      }
      if (other.referenceElement_ != null) {
        if (referenceElement_ == null) {
          ReferenceElement = new global::FSR.GRPC.V3.ReferenceElementDTO();
        }
        ReferenceElement.MergeFrom(other.ReferenceElement);
      }
      if (other.blob_ != null) {
        if (blob_ == null) {
          Blob = new global::FSR.GRPC.V3.BlobDTO();
        }
        Blob.MergeFrom(other.Blob);
      }
      if (other.file_ != null) {
        if (file_ == null) {
          File = new global::FSR.GRPC.V3.FileDTO();
        }
        File.MergeFrom(other.File);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            extensions_.AddEntriesFrom(input, _repeated_extensions_codec);
            break;
          }
          case 18: {
            Category = input.ReadString();
            break;
          }
          case 26: {
            IdShort = input.ReadString();
            break;
          }
          case 34: {
            displayName_.AddEntriesFrom(input, _repeated_displayName_codec);
            break;
          }
          case 42: {
            description_.AddEntriesFrom(input, _repeated_description_codec);
            break;
          }
          case 50: {
            if (semanticId_ == null) {
              SemanticId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(SemanticId);
            break;
          }
          case 58: {
            supplementalSemanticIds_.AddEntriesFrom(input, _repeated_supplementalSemanticIds_codec);
            break;
          }
          case 66: {
            qualifiers_.AddEntriesFrom(input, _repeated_qualifiers_codec);
            break;
          }
          case 74: {
            embeddedDataSpecifications_.AddEntriesFrom(input, _repeated_embeddedDataSpecifications_codec);
            break;
          }
          case 80: {
            SubmodelElementType = (global::FSR.GRPC.V3.SubmodelElementType) input.ReadEnum();
            break;
          }
          case 90: {
            if (property_ == null) {
              Property = new global::FSR.GRPC.V3.PropertyDTO();
            }
            input.ReadMessage(Property);
            break;
          }
          case 98: {
            if (multiLanguageProperty_ == null) {
              MultiLanguageProperty = new global::FSR.GRPC.V3.MultiLanguagePropertyDTO();
            }
            input.ReadMessage(MultiLanguageProperty);
            break;
          }
          case 106: {
            if (range_ == null) {
              Range = new global::FSR.GRPC.V3.RangeDTO();
            }
            input.ReadMessage(Range);
            break;
          }
          case 114: {
            if (referenceElement_ == null) {
              ReferenceElement = new global::FSR.GRPC.V3.ReferenceElementDTO();
            }
            input.ReadMessage(ReferenceElement);
            break;
          }
          case 122: {
            if (blob_ == null) {
              Blob = new global::FSR.GRPC.V3.BlobDTO();
            }
            input.ReadMessage(Blob);
            break;
          }
          case 130: {
            if (file_ == null) {
              File = new global::FSR.GRPC.V3.FileDTO();
            }
            input.ReadMessage(File);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PropertyDTO : pb::IMessage<PropertyDTO> {
    private static readonly pb::MessageParser<PropertyDTO> _parser = new pb::MessageParser<PropertyDTO>(() => new PropertyDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertyDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyDTO(PropertyDTO other) : this() {
      valueType_ = other.valueType_;
      value_ = other.value_;
      valueId_ = other.valueId_ != null ? other.valueId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyDTO Clone() {
      return new PropertyDTO(this);
    }

    /// <summary>Field number for the "valueType" field.</summary>
    public const int ValueTypeFieldNumber = 1;
    private global::FSR.GRPC.V3.DataTypeDefXsd valueType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.DataTypeDefXsd ValueType {
      get { return valueType_; }
      set {
        valueType_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valueId" field.</summary>
    public const int ValueIdFieldNumber = 3;
    private global::FSR.GRPC.V3.ReferenceModel valueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel ValueId {
      get { return valueId_; }
      set {
        valueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertyDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertyDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ValueType != other.ValueType) return false;
      if (Value != other.Value) return false;
      if (!object.Equals(ValueId, other.ValueId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ValueType != 0) hash ^= ValueType.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (valueId_ != null) hash ^= ValueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ValueType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ValueType);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (valueId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ValueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ValueType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValueType);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (valueId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertyDTO other) {
      if (other == null) {
        return;
      }
      if (other.ValueType != 0) {
        ValueType = other.ValueType;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.valueId_ != null) {
        if (valueId_ == null) {
          ValueId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        ValueId.MergeFrom(other.ValueId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ValueType = (global::FSR.GRPC.V3.DataTypeDefXsd) input.ReadEnum();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 26: {
            if (valueId_ == null) {
              ValueId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(ValueId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiLanguagePropertyDTO : pb::IMessage<MultiLanguagePropertyDTO> {
    private static readonly pb::MessageParser<MultiLanguagePropertyDTO> _parser = new pb::MessageParser<MultiLanguagePropertyDTO>(() => new MultiLanguagePropertyDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiLanguagePropertyDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiLanguagePropertyDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiLanguagePropertyDTO(MultiLanguagePropertyDTO other) : this() {
      value_ = other.value_.Clone();
      valueId_ = other.valueId_ != null ? other.valueId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiLanguagePropertyDTO Clone() {
      return new MultiLanguagePropertyDTO(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.LangStringModel> _repeated_value_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.V3.LangStringModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> value_ = new pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> Value {
      get { return value_; }
    }

    /// <summary>Field number for the "valueId" field.</summary>
    public const int ValueIdFieldNumber = 2;
    private global::FSR.GRPC.V3.ReferenceModel valueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel ValueId {
      get { return valueId_; }
      set {
        valueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiLanguagePropertyDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiLanguagePropertyDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!value_.Equals(other.value_)) return false;
      if (!object.Equals(ValueId, other.ValueId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= value_.GetHashCode();
      if (valueId_ != null) hash ^= ValueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      value_.WriteTo(output, _repeated_value_codec);
      if (valueId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ValueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += value_.CalculateSize(_repeated_value_codec);
      if (valueId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiLanguagePropertyDTO other) {
      if (other == null) {
        return;
      }
      value_.Add(other.value_);
      if (other.valueId_ != null) {
        if (valueId_ == null) {
          ValueId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        ValueId.MergeFrom(other.ValueId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
          case 18: {
            if (valueId_ == null) {
              ValueId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(ValueId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RangeDTO : pb::IMessage<RangeDTO> {
    private static readonly pb::MessageParser<RangeDTO> _parser = new pb::MessageParser<RangeDTO>(() => new RangeDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RangeDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RangeDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RangeDTO(RangeDTO other) : this() {
      valueType_ = other.valueType_;
      min_ = other.min_;
      max_ = other.max_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RangeDTO Clone() {
      return new RangeDTO(this);
    }

    /// <summary>Field number for the "valueType" field.</summary>
    public const int ValueTypeFieldNumber = 1;
    private global::FSR.GRPC.V3.DataTypeDefXsd valueType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.DataTypeDefXsd ValueType {
      get { return valueType_; }
      set {
        valueType_ = value;
      }
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 2;
    private string min_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Min {
      get { return min_; }
      set {
        min_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 3;
    private string max_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Max {
      get { return max_; }
      set {
        max_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RangeDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RangeDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ValueType != other.ValueType) return false;
      if (Min != other.Min) return false;
      if (Max != other.Max) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ValueType != 0) hash ^= ValueType.GetHashCode();
      if (Min.Length != 0) hash ^= Min.GetHashCode();
      if (Max.Length != 0) hash ^= Max.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ValueType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ValueType);
      }
      if (Min.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Min);
      }
      if (Max.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Max);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ValueType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValueType);
      }
      if (Min.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Min);
      }
      if (Max.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Max);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RangeDTO other) {
      if (other == null) {
        return;
      }
      if (other.ValueType != 0) {
        ValueType = other.ValueType;
      }
      if (other.Min.Length != 0) {
        Min = other.Min;
      }
      if (other.Max.Length != 0) {
        Max = other.Max;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ValueType = (global::FSR.GRPC.V3.DataTypeDefXsd) input.ReadEnum();
            break;
          }
          case 18: {
            Min = input.ReadString();
            break;
          }
          case 26: {
            Max = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReferenceElementDTO : pb::IMessage<ReferenceElementDTO> {
    private static readonly pb::MessageParser<ReferenceElementDTO> _parser = new pb::MessageParser<ReferenceElementDTO>(() => new ReferenceElementDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReferenceElementDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceElementDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceElementDTO(ReferenceElementDTO other) : this() {
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceElementDTO Clone() {
      return new ReferenceElementDTO(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::FSR.GRPC.V3.ReferenceModel value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReferenceElementDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReferenceElementDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (value_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReferenceElementDTO other) {
      if (other == null) {
        return;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::FSR.GRPC.V3.ReferenceModel();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (value_ == null) {
              Value = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlobDTO : pb::IMessage<BlobDTO> {
    private static readonly pb::MessageParser<BlobDTO> _parser = new pb::MessageParser<BlobDTO>(() => new BlobDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlobDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobDTO(BlobDTO other) : this() {
      value_ = other.value_;
      contentType_ = other.contentType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobDTO Clone() {
      return new BlobDTO(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contentType" field.</summary>
    public const int ContentTypeFieldNumber = 2;
    private string contentType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlobDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlobDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (ContentType != other.ContentType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      if (ContentType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (ContentType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlobDTO other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
          case 18: {
            ContentType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileDTO : pb::IMessage<FileDTO> {
    private static readonly pb::MessageParser<FileDTO> _parser = new pb::MessageParser<FileDTO>(() => new FileDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileDTO(FileDTO other) : this() {
      value_ = other.value_;
      contentType_ = other.contentType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileDTO Clone() {
      return new FileDTO(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contentType" field.</summary>
    public const int ContentTypeFieldNumber = 2;
    private string contentType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentType {
      get { return contentType_; }
      set {
        contentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (ContentType != other.ContentType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (ContentType.Length != 0) hash ^= ContentType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (ContentType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (ContentType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileDTO other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.ContentType.Length != 0) {
        ContentType = other.ContentType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
          case 18: {
            ContentType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AnnotatedRelationshipElementDTO : pb::IMessage<AnnotatedRelationshipElementDTO> {
    private static readonly pb::MessageParser<AnnotatedRelationshipElementDTO> _parser = new pb::MessageParser<AnnotatedRelationshipElementDTO>(() => new AnnotatedRelationshipElementDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnnotatedRelationshipElementDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotatedRelationshipElementDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotatedRelationshipElementDTO(AnnotatedRelationshipElementDTO other) : this() {
      first_ = other.first_ != null ? other.first_.Clone() : null;
      second_ = other.second_ != null ? other.second_.Clone() : null;
      annotations_ = other.annotations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnotatedRelationshipElementDTO Clone() {
      return new AnnotatedRelationshipElementDTO(this);
    }

    /// <summary>Field number for the "first" field.</summary>
    public const int FirstFieldNumber = 1;
    private global::FSR.GRPC.V3.ReferenceModel first_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel First {
      get { return first_; }
      set {
        first_ = value;
      }
    }

    /// <summary>Field number for the "second" field.</summary>
    public const int SecondFieldNumber = 2;
    private global::FSR.GRPC.V3.ReferenceModel second_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel Second {
      get { return second_; }
      set {
        second_ = value;
      }
    }

    /// <summary>Field number for the "annotations" field.</summary>
    public const int AnnotationsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.DataElementModel> _repeated_annotations_codec
        = pb::FieldCodec.ForMessage(26, global::FSR.GRPC.V3.DataElementModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.DataElementModel> annotations_ = new pbc::RepeatedField<global::FSR.GRPC.V3.DataElementModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.DataElementModel> Annotations {
      get { return annotations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnnotatedRelationshipElementDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnnotatedRelationshipElementDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(First, other.First)) return false;
      if (!object.Equals(Second, other.Second)) return false;
      if(!annotations_.Equals(other.annotations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (first_ != null) hash ^= First.GetHashCode();
      if (second_ != null) hash ^= Second.GetHashCode();
      hash ^= annotations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (first_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(First);
      }
      if (second_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Second);
      }
      annotations_.WriteTo(output, _repeated_annotations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (first_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(First);
      }
      if (second_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Second);
      }
      size += annotations_.CalculateSize(_repeated_annotations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnnotatedRelationshipElementDTO other) {
      if (other == null) {
        return;
      }
      if (other.first_ != null) {
        if (first_ == null) {
          First = new global::FSR.GRPC.V3.ReferenceModel();
        }
        First.MergeFrom(other.First);
      }
      if (other.second_ != null) {
        if (second_ == null) {
          Second = new global::FSR.GRPC.V3.ReferenceModel();
        }
        Second.MergeFrom(other.Second);
      }
      annotations_.Add(other.annotations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (first_ == null) {
              First = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(First);
            break;
          }
          case 18: {
            if (second_ == null) {
              Second = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(Second);
            break;
          }
          case 26: {
            annotations_.AddEntriesFrom(input, _repeated_annotations_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EntityDTO : pb::IMessage<EntityDTO> {
    private static readonly pb::MessageParser<EntityDTO> _parser = new pb::MessageParser<EntityDTO>(() => new EntityDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityDTO(EntityDTO other) : this() {
      statements_ = other.statements_.Clone();
      entityType_ = other.entityType_;
      globalAssetId_ = other.globalAssetId_;
      specificAssetIds_ = other.specificAssetIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityDTO Clone() {
      return new EntityDTO(this);
    }

    /// <summary>Field number for the "statements" field.</summary>
    public const int StatementsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.SubmodelElementModel> _repeated_statements_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.V3.SubmodelElementModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.SubmodelElementModel> statements_ = new pbc::RepeatedField<global::FSR.GRPC.V3.SubmodelElementModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.SubmodelElementModel> Statements {
      get { return statements_; }
    }

    /// <summary>Field number for the "entityType" field.</summary>
    public const int EntityTypeFieldNumber = 2;
    private global::FSR.GRPC.V3.EntityType entityType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.EntityType EntityType {
      get { return entityType_; }
      set {
        entityType_ = value;
      }
    }

    /// <summary>Field number for the "globalAssetId" field.</summary>
    public const int GlobalAssetIdFieldNumber = 3;
    private string globalAssetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GlobalAssetId {
      get { return globalAssetId_; }
      set {
        globalAssetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "specificAssetIds" field.</summary>
    public const int SpecificAssetIdsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.SpecificAssetIdModel> _repeated_specificAssetIds_codec
        = pb::FieldCodec.ForMessage(34, global::FSR.GRPC.V3.SpecificAssetIdModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.SpecificAssetIdModel> specificAssetIds_ = new pbc::RepeatedField<global::FSR.GRPC.V3.SpecificAssetIdModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.SpecificAssetIdModel> SpecificAssetIds {
      get { return specificAssetIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!statements_.Equals(other.statements_)) return false;
      if (EntityType != other.EntityType) return false;
      if (GlobalAssetId != other.GlobalAssetId) return false;
      if(!specificAssetIds_.Equals(other.specificAssetIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= statements_.GetHashCode();
      if (EntityType != 0) hash ^= EntityType.GetHashCode();
      if (GlobalAssetId.Length != 0) hash ^= GlobalAssetId.GetHashCode();
      hash ^= specificAssetIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      statements_.WriteTo(output, _repeated_statements_codec);
      if (EntityType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) EntityType);
      }
      if (GlobalAssetId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GlobalAssetId);
      }
      specificAssetIds_.WriteTo(output, _repeated_specificAssetIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += statements_.CalculateSize(_repeated_statements_codec);
      if (EntityType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntityType);
      }
      if (GlobalAssetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GlobalAssetId);
      }
      size += specificAssetIds_.CalculateSize(_repeated_specificAssetIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityDTO other) {
      if (other == null) {
        return;
      }
      statements_.Add(other.statements_);
      if (other.EntityType != 0) {
        EntityType = other.EntityType;
      }
      if (other.GlobalAssetId.Length != 0) {
        GlobalAssetId = other.GlobalAssetId;
      }
      specificAssetIds_.Add(other.specificAssetIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            statements_.AddEntriesFrom(input, _repeated_statements_codec);
            break;
          }
          case 16: {
            EntityType = (global::FSR.GRPC.V3.EntityType) input.ReadEnum();
            break;
          }
          case 26: {
            GlobalAssetId = input.ReadString();
            break;
          }
          case 34: {
            specificAssetIds_.AddEntriesFrom(input, _repeated_specificAssetIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EventPayloadModel : pb::IMessage<EventPayloadModel> {
    private static readonly pb::MessageParser<EventPayloadModel> _parser = new pb::MessageParser<EventPayloadModel>(() => new EventPayloadModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventPayloadModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPayloadModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPayloadModel(EventPayloadModel other) : this() {
      source_ = other.source_ != null ? other.source_.Clone() : null;
      sourceSemanticId_ = other.sourceSemanticId_ != null ? other.sourceSemanticId_.Clone() : null;
      observableReference_ = other.observableReference_ != null ? other.observableReference_.Clone() : null;
      observableSemanticId_ = other.observableSemanticId_ != null ? other.observableSemanticId_.Clone() : null;
      topic_ = other.topic_;
      subjectId_ = other.subjectId_ != null ? other.subjectId_.Clone() : null;
      timestamp_ = other.timestamp_;
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPayloadModel Clone() {
      return new EventPayloadModel(this);
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 1;
    private global::FSR.GRPC.V3.ReferenceModel source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "sourceSemanticId" field.</summary>
    public const int SourceSemanticIdFieldNumber = 2;
    private global::FSR.GRPC.V3.ReferenceModel sourceSemanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel SourceSemanticId {
      get { return sourceSemanticId_; }
      set {
        sourceSemanticId_ = value;
      }
    }

    /// <summary>Field number for the "observableReference" field.</summary>
    public const int ObservableReferenceFieldNumber = 3;
    private global::FSR.GRPC.V3.ReferenceModel observableReference_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel ObservableReference {
      get { return observableReference_; }
      set {
        observableReference_ = value;
      }
    }

    /// <summary>Field number for the "observableSemanticId" field.</summary>
    public const int ObservableSemanticIdFieldNumber = 4;
    private global::FSR.GRPC.V3.ReferenceModel observableSemanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel ObservableSemanticId {
      get { return observableSemanticId_; }
      set {
        observableSemanticId_ = value;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 5;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subjectId" field.</summary>
    public const int SubjectIdFieldNumber = 6;
    private global::FSR.GRPC.V3.ReferenceModel subjectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel SubjectId {
      get { return subjectId_; }
      set {
        subjectId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 7;
    private string timestamp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 8;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventPayloadModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventPayloadModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Source, other.Source)) return false;
      if (!object.Equals(SourceSemanticId, other.SourceSemanticId)) return false;
      if (!object.Equals(ObservableReference, other.ObservableReference)) return false;
      if (!object.Equals(ObservableSemanticId, other.ObservableSemanticId)) return false;
      if (Topic != other.Topic) return false;
      if (!object.Equals(SubjectId, other.SubjectId)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (source_ != null) hash ^= Source.GetHashCode();
      if (sourceSemanticId_ != null) hash ^= SourceSemanticId.GetHashCode();
      if (observableReference_ != null) hash ^= ObservableReference.GetHashCode();
      if (observableSemanticId_ != null) hash ^= ObservableSemanticId.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (subjectId_ != null) hash ^= SubjectId.GetHashCode();
      if (Timestamp.Length != 0) hash ^= Timestamp.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (source_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Source);
      }
      if (sourceSemanticId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SourceSemanticId);
      }
      if (observableReference_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ObservableReference);
      }
      if (observableSemanticId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ObservableSemanticId);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Topic);
      }
      if (subjectId_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SubjectId);
      }
      if (Timestamp.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Timestamp);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      if (sourceSemanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SourceSemanticId);
      }
      if (observableReference_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObservableReference);
      }
      if (observableSemanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObservableSemanticId);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (subjectId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubjectId);
      }
      if (Timestamp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Timestamp);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventPayloadModel other) {
      if (other == null) {
        return;
      }
      if (other.source_ != null) {
        if (source_ == null) {
          Source = new global::FSR.GRPC.V3.ReferenceModel();
        }
        Source.MergeFrom(other.Source);
      }
      if (other.sourceSemanticId_ != null) {
        if (sourceSemanticId_ == null) {
          SourceSemanticId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        SourceSemanticId.MergeFrom(other.SourceSemanticId);
      }
      if (other.observableReference_ != null) {
        if (observableReference_ == null) {
          ObservableReference = new global::FSR.GRPC.V3.ReferenceModel();
        }
        ObservableReference.MergeFrom(other.ObservableReference);
      }
      if (other.observableSemanticId_ != null) {
        if (observableSemanticId_ == null) {
          ObservableSemanticId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        ObservableSemanticId.MergeFrom(other.ObservableSemanticId);
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      if (other.subjectId_ != null) {
        if (subjectId_ == null) {
          SubjectId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        SubjectId.MergeFrom(other.SubjectId);
      }
      if (other.Timestamp.Length != 0) {
        Timestamp = other.Timestamp;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (source_ == null) {
              Source = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(Source);
            break;
          }
          case 18: {
            if (sourceSemanticId_ == null) {
              SourceSemanticId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(SourceSemanticId);
            break;
          }
          case 26: {
            if (observableReference_ == null) {
              ObservableReference = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(ObservableReference);
            break;
          }
          case 34: {
            if (observableSemanticId_ == null) {
              ObservableSemanticId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(ObservableSemanticId);
            break;
          }
          case 42: {
            Topic = input.ReadString();
            break;
          }
          case 50: {
            if (subjectId_ == null) {
              SubjectId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(SubjectId);
            break;
          }
          case 58: {
            Timestamp = input.ReadString();
            break;
          }
          case 66: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Intentionally empty
  /// </summary>
  public sealed partial class EventElementDTO : pb::IMessage<EventElementDTO> {
    private static readonly pb::MessageParser<EventElementDTO> _parser = new pb::MessageParser<EventElementDTO>(() => new EventElementDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventElementDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventElementDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventElementDTO(EventElementDTO other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventElementDTO Clone() {
      return new EventElementDTO(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventElementDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventElementDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventElementDTO other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class BasicEventElementDTO : pb::IMessage<BasicEventElementDTO> {
    private static readonly pb::MessageParser<BasicEventElementDTO> _parser = new pb::MessageParser<BasicEventElementDTO>(() => new BasicEventElementDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BasicEventElementDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicEventElementDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicEventElementDTO(BasicEventElementDTO other) : this() {
      observed_ = other.observed_ != null ? other.observed_.Clone() : null;
      direction_ = other.direction_;
      state_ = other.state_;
      messageTopic_ = other.messageTopic_;
      messageBroker_ = other.messageBroker_ != null ? other.messageBroker_.Clone() : null;
      lastUpdate_ = other.lastUpdate_;
      minInterval_ = other.minInterval_;
      maxInterval_ = other.maxInterval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicEventElementDTO Clone() {
      return new BasicEventElementDTO(this);
    }

    /// <summary>Field number for the "observed" field.</summary>
    public const int ObservedFieldNumber = 1;
    private global::FSR.GRPC.V3.ReferenceModel observed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel Observed {
      get { return observed_; }
      set {
        observed_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 2;
    private global::FSR.GRPC.V3.Direction direction_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.Direction Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::FSR.GRPC.V3.StateOfEvent state_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.StateOfEvent State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "messageTopic" field.</summary>
    public const int MessageTopicFieldNumber = 4;
    private string messageTopic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MessageTopic {
      get { return messageTopic_; }
      set {
        messageTopic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "messageBroker" field.</summary>
    public const int MessageBrokerFieldNumber = 5;
    private global::FSR.GRPC.V3.ReferenceModel messageBroker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel MessageBroker {
      get { return messageBroker_; }
      set {
        messageBroker_ = value;
      }
    }

    /// <summary>Field number for the "lastUpdate" field.</summary>
    public const int LastUpdateFieldNumber = 6;
    private string lastUpdate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastUpdate {
      get { return lastUpdate_; }
      set {
        lastUpdate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "minInterval" field.</summary>
    public const int MinIntervalFieldNumber = 7;
    private string minInterval_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MinInterval {
      get { return minInterval_; }
      set {
        minInterval_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxInterval" field.</summary>
    public const int MaxIntervalFieldNumber = 8;
    private string maxInterval_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaxInterval {
      get { return maxInterval_; }
      set {
        maxInterval_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BasicEventElementDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BasicEventElementDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Observed, other.Observed)) return false;
      if (Direction != other.Direction) return false;
      if (State != other.State) return false;
      if (MessageTopic != other.MessageTopic) return false;
      if (!object.Equals(MessageBroker, other.MessageBroker)) return false;
      if (LastUpdate != other.LastUpdate) return false;
      if (MinInterval != other.MinInterval) return false;
      if (MaxInterval != other.MaxInterval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (observed_ != null) hash ^= Observed.GetHashCode();
      if (Direction != 0) hash ^= Direction.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (MessageTopic.Length != 0) hash ^= MessageTopic.GetHashCode();
      if (messageBroker_ != null) hash ^= MessageBroker.GetHashCode();
      if (LastUpdate.Length != 0) hash ^= LastUpdate.GetHashCode();
      if (MinInterval.Length != 0) hash ^= MinInterval.GetHashCode();
      if (MaxInterval.Length != 0) hash ^= MaxInterval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (observed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Observed);
      }
      if (Direction != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Direction);
      }
      if (State != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (MessageTopic.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MessageTopic);
      }
      if (messageBroker_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MessageBroker);
      }
      if (LastUpdate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LastUpdate);
      }
      if (MinInterval.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MinInterval);
      }
      if (MaxInterval.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MaxInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (observed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Observed);
      }
      if (Direction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (MessageTopic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageTopic);
      }
      if (messageBroker_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageBroker);
      }
      if (LastUpdate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastUpdate);
      }
      if (MinInterval.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MinInterval);
      }
      if (MaxInterval.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaxInterval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BasicEventElementDTO other) {
      if (other == null) {
        return;
      }
      if (other.observed_ != null) {
        if (observed_ == null) {
          Observed = new global::FSR.GRPC.V3.ReferenceModel();
        }
        Observed.MergeFrom(other.Observed);
      }
      if (other.Direction != 0) {
        Direction = other.Direction;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.MessageTopic.Length != 0) {
        MessageTopic = other.MessageTopic;
      }
      if (other.messageBroker_ != null) {
        if (messageBroker_ == null) {
          MessageBroker = new global::FSR.GRPC.V3.ReferenceModel();
        }
        MessageBroker.MergeFrom(other.MessageBroker);
      }
      if (other.LastUpdate.Length != 0) {
        LastUpdate = other.LastUpdate;
      }
      if (other.MinInterval.Length != 0) {
        MinInterval = other.MinInterval;
      }
      if (other.MaxInterval.Length != 0) {
        MaxInterval = other.MaxInterval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (observed_ == null) {
              Observed = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(Observed);
            break;
          }
          case 16: {
            Direction = (global::FSR.GRPC.V3.Direction) input.ReadEnum();
            break;
          }
          case 24: {
            State = (global::FSR.GRPC.V3.StateOfEvent) input.ReadEnum();
            break;
          }
          case 34: {
            MessageTopic = input.ReadString();
            break;
          }
          case 42: {
            if (messageBroker_ == null) {
              MessageBroker = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(MessageBroker);
            break;
          }
          case 50: {
            LastUpdate = input.ReadString();
            break;
          }
          case 58: {
            MinInterval = input.ReadString();
            break;
          }
          case 66: {
            MaxInterval = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OperationDTO : pb::IMessage<OperationDTO> {
    private static readonly pb::MessageParser<OperationDTO> _parser = new pb::MessageParser<OperationDTO>(() => new OperationDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationDTO(OperationDTO other) : this() {
      inputVariables_ = other.inputVariables_.Clone();
      outputVariables_ = other.outputVariables_.Clone();
      inoutVariables_ = other.inoutVariables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationDTO Clone() {
      return new OperationDTO(this);
    }

    /// <summary>Field number for the "inputVariables" field.</summary>
    public const int InputVariablesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.OperationVariableModel> _repeated_inputVariables_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.V3.OperationVariableModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.OperationVariableModel> inputVariables_ = new pbc::RepeatedField<global::FSR.GRPC.V3.OperationVariableModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.OperationVariableModel> InputVariables {
      get { return inputVariables_; }
    }

    /// <summary>Field number for the "outputVariables" field.</summary>
    public const int OutputVariablesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.OperationVariableModel> _repeated_outputVariables_codec
        = pb::FieldCodec.ForMessage(18, global::FSR.GRPC.V3.OperationVariableModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.OperationVariableModel> outputVariables_ = new pbc::RepeatedField<global::FSR.GRPC.V3.OperationVariableModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.OperationVariableModel> OutputVariables {
      get { return outputVariables_; }
    }

    /// <summary>Field number for the "inoutVariables" field.</summary>
    public const int InoutVariablesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.OperationVariableModel> _repeated_inoutVariables_codec
        = pb::FieldCodec.ForMessage(26, global::FSR.GRPC.V3.OperationVariableModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.OperationVariableModel> inoutVariables_ = new pbc::RepeatedField<global::FSR.GRPC.V3.OperationVariableModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.OperationVariableModel> InoutVariables {
      get { return inoutVariables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inputVariables_.Equals(other.inputVariables_)) return false;
      if(!outputVariables_.Equals(other.outputVariables_)) return false;
      if(!inoutVariables_.Equals(other.inoutVariables_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inputVariables_.GetHashCode();
      hash ^= outputVariables_.GetHashCode();
      hash ^= inoutVariables_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      inputVariables_.WriteTo(output, _repeated_inputVariables_codec);
      outputVariables_.WriteTo(output, _repeated_outputVariables_codec);
      inoutVariables_.WriteTo(output, _repeated_inoutVariables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inputVariables_.CalculateSize(_repeated_inputVariables_codec);
      size += outputVariables_.CalculateSize(_repeated_outputVariables_codec);
      size += inoutVariables_.CalculateSize(_repeated_inoutVariables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationDTO other) {
      if (other == null) {
        return;
      }
      inputVariables_.Add(other.inputVariables_);
      outputVariables_.Add(other.outputVariables_);
      inoutVariables_.Add(other.inoutVariables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inputVariables_.AddEntriesFrom(input, _repeated_inputVariables_codec);
            break;
          }
          case 18: {
            outputVariables_.AddEntriesFrom(input, _repeated_outputVariables_codec);
            break;
          }
          case 26: {
            inoutVariables_.AddEntriesFrom(input, _repeated_inoutVariables_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OperationVariableModel : pb::IMessage<OperationVariableModel> {
    private static readonly pb::MessageParser<OperationVariableModel> _parser = new pb::MessageParser<OperationVariableModel>(() => new OperationVariableModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationVariableModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationVariableModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationVariableModel(OperationVariableModel other) : this() {
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationVariableModel Clone() {
      return new OperationVariableModel(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::FSR.GRPC.V3.SubmodelElementModel value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.SubmodelElementModel Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationVariableModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationVariableModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (value_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationVariableModel other) {
      if (other == null) {
        return;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::FSR.GRPC.V3.SubmodelElementModel();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (value_ == null) {
              Value = new global::FSR.GRPC.V3.SubmodelElementModel();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Intentionally empty
  /// </summary>
  public sealed partial class CapabilityDTO : pb::IMessage<CapabilityDTO> {
    private static readonly pb::MessageParser<CapabilityDTO> _parser = new pb::MessageParser<CapabilityDTO>(() => new CapabilityDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CapabilityDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CapabilityDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CapabilityDTO(CapabilityDTO other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CapabilityDTO Clone() {
      return new CapabilityDTO(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CapabilityDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CapabilityDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CapabilityDTO other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ConceptDescriptionModel : pb::IMessage<ConceptDescriptionModel> {
    private static readonly pb::MessageParser<ConceptDescriptionModel> _parser = new pb::MessageParser<ConceptDescriptionModel>(() => new ConceptDescriptionModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConceptDescriptionModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConceptDescriptionModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConceptDescriptionModel(ConceptDescriptionModel other) : this() {
      extensions_ = other.extensions_.Clone();
      category_ = other.category_;
      idShort_ = other.idShort_;
      displayName_ = other.displayName_.Clone();
      description_ = other.description_.Clone();
      administration_ = other.administration_ != null ? other.administration_.Clone() : null;
      id_ = other.id_;
      embeddedDataSpecifications_ = other.embeddedDataSpecifications_.Clone();
      isCaseOf_ = other.isCaseOf_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConceptDescriptionModel Clone() {
      return new ConceptDescriptionModel(this);
    }

    /// <summary>Field number for the "extensions" field.</summary>
    public const int ExtensionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.ExtensionModel> _repeated_extensions_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.V3.ExtensionModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.ExtensionModel> extensions_ = new pbc::RepeatedField<global::FSR.GRPC.V3.ExtensionModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.ExtensionModel> Extensions {
      get { return extensions_; }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 2;
    private string category_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "idShort" field.</summary>
    public const int IdShortFieldNumber = 3;
    private string idShort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdShort {
      get { return idShort_; }
      set {
        idShort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.LangStringModel> _repeated_displayName_codec
        = pb::FieldCodec.ForMessage(34, global::FSR.GRPC.V3.LangStringModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> displayName_ = new pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> DisplayName {
      get { return displayName_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.LangStringModel> _repeated_description_codec
        = pb::FieldCodec.ForMessage(42, global::FSR.GRPC.V3.LangStringModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> description_ = new pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> Description {
      get { return description_; }
    }

    /// <summary>Field number for the "administration" field.</summary>
    public const int AdministrationFieldNumber = 6;
    private global::FSR.GRPC.V3.AdministrativeInformationModel administration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.AdministrativeInformationModel Administration {
      get { return administration_; }
      set {
        administration_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 7;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "embeddedDataSpecifications" field.</summary>
    public const int EmbeddedDataSpecificationsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> _repeated_embeddedDataSpecifications_codec
        = pb::FieldCodec.ForMessage(66, global::FSR.GRPC.V3.EmbeddedDataSpecificationModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> embeddedDataSpecifications_ = new pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.EmbeddedDataSpecificationModel> EmbeddedDataSpecifications {
      get { return embeddedDataSpecifications_; }
    }

    /// <summary>Field number for the "isCaseOf" field.</summary>
    public const int IsCaseOfFieldNumber = 9;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.ReferenceModel> _repeated_isCaseOf_codec
        = pb::FieldCodec.ForMessage(74, global::FSR.GRPC.V3.ReferenceModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> isCaseOf_ = new pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.ReferenceModel> IsCaseOf {
      get { return isCaseOf_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConceptDescriptionModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConceptDescriptionModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!extensions_.Equals(other.extensions_)) return false;
      if (Category != other.Category) return false;
      if (IdShort != other.IdShort) return false;
      if(!displayName_.Equals(other.displayName_)) return false;
      if(!description_.Equals(other.description_)) return false;
      if (!object.Equals(Administration, other.Administration)) return false;
      if (Id != other.Id) return false;
      if(!embeddedDataSpecifications_.Equals(other.embeddedDataSpecifications_)) return false;
      if(!isCaseOf_.Equals(other.isCaseOf_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= extensions_.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (IdShort.Length != 0) hash ^= IdShort.GetHashCode();
      hash ^= displayName_.GetHashCode();
      hash ^= description_.GetHashCode();
      if (administration_ != null) hash ^= Administration.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= embeddedDataSpecifications_.GetHashCode();
      hash ^= isCaseOf_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      extensions_.WriteTo(output, _repeated_extensions_codec);
      if (Category.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Category);
      }
      if (IdShort.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IdShort);
      }
      displayName_.WriteTo(output, _repeated_displayName_codec);
      description_.WriteTo(output, _repeated_description_codec);
      if (administration_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Administration);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Id);
      }
      embeddedDataSpecifications_.WriteTo(output, _repeated_embeddedDataSpecifications_codec);
      isCaseOf_.WriteTo(output, _repeated_isCaseOf_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += extensions_.CalculateSize(_repeated_extensions_codec);
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (IdShort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdShort);
      }
      size += displayName_.CalculateSize(_repeated_displayName_codec);
      size += description_.CalculateSize(_repeated_description_codec);
      if (administration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Administration);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += embeddedDataSpecifications_.CalculateSize(_repeated_embeddedDataSpecifications_codec);
      size += isCaseOf_.CalculateSize(_repeated_isCaseOf_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConceptDescriptionModel other) {
      if (other == null) {
        return;
      }
      extensions_.Add(other.extensions_);
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.IdShort.Length != 0) {
        IdShort = other.IdShort;
      }
      displayName_.Add(other.displayName_);
      description_.Add(other.description_);
      if (other.administration_ != null) {
        if (administration_ == null) {
          Administration = new global::FSR.GRPC.V3.AdministrativeInformationModel();
        }
        Administration.MergeFrom(other.Administration);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      embeddedDataSpecifications_.Add(other.embeddedDataSpecifications_);
      isCaseOf_.Add(other.isCaseOf_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            extensions_.AddEntriesFrom(input, _repeated_extensions_codec);
            break;
          }
          case 18: {
            Category = input.ReadString();
            break;
          }
          case 26: {
            IdShort = input.ReadString();
            break;
          }
          case 34: {
            displayName_.AddEntriesFrom(input, _repeated_displayName_codec);
            break;
          }
          case 42: {
            description_.AddEntriesFrom(input, _repeated_description_codec);
            break;
          }
          case 50: {
            if (administration_ == null) {
              Administration = new global::FSR.GRPC.V3.AdministrativeInformationModel();
            }
            input.ReadMessage(Administration);
            break;
          }
          case 58: {
            Id = input.ReadString();
            break;
          }
          case 66: {
            embeddedDataSpecifications_.AddEntriesFrom(input, _repeated_embeddedDataSpecifications_codec);
            break;
          }
          case 74: {
            isCaseOf_.AddEntriesFrom(input, _repeated_isCaseOf_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReferenceModel : pb::IMessage<ReferenceModel> {
    private static readonly pb::MessageParser<ReferenceModel> _parser = new pb::MessageParser<ReferenceModel>(() => new ReferenceModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReferenceModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceModel(ReferenceModel other) : this() {
      type_ = other.type_;
      referredSemanticId_ = other.referredSemanticId_ != null ? other.referredSemanticId_.Clone() : null;
      keys_ = other.keys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceModel Clone() {
      return new ReferenceModel(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::FSR.GRPC.V3.ReferenceTypes type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceTypes Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "ReferredSemanticId" field.</summary>
    public const int ReferredSemanticIdFieldNumber = 2;
    private global::FSR.GRPC.V3.ReferenceModel referredSemanticId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel ReferredSemanticId {
      get { return referredSemanticId_; }
      set {
        referredSemanticId_ = value;
      }
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 3;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.KeyModel> _repeated_keys_codec
        = pb::FieldCodec.ForMessage(26, global::FSR.GRPC.V3.KeyModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.KeyModel> keys_ = new pbc::RepeatedField<global::FSR.GRPC.V3.KeyModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.KeyModel> Keys {
      get { return keys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReferenceModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReferenceModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(ReferredSemanticId, other.ReferredSemanticId)) return false;
      if(!keys_.Equals(other.keys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (referredSemanticId_ != null) hash ^= ReferredSemanticId.GetHashCode();
      hash ^= keys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (referredSemanticId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReferredSemanticId);
      }
      keys_.WriteTo(output, _repeated_keys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (referredSemanticId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReferredSemanticId);
      }
      size += keys_.CalculateSize(_repeated_keys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReferenceModel other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.referredSemanticId_ != null) {
        if (referredSemanticId_ == null) {
          ReferredSemanticId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        ReferredSemanticId.MergeFrom(other.ReferredSemanticId);
      }
      keys_.Add(other.keys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::FSR.GRPC.V3.ReferenceTypes) input.ReadEnum();
            break;
          }
          case 18: {
            if (referredSemanticId_ == null) {
              ReferredSemanticId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(ReferredSemanticId);
            break;
          }
          case 26: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyModel : pb::IMessage<KeyModel> {
    private static readonly pb::MessageParser<KeyModel> _parser = new pb::MessageParser<KeyModel>(() => new KeyModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyModel(KeyModel other) : this() {
      type_ = other.type_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyModel Clone() {
      return new KeyModel(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::FSR.GRPC.V3.KeyTypes type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.KeyTypes Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyModel other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::FSR.GRPC.V3.KeyTypes) input.ReadEnum();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LangStringModel : pb::IMessage<LangStringModel> {
    private static readonly pb::MessageParser<LangStringModel> _parser = new pb::MessageParser<LangStringModel>(() => new LangStringModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangStringModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangStringModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangStringModel(LangStringModel other) : this() {
      language_ = other.language_;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangStringModel Clone() {
      return new LangStringModel(this);
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 1;
    private string language_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangStringModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangStringModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Language != other.Language) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Language.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Language);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangStringModel other) {
      if (other == null) {
        return;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Language = input.ReadString();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmbeddedDataSpecificationModel : pb::IMessage<EmbeddedDataSpecificationModel> {
    private static readonly pb::MessageParser<EmbeddedDataSpecificationModel> _parser = new pb::MessageParser<EmbeddedDataSpecificationModel>(() => new EmbeddedDataSpecificationModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmbeddedDataSpecificationModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmbeddedDataSpecificationModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmbeddedDataSpecificationModel(EmbeddedDataSpecificationModel other) : this() {
      dataSpecification_ = other.dataSpecification_ != null ? other.dataSpecification_.Clone() : null;
      dataSpecificationContent_ = other.dataSpecificationContent_ != null ? other.dataSpecificationContent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmbeddedDataSpecificationModel Clone() {
      return new EmbeddedDataSpecificationModel(this);
    }

    /// <summary>Field number for the "dataSpecification" field.</summary>
    public const int DataSpecificationFieldNumber = 1;
    private global::FSR.GRPC.V3.ReferenceModel dataSpecification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel DataSpecification {
      get { return dataSpecification_; }
      set {
        dataSpecification_ = value;
      }
    }

    /// <summary>Field number for the "dataSpecificationContent" field.</summary>
    public const int DataSpecificationContentFieldNumber = 2;
    private global::FSR.GRPC.V3.DataSpecificationContentModel dataSpecificationContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.DataSpecificationContentModel DataSpecificationContent {
      get { return dataSpecificationContent_; }
      set {
        dataSpecificationContent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmbeddedDataSpecificationModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmbeddedDataSpecificationModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DataSpecification, other.DataSpecification)) return false;
      if (!object.Equals(DataSpecificationContent, other.DataSpecificationContent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataSpecification_ != null) hash ^= DataSpecification.GetHashCode();
      if (dataSpecificationContent_ != null) hash ^= DataSpecificationContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dataSpecification_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DataSpecification);
      }
      if (dataSpecificationContent_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DataSpecificationContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataSpecification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataSpecification);
      }
      if (dataSpecificationContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataSpecificationContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmbeddedDataSpecificationModel other) {
      if (other == null) {
        return;
      }
      if (other.dataSpecification_ != null) {
        if (dataSpecification_ == null) {
          DataSpecification = new global::FSR.GRPC.V3.ReferenceModel();
        }
        DataSpecification.MergeFrom(other.DataSpecification);
      }
      if (other.dataSpecificationContent_ != null) {
        if (dataSpecificationContent_ == null) {
          DataSpecificationContent = new global::FSR.GRPC.V3.DataSpecificationContentModel();
        }
        DataSpecificationContent.MergeFrom(other.DataSpecificationContent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dataSpecification_ == null) {
              DataSpecification = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(DataSpecification);
            break;
          }
          case 18: {
            if (dataSpecificationContent_ == null) {
              DataSpecificationContent = new global::FSR.GRPC.V3.DataSpecificationContentModel();
            }
            input.ReadMessage(DataSpecificationContent);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LevelTypeModel : pb::IMessage<LevelTypeModel> {
    private static readonly pb::MessageParser<LevelTypeModel> _parser = new pb::MessageParser<LevelTypeModel>(() => new LevelTypeModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LevelTypeModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelTypeModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelTypeModel(LevelTypeModel other) : this() {
      min_ = other.min_;
      nom_ = other.nom_;
      typ_ = other.typ_;
      max_ = other.max_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelTypeModel Clone() {
      return new LevelTypeModel(this);
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 1;
    private bool min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Min {
      get { return min_; }
      set {
        min_ = value;
      }
    }

    /// <summary>Field number for the "nom" field.</summary>
    public const int NomFieldNumber = 2;
    private bool nom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Nom {
      get { return nom_; }
      set {
        nom_ = value;
      }
    }

    /// <summary>Field number for the "typ" field.</summary>
    public const int TypFieldNumber = 3;
    private bool typ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Typ {
      get { return typ_; }
      set {
        typ_ = value;
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 4;
    private bool max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Max {
      get { return max_; }
      set {
        max_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LevelTypeModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LevelTypeModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Min != other.Min) return false;
      if (Nom != other.Nom) return false;
      if (Typ != other.Typ) return false;
      if (Max != other.Max) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Min != false) hash ^= Min.GetHashCode();
      if (Nom != false) hash ^= Nom.GetHashCode();
      if (Typ != false) hash ^= Typ.GetHashCode();
      if (Max != false) hash ^= Max.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Min != false) {
        output.WriteRawTag(8);
        output.WriteBool(Min);
      }
      if (Nom != false) {
        output.WriteRawTag(16);
        output.WriteBool(Nom);
      }
      if (Typ != false) {
        output.WriteRawTag(24);
        output.WriteBool(Typ);
      }
      if (Max != false) {
        output.WriteRawTag(32);
        output.WriteBool(Max);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Min != false) {
        size += 1 + 1;
      }
      if (Nom != false) {
        size += 1 + 1;
      }
      if (Typ != false) {
        size += 1 + 1;
      }
      if (Max != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LevelTypeModel other) {
      if (other == null) {
        return;
      }
      if (other.Min != false) {
        Min = other.Min;
      }
      if (other.Nom != false) {
        Nom = other.Nom;
      }
      if (other.Typ != false) {
        Typ = other.Typ;
      }
      if (other.Max != false) {
        Max = other.Max;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Min = input.ReadBool();
            break;
          }
          case 16: {
            Nom = input.ReadBool();
            break;
          }
          case 24: {
            Typ = input.ReadBool();
            break;
          }
          case 32: {
            Max = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ValueReferencePairModel : pb::IMessage<ValueReferencePairModel> {
    private static readonly pb::MessageParser<ValueReferencePairModel> _parser = new pb::MessageParser<ValueReferencePairModel>(() => new ValueReferencePairModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValueReferencePairModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueReferencePairModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueReferencePairModel(ValueReferencePairModel other) : this() {
      value_ = other.value_;
      valueId_ = other.valueId_ != null ? other.valueId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueReferencePairModel Clone() {
      return new ValueReferencePairModel(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valueId" field.</summary>
    public const int ValueIdFieldNumber = 2;
    private global::FSR.GRPC.V3.ReferenceModel valueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel ValueId {
      get { return valueId_; }
      set {
        valueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValueReferencePairModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValueReferencePairModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (!object.Equals(ValueId, other.ValueId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (valueId_ != null) hash ^= ValueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (valueId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ValueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (valueId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValueReferencePairModel other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.valueId_ != null) {
        if (valueId_ == null) {
          ValueId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        ValueId.MergeFrom(other.ValueId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
          case 18: {
            if (valueId_ == null) {
              ValueId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(ValueId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ValueListModel : pb::IMessage<ValueListModel> {
    private static readonly pb::MessageParser<ValueListModel> _parser = new pb::MessageParser<ValueListModel>(() => new ValueListModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ValueListModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueListModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueListModel(ValueListModel other) : this() {
      valueReferencePairs_ = other.valueReferencePairs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueListModel Clone() {
      return new ValueListModel(this);
    }

    /// <summary>Field number for the "valueReferencePairs" field.</summary>
    public const int ValueReferencePairsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.ValueReferencePairModel> _repeated_valueReferencePairs_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.V3.ValueReferencePairModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.ValueReferencePairModel> valueReferencePairs_ = new pbc::RepeatedField<global::FSR.GRPC.V3.ValueReferencePairModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.ValueReferencePairModel> ValueReferencePairs {
      get { return valueReferencePairs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ValueListModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ValueListModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!valueReferencePairs_.Equals(other.valueReferencePairs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= valueReferencePairs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      valueReferencePairs_.WriteTo(output, _repeated_valueReferencePairs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += valueReferencePairs_.CalculateSize(_repeated_valueReferencePairs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ValueListModel other) {
      if (other == null) {
        return;
      }
      valueReferencePairs_.Add(other.valueReferencePairs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            valueReferencePairs_.AddEntriesFrom(input, _repeated_valueReferencePairs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataSpecificationContentModel : pb::IMessage<DataSpecificationContentModel> {
    private static readonly pb::MessageParser<DataSpecificationContentModel> _parser = new pb::MessageParser<DataSpecificationContentModel>(() => new DataSpecificationContentModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSpecificationContentModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FSR.GRPC.V3.AasModelsV3Reflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSpecificationContentModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSpecificationContentModel(DataSpecificationContentModel other) : this() {
      preferredName_ = other.preferredName_.Clone();
      shortName_ = other.shortName_.Clone();
      unit_ = other.unit_;
      unitId_ = other.unitId_ != null ? other.unitId_.Clone() : null;
      symbol_ = other.symbol_;
      dataType_ = other.dataType_;
      definition_ = other.definition_.Clone();
      valueFormat_ = other.valueFormat_;
      valueList_ = other.valueList_ != null ? other.valueList_.Clone() : null;
      value_ = other.value_;
      levelType_ = other.levelType_ != null ? other.levelType_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSpecificationContentModel Clone() {
      return new DataSpecificationContentModel(this);
    }

    /// <summary>Field number for the "preferredName" field.</summary>
    public const int PreferredNameFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.LangStringModel> _repeated_preferredName_codec
        = pb::FieldCodec.ForMessage(10, global::FSR.GRPC.V3.LangStringModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> preferredName_ = new pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> PreferredName {
      get { return preferredName_; }
    }

    /// <summary>Field number for the "shortName" field.</summary>
    public const int ShortNameFieldNumber = 2;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.LangStringModel> _repeated_shortName_codec
        = pb::FieldCodec.ForMessage(18, global::FSR.GRPC.V3.LangStringModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> shortName_ = new pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> ShortName {
      get { return shortName_; }
    }

    /// <summary>Field number for the "unit" field.</summary>
    public const int UnitFieldNumber = 3;
    private string unit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Unit {
      get { return unit_; }
      set {
        unit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unitId" field.</summary>
    public const int UnitIdFieldNumber = 4;
    private global::FSR.GRPC.V3.ReferenceModel unitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ReferenceModel UnitId {
      get { return unitId_; }
      set {
        unitId_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 5;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataType" field.</summary>
    public const int DataTypeFieldNumber = 6;
    private global::FSR.GRPC.V3.DataTypeIec61360 dataType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.DataTypeIec61360 DataType {
      get { return dataType_; }
      set {
        dataType_ = value;
      }
    }

    /// <summary>Field number for the "definition" field.</summary>
    public const int DefinitionFieldNumber = 7;
    private static readonly pb::FieldCodec<global::FSR.GRPC.V3.LangStringModel> _repeated_definition_codec
        = pb::FieldCodec.ForMessage(58, global::FSR.GRPC.V3.LangStringModel.Parser);
    private readonly pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> definition_ = new pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FSR.GRPC.V3.LangStringModel> Definition {
      get { return definition_; }
    }

    /// <summary>Field number for the "valueFormat" field.</summary>
    public const int ValueFormatFieldNumber = 8;
    private string valueFormat_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValueFormat {
      get { return valueFormat_; }
      set {
        valueFormat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valueList" field.</summary>
    public const int ValueListFieldNumber = 9;
    private global::FSR.GRPC.V3.ValueListModel valueList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.ValueListModel ValueList {
      get { return valueList_; }
      set {
        valueList_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 10;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "levelType" field.</summary>
    public const int LevelTypeFieldNumber = 11;
    private global::FSR.GRPC.V3.LevelTypeModel levelType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FSR.GRPC.V3.LevelTypeModel LevelType {
      get { return levelType_; }
      set {
        levelType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSpecificationContentModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSpecificationContentModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!preferredName_.Equals(other.preferredName_)) return false;
      if(!shortName_.Equals(other.shortName_)) return false;
      if (Unit != other.Unit) return false;
      if (!object.Equals(UnitId, other.UnitId)) return false;
      if (Symbol != other.Symbol) return false;
      if (DataType != other.DataType) return false;
      if(!definition_.Equals(other.definition_)) return false;
      if (ValueFormat != other.ValueFormat) return false;
      if (!object.Equals(ValueList, other.ValueList)) return false;
      if (Value != other.Value) return false;
      if (!object.Equals(LevelType, other.LevelType)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= preferredName_.GetHashCode();
      hash ^= shortName_.GetHashCode();
      if (Unit.Length != 0) hash ^= Unit.GetHashCode();
      if (unitId_ != null) hash ^= UnitId.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (DataType != 0) hash ^= DataType.GetHashCode();
      hash ^= definition_.GetHashCode();
      if (ValueFormat.Length != 0) hash ^= ValueFormat.GetHashCode();
      if (valueList_ != null) hash ^= ValueList.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (levelType_ != null) hash ^= LevelType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      preferredName_.WriteTo(output, _repeated_preferredName_codec);
      shortName_.WriteTo(output, _repeated_shortName_codec);
      if (Unit.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Unit);
      }
      if (unitId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UnitId);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Symbol);
      }
      if (DataType != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) DataType);
      }
      definition_.WriteTo(output, _repeated_definition_codec);
      if (ValueFormat.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ValueFormat);
      }
      if (valueList_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ValueList);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Value);
      }
      if (levelType_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LevelType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += preferredName_.CalculateSize(_repeated_preferredName_codec);
      size += shortName_.CalculateSize(_repeated_shortName_codec);
      if (Unit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Unit);
      }
      if (unitId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitId);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (DataType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataType);
      }
      size += definition_.CalculateSize(_repeated_definition_codec);
      if (ValueFormat.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueFormat);
      }
      if (valueList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValueList);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (levelType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LevelType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSpecificationContentModel other) {
      if (other == null) {
        return;
      }
      preferredName_.Add(other.preferredName_);
      shortName_.Add(other.shortName_);
      if (other.Unit.Length != 0) {
        Unit = other.Unit;
      }
      if (other.unitId_ != null) {
        if (unitId_ == null) {
          UnitId = new global::FSR.GRPC.V3.ReferenceModel();
        }
        UnitId.MergeFrom(other.UnitId);
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.DataType != 0) {
        DataType = other.DataType;
      }
      definition_.Add(other.definition_);
      if (other.ValueFormat.Length != 0) {
        ValueFormat = other.ValueFormat;
      }
      if (other.valueList_ != null) {
        if (valueList_ == null) {
          ValueList = new global::FSR.GRPC.V3.ValueListModel();
        }
        ValueList.MergeFrom(other.ValueList);
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.levelType_ != null) {
        if (levelType_ == null) {
          LevelType = new global::FSR.GRPC.V3.LevelTypeModel();
        }
        LevelType.MergeFrom(other.LevelType);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            preferredName_.AddEntriesFrom(input, _repeated_preferredName_codec);
            break;
          }
          case 18: {
            shortName_.AddEntriesFrom(input, _repeated_shortName_codec);
            break;
          }
          case 26: {
            Unit = input.ReadString();
            break;
          }
          case 34: {
            if (unitId_ == null) {
              UnitId = new global::FSR.GRPC.V3.ReferenceModel();
            }
            input.ReadMessage(UnitId);
            break;
          }
          case 42: {
            Symbol = input.ReadString();
            break;
          }
          case 48: {
            DataType = (global::FSR.GRPC.V3.DataTypeIec61360) input.ReadEnum();
            break;
          }
          case 58: {
            definition_.AddEntriesFrom(input, _repeated_definition_codec);
            break;
          }
          case 66: {
            ValueFormat = input.ReadString();
            break;
          }
          case 74: {
            if (valueList_ == null) {
              ValueList = new global::FSR.GRPC.V3.ValueListModel();
            }
            input.ReadMessage(ValueList);
            break;
          }
          case 82: {
            Value = input.ReadString();
            break;
          }
          case 90: {
            if (levelType_ == null) {
              LevelType = new global::FSR.GRPC.V3.LevelTypeModel();
            }
            input.ReadMessage(LevelType);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
