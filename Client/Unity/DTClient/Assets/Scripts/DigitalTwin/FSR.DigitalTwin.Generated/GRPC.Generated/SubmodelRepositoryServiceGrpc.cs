// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Services/SubmodelRepositoryService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository {
  public static partial class SubmodelRepositoryService
  {
    static readonly string __ServiceName = "FSR.Aas.GRPC.Lib.V3.SubmodelRepositoryService";

    static readonly grpc::Marshaller<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcRequest> __Marshaller_FSR_Aas_GRPC_Lib_V3_GetAllSubmodelsRpcRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcResponse> __Marshaller_FSR_Aas_GRPC_Lib_V3_GetAllSubmodelsRpcResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcRequest> __Marshaller_FSR_Aas_GRPC_Lib_V3_GetSubmodelByIdRpcRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcResponse> __Marshaller_FSR_Aas_GRPC_Lib_V3_GetSubmodelByIdRpcResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcRequest> __Marshaller_FSR_Aas_GRPC_Lib_V3_GetAllSubmodelsBySemanticIdRpcRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcResponse> __Marshaller_FSR_Aas_GRPC_Lib_V3_GetAllSubmodelsBySemanticIdRpcResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcRequest> __Marshaller_FSR_Aas_GRPC_Lib_V3_GetAllSubmodelsByIdShortRpcRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcResponse> __Marshaller_FSR_Aas_GRPC_Lib_V3_GetAllSubmodelsByIdShortRpcResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcRequest> __Marshaller_FSR_Aas_GRPC_Lib_V3_PostSubmodelRpcRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcResponse> __Marshaller_FSR_Aas_GRPC_Lib_V3_PostSubmodelRpcResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcRequest> __Marshaller_FSR_Aas_GRPC_Lib_V3_PutSubmodelByIdRpcRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcResponse> __Marshaller_FSR_Aas_GRPC_Lib_V3_PutSubmodelByIdRpcResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcRequest> __Marshaller_FSR_Aas_GRPC_Lib_V3_DeleteSubmodelByIdRpcRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcResponse> __Marshaller_FSR_Aas_GRPC_Lib_V3_DeleteSubmodelByIdRpcResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcResponse> __Method_GetAllSubmodels = new grpc::Method<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllSubmodels",
        __Marshaller_FSR_Aas_GRPC_Lib_V3_GetAllSubmodelsRpcRequest,
        __Marshaller_FSR_Aas_GRPC_Lib_V3_GetAllSubmodelsRpcResponse);

    static readonly grpc::Method<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcResponse> __Method_GetSubmodelById = new grpc::Method<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSubmodelById",
        __Marshaller_FSR_Aas_GRPC_Lib_V3_GetSubmodelByIdRpcRequest,
        __Marshaller_FSR_Aas_GRPC_Lib_V3_GetSubmodelByIdRpcResponse);

    static readonly grpc::Method<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcResponse> __Method_GetAllSubmodelsBySemanticId = new grpc::Method<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllSubmodelsBySemanticId",
        __Marshaller_FSR_Aas_GRPC_Lib_V3_GetAllSubmodelsBySemanticIdRpcRequest,
        __Marshaller_FSR_Aas_GRPC_Lib_V3_GetAllSubmodelsBySemanticIdRpcResponse);

    static readonly grpc::Method<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcResponse> __Method_GetAllSubmodelsByIdShort = new grpc::Method<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllSubmodelsByIdShort",
        __Marshaller_FSR_Aas_GRPC_Lib_V3_GetAllSubmodelsByIdShortRpcRequest,
        __Marshaller_FSR_Aas_GRPC_Lib_V3_GetAllSubmodelsByIdShortRpcResponse);

    static readonly grpc::Method<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcResponse> __Method_PostSubmodel = new grpc::Method<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostSubmodel",
        __Marshaller_FSR_Aas_GRPC_Lib_V3_PostSubmodelRpcRequest,
        __Marshaller_FSR_Aas_GRPC_Lib_V3_PostSubmodelRpcResponse);

    static readonly grpc::Method<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcResponse> __Method_PutSubmodelById = new grpc::Method<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PutSubmodelById",
        __Marshaller_FSR_Aas_GRPC_Lib_V3_PutSubmodelByIdRpcRequest,
        __Marshaller_FSR_Aas_GRPC_Lib_V3_PutSubmodelByIdRpcResponse);

    static readonly grpc::Method<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcResponse> __Method_DeleteSubmodelById = new grpc::Method<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSubmodelById",
        __Marshaller_FSR_Aas_GRPC_Lib_V3_DeleteSubmodelByIdRpcRequest,
        __Marshaller_FSR_Aas_GRPC_Lib_V3_DeleteSubmodelByIdRpcResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.SubmodelRepositoryServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SubmodelRepositoryService</summary>
    [grpc::BindServiceMethod(typeof(SubmodelRepositoryService), "BindService")]
    public abstract partial class SubmodelRepositoryServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcResponse> GetAllSubmodels(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcResponse> GetSubmodelById(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcResponse> GetAllSubmodelsBySemanticId(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcResponse> GetAllSubmodelsByIdShort(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcResponse> PostSubmodel(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcResponse> PutSubmodelById(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcResponse> DeleteSubmodelById(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SubmodelRepositoryService</summary>
    public partial class SubmodelRepositoryServiceClient : grpc::ClientBase<SubmodelRepositoryServiceClient>
    {
      /// <summary>Creates a new client for SubmodelRepositoryService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public SubmodelRepositoryServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SubmodelRepositoryService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public SubmodelRepositoryServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected SubmodelRepositoryServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected SubmodelRepositoryServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcResponse GetAllSubmodels(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSubmodels(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcResponse GetAllSubmodels(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllSubmodels, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcResponse> GetAllSubmodelsAsync(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSubmodelsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcResponse> GetAllSubmodelsAsync(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllSubmodels, null, options, request);
      }
      public virtual global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcResponse GetSubmodelById(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSubmodelById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcResponse GetSubmodelById(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSubmodelById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcResponse> GetSubmodelByIdAsync(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSubmodelByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcResponse> GetSubmodelByIdAsync(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSubmodelById, null, options, request);
      }
      public virtual global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcResponse GetAllSubmodelsBySemanticId(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSubmodelsBySemanticId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcResponse GetAllSubmodelsBySemanticId(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllSubmodelsBySemanticId, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcResponse> GetAllSubmodelsBySemanticIdAsync(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSubmodelsBySemanticIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcResponse> GetAllSubmodelsBySemanticIdAsync(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllSubmodelsBySemanticId, null, options, request);
      }
      public virtual global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcResponse GetAllSubmodelsByIdShort(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSubmodelsByIdShort(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcResponse GetAllSubmodelsByIdShort(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllSubmodelsByIdShort, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcResponse> GetAllSubmodelsByIdShortAsync(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllSubmodelsByIdShortAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcResponse> GetAllSubmodelsByIdShortAsync(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllSubmodelsByIdShort, null, options, request);
      }
      public virtual global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcResponse PostSubmodel(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostSubmodel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcResponse PostSubmodel(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PostSubmodel, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcResponse> PostSubmodelAsync(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostSubmodelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcResponse> PostSubmodelAsync(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PostSubmodel, null, options, request);
      }
      public virtual global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcResponse PutSubmodelById(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PutSubmodelById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcResponse PutSubmodelById(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PutSubmodelById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcResponse> PutSubmodelByIdAsync(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PutSubmodelByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcResponse> PutSubmodelByIdAsync(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PutSubmodelById, null, options, request);
      }
      public virtual global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcResponse DeleteSubmodelById(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSubmodelById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcResponse DeleteSubmodelById(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSubmodelById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcResponse> DeleteSubmodelByIdAsync(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSubmodelByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcResponse> DeleteSubmodelByIdAsync(global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSubmodelById, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override SubmodelRepositoryServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SubmodelRepositoryServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(SubmodelRepositoryServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAllSubmodels, serviceImpl.GetAllSubmodels)
          .AddMethod(__Method_GetSubmodelById, serviceImpl.GetSubmodelById)
          .AddMethod(__Method_GetAllSubmodelsBySemanticId, serviceImpl.GetAllSubmodelsBySemanticId)
          .AddMethod(__Method_GetAllSubmodelsByIdShort, serviceImpl.GetAllSubmodelsByIdShort)
          .AddMethod(__Method_PostSubmodel, serviceImpl.PostSubmodel)
          .AddMethod(__Method_PutSubmodelById, serviceImpl.PutSubmodelById)
          .AddMethod(__Method_DeleteSubmodelById, serviceImpl.DeleteSubmodelById).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SubmodelRepositoryServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAllSubmodels, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsRpcResponse>(serviceImpl.GetAllSubmodels));
      serviceBinder.AddMethod(__Method_GetSubmodelById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetSubmodelByIdRpcResponse>(serviceImpl.GetSubmodelById));
      serviceBinder.AddMethod(__Method_GetAllSubmodelsBySemanticId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsBySemanticIdRpcResponse>(serviceImpl.GetAllSubmodelsBySemanticId));
      serviceBinder.AddMethod(__Method_GetAllSubmodelsByIdShort, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.GetAllSubmodelsByIdShortRpcResponse>(serviceImpl.GetAllSubmodelsByIdShort));
      serviceBinder.AddMethod(__Method_PostSubmodel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PostSubmodelRpcResponse>(serviceImpl.PostSubmodel));
      serviceBinder.AddMethod(__Method_PutSubmodelById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.PutSubmodelByIdRpcResponse>(serviceImpl.PutSubmodelById));
      serviceBinder.AddMethod(__Method_DeleteSubmodelById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcRequest, global::FSR.Aas.GRPC.Lib.V3.Services.SubmodelRepository.DeleteSubmodelByIdRpcResponse>(serviceImpl.DeleteSubmodelById));
    }

  }
}
#endregion
