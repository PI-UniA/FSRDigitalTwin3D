# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from Protos.Services import SubmodelRepositoryService_pb2 as Protos_dot_Services_dot_SubmodelRepositoryService__pb2


class SubmodelRepositoryServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetAllSubmodels = channel.unary_unary(
        '/FSR.Aas.GRPC.Lib.V3.SubmodelRepositoryService/GetAllSubmodels',
        request_serializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetAllSubmodelsRpcRequest.SerializeToString,
        response_deserializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetAllSubmodelsRpcResponse.FromString,
        )
    self.GetSubmodelById = channel.unary_unary(
        '/FSR.Aas.GRPC.Lib.V3.SubmodelRepositoryService/GetSubmodelById',
        request_serializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetSubmodelByIdRpcRequest.SerializeToString,
        response_deserializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetSubmodelByIdRpcResponse.FromString,
        )
    self.GetAllSubmodelsBySemanticId = channel.unary_unary(
        '/FSR.Aas.GRPC.Lib.V3.SubmodelRepositoryService/GetAllSubmodelsBySemanticId',
        request_serializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetAllSubmodelsBySemanticIdRpcRequest.SerializeToString,
        response_deserializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetAllSubmodelsBySemanticIdRpcResponse.FromString,
        )
    self.GetAllSubmodelsByIdShort = channel.unary_unary(
        '/FSR.Aas.GRPC.Lib.V3.SubmodelRepositoryService/GetAllSubmodelsByIdShort',
        request_serializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetAllSubmodelsByIdShortRpcRequest.SerializeToString,
        response_deserializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetAllSubmodelsByIdShortRpcResponse.FromString,
        )
    self.PostSubmodel = channel.unary_unary(
        '/FSR.Aas.GRPC.Lib.V3.SubmodelRepositoryService/PostSubmodel',
        request_serializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.PostSubmodelRpcRequest.SerializeToString,
        response_deserializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.PostSubmodelRpcResponse.FromString,
        )
    self.PutSubmodelById = channel.unary_unary(
        '/FSR.Aas.GRPC.Lib.V3.SubmodelRepositoryService/PutSubmodelById',
        request_serializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.PutSubmodelByIdRpcRequest.SerializeToString,
        response_deserializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.PutSubmodelByIdRpcResponse.FromString,
        )
    self.DeleteSubmodelById = channel.unary_unary(
        '/FSR.Aas.GRPC.Lib.V3.SubmodelRepositoryService/DeleteSubmodelById',
        request_serializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.DeleteSubmodelByIdRpcRequest.SerializeToString,
        response_deserializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.DeleteSubmodelByIdRpcResponse.FromString,
        )


class SubmodelRepositoryServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetAllSubmodels(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSubmodelById(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAllSubmodelsBySemanticId(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAllSubmodelsByIdShort(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PostSubmodel(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PutSubmodelById(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteSubmodelById(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SubmodelRepositoryServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetAllSubmodels': grpc.unary_unary_rpc_method_handler(
          servicer.GetAllSubmodels,
          request_deserializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetAllSubmodelsRpcRequest.FromString,
          response_serializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetAllSubmodelsRpcResponse.SerializeToString,
      ),
      'GetSubmodelById': grpc.unary_unary_rpc_method_handler(
          servicer.GetSubmodelById,
          request_deserializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetSubmodelByIdRpcRequest.FromString,
          response_serializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetSubmodelByIdRpcResponse.SerializeToString,
      ),
      'GetAllSubmodelsBySemanticId': grpc.unary_unary_rpc_method_handler(
          servicer.GetAllSubmodelsBySemanticId,
          request_deserializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetAllSubmodelsBySemanticIdRpcRequest.FromString,
          response_serializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetAllSubmodelsBySemanticIdRpcResponse.SerializeToString,
      ),
      'GetAllSubmodelsByIdShort': grpc.unary_unary_rpc_method_handler(
          servicer.GetAllSubmodelsByIdShort,
          request_deserializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetAllSubmodelsByIdShortRpcRequest.FromString,
          response_serializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.GetAllSubmodelsByIdShortRpcResponse.SerializeToString,
      ),
      'PostSubmodel': grpc.unary_unary_rpc_method_handler(
          servicer.PostSubmodel,
          request_deserializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.PostSubmodelRpcRequest.FromString,
          response_serializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.PostSubmodelRpcResponse.SerializeToString,
      ),
      'PutSubmodelById': grpc.unary_unary_rpc_method_handler(
          servicer.PutSubmodelById,
          request_deserializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.PutSubmodelByIdRpcRequest.FromString,
          response_serializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.PutSubmodelByIdRpcResponse.SerializeToString,
      ),
      'DeleteSubmodelById': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteSubmodelById,
          request_deserializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.DeleteSubmodelByIdRpcRequest.FromString,
          response_serializer=Protos_dot_Services_dot_SubmodelRepositoryService__pb2.DeleteSubmodelByIdRpcResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'FSR.Aas.GRPC.Lib.V3.SubmodelRepositoryService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
