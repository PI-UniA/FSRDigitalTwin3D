// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Services/Connection/DigitalTwinLayerStreamingService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection {
  public static partial class DigitalTwinLayerStreamingService
  {
    static readonly string __ServiceName = "FSR.DigitalTwinLayer.GRPC.Lib.DigitalTwinLayerStreamingService";

    static readonly grpc::Marshaller<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyRequest> __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_CreatePropertyRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyResponse> __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_CreatePropertyResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueRequest> __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_GetValueRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueResponse> __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_GetValueResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest> __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_UpdateValueRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueResponse> __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_UpdateValueResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyRequest> __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_RemovePropertyRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyResponse> __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_RemovePropertyResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.SubscribePropertyRequest> __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_SubscribePropertyRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.SubscribePropertyRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.DigitalTwinLayer.GRPC.Lib.StreamItem> __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_StreamItem = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.DigitalTwinLayer.GRPC.Lib.StreamItem.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.StreamValueResponse> __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_StreamValueResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.StreamValueResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyResponse> __Method_CreateProperty = new grpc::Method<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateProperty",
        __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_CreatePropertyRequest,
        __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_CreatePropertyResponse);

    static readonly grpc::Method<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueResponse> __Method_GetValue = new grpc::Method<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetValue",
        __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_GetValueRequest,
        __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_GetValueResponse);

    static readonly grpc::Method<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueResponse> __Method_UpdateValue = new grpc::Method<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateValue",
        __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_UpdateValueRequest,
        __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_UpdateValueResponse);

    static readonly grpc::Method<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyResponse> __Method_RemoveProperty = new grpc::Method<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveProperty",
        __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_RemovePropertyRequest,
        __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_RemovePropertyResponse);

    static readonly grpc::Method<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.SubscribePropertyRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.StreamItem> __Method_SubscribeProperty = new grpc::Method<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.SubscribePropertyRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.StreamItem>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeProperty",
        __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_SubscribePropertyRequest,
        __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_StreamItem);

    static readonly grpc::Method<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.StreamValueResponse> __Method_StreamValue = new grpc::Method<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.StreamValueResponse>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "StreamValue",
        __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_UpdateValueRequest,
        __Marshaller_FSR_DigitalTwinLayer_GRPC_Lib_StreamValueResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.DigitalTwinLayerStreamingServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DigitalTwinLayerStreamingService</summary>
    [grpc::BindServiceMethod(typeof(DigitalTwinLayerStreamingService), "BindService")]
    public abstract partial class DigitalTwinLayerStreamingServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyResponse> CreateProperty(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueResponse> GetValue(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueResponse> UpdateValue(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyResponse> RemoveProperty(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task SubscribeProperty(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.SubscribePropertyRequest request, grpc::IServerStreamWriter<global::FSR.DigitalTwinLayer.GRPC.Lib.StreamItem> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.StreamValueResponse> StreamValue(grpc::IAsyncStreamReader<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DigitalTwinLayerStreamingService</summary>
    public partial class DigitalTwinLayerStreamingServiceClient : grpc::ClientBase<DigitalTwinLayerStreamingServiceClient>
    {
      /// <summary>Creates a new client for DigitalTwinLayerStreamingService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DigitalTwinLayerStreamingServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DigitalTwinLayerStreamingService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DigitalTwinLayerStreamingServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DigitalTwinLayerStreamingServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DigitalTwinLayerStreamingServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyResponse CreateProperty(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProperty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyResponse CreateProperty(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateProperty, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyResponse> CreatePropertyAsync(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePropertyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyResponse> CreatePropertyAsync(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateProperty, null, options, request);
      }
      public virtual global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueResponse GetValue(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetValue(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueResponse GetValue(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetValue, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueResponse> GetValueAsync(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetValueAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueResponse> GetValueAsync(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetValue, null, options, request);
      }
      public virtual global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueResponse UpdateValue(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateValue(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueResponse UpdateValue(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateValue, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueResponse> UpdateValueAsync(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateValueAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueResponse> UpdateValueAsync(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateValue, null, options, request);
      }
      public virtual global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyResponse RemoveProperty(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveProperty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyResponse RemoveProperty(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveProperty, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyResponse> RemovePropertyAsync(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemovePropertyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyResponse> RemovePropertyAsync(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveProperty, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::FSR.DigitalTwinLayer.GRPC.Lib.StreamItem> SubscribeProperty(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.SubscribePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeProperty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::FSR.DigitalTwinLayer.GRPC.Lib.StreamItem> SubscribeProperty(global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.SubscribePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeProperty, null, options, request);
      }
      public virtual grpc::AsyncClientStreamingCall<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.StreamValueResponse> StreamValue(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StreamValue(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncClientStreamingCall<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.StreamValueResponse> StreamValue(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_StreamValue, null, options);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DigitalTwinLayerStreamingServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DigitalTwinLayerStreamingServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(DigitalTwinLayerStreamingServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateProperty, serviceImpl.CreateProperty)
          .AddMethod(__Method_GetValue, serviceImpl.GetValue)
          .AddMethod(__Method_UpdateValue, serviceImpl.UpdateValue)
          .AddMethod(__Method_RemoveProperty, serviceImpl.RemoveProperty)
          .AddMethod(__Method_SubscribeProperty, serviceImpl.SubscribeProperty)
          .AddMethod(__Method_StreamValue, serviceImpl.StreamValue).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DigitalTwinLayerStreamingServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateProperty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.CreatePropertyResponse>(serviceImpl.CreateProperty));
      serviceBinder.AddMethod(__Method_GetValue, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.GetValueResponse>(serviceImpl.GetValue));
      serviceBinder.AddMethod(__Method_UpdateValue, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueResponse>(serviceImpl.UpdateValue));
      serviceBinder.AddMethod(__Method_RemoveProperty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.RemovePropertyResponse>(serviceImpl.RemoveProperty));
      serviceBinder.AddMethod(__Method_SubscribeProperty, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.SubscribePropertyRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.StreamItem>(serviceImpl.SubscribeProperty));
      serviceBinder.AddMethod(__Method_StreamValue, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.UpdateValueRequest, global::FSR.DigitalTwinLayer.GRPC.Lib.Services.Connection.StreamValueResponse>(serviceImpl.StreamValue));
    }

  }
}
#endregion
